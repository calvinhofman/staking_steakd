{
  "version": 3,
  "sources": ["../../@wagmi/connectors/dist/walletConnect.js", "../../@wagmi/connectors/dist/walletConnectLegacy.js", "../../@wagmi/core/dist/providers/jsonRpc.js", "../../@web3modal/ethereum/dist/index.es.js"],
  "sourcesContent": ["import {\r\n  Connector,\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateMethod,\r\n  __privateSet,\r\n  __publicField\r\n} from \"./chunk-QYMCVNHT.js\";\r\n\r\n// src/walletConnect.ts\r\nimport {\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  createWalletClient,\r\n  custom,\r\n  getAddress,\r\n  numberToHex\r\n} from \"viem\";\r\nvar NAMESPACE = \"eip155\";\r\nvar STORE_KEY = \"store\";\r\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\r\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\r\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\r\nvar WalletConnectConnector = class extends Connector {\r\n  constructor(config) {\r\n    super({\r\n      ...config,\r\n      options: { isNewChainsStale: true, ...config.options }\r\n    });\r\n    __privateAdd(this, _createProvider);\r\n    __privateAdd(this, _initProvider);\r\n    __privateAdd(this, _isChainsStale);\r\n    __privateAdd(this, _setupListeners);\r\n    __privateAdd(this, _removeListeners);\r\n    __privateAdd(this, _setRequestedChainsIds);\r\n    __privateAdd(this, _getRequestedChainsIds);\r\n    __privateAdd(this, _getNamespaceChainsIds);\r\n    __privateAdd(this, _getNamespaceMethods);\r\n    __publicField(this, \"id\", \"walletConnect\");\r\n    __publicField(this, \"name\", \"WalletConnect\");\r\n    __publicField(this, \"ready\", true);\r\n    __privateAdd(this, _provider, void 0);\r\n    __privateAdd(this, _initProviderPromise, void 0);\r\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\r\n      if (accounts.length === 0)\r\n        this.emit(\"disconnect\");\r\n      else\r\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\r\n    });\r\n    __publicField(this, \"onChainChanged\", (chainId) => {\r\n      const id = Number(chainId);\r\n      const unsupported = this.isChainUnsupported(id);\r\n      this.emit(\"change\", { chain: { id, unsupported } });\r\n    });\r\n    __publicField(this, \"onDisconnect\", () => {\r\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\r\n      this.emit(\"disconnect\");\r\n    });\r\n    __publicField(this, \"onDisplayUri\", (uri) => {\r\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\r\n    });\r\n    __publicField(this, \"onConnect\", () => {\r\n      this.emit(\"connect\", {});\r\n    });\r\n    __privateMethod(this, _createProvider, createProvider_fn).call(this);\r\n  }\r\n  async connect({ chainId, pairingTopic } = {}) {\r\n    try {\r\n      let targetChainId = chainId;\r\n      if (!targetChainId) {\r\n        const store = this.storage?.getItem(STORE_KEY);\r\n        const lastUsedChainId = store?.state?.data?.chain?.id;\r\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\r\n          targetChainId = lastUsedChainId;\r\n        else\r\n          targetChainId = this.chains[0]?.id;\r\n      }\r\n      if (!targetChainId)\r\n        throw new Error(\"No chains found on connector.\");\r\n      const provider = await this.getProvider();\r\n      __privateMethod(this, _setupListeners, setupListeners_fn).call(this);\r\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\r\n      if (provider.session && isChainsStale)\r\n        await provider.disconnect();\r\n      if (!provider.session || isChainsStale) {\r\n        const optionalChains = this.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);\r\n        this.emit(\"message\", { type: \"connecting\" });\r\n        await provider.connect({\r\n          pairingTopic,\r\n          chains: [targetChainId],\r\n          optionalChains\r\n        });\r\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({ id: id2 }) => id2));\r\n      }\r\n      const accounts = await provider.enable();\r\n      const account = getAddress(accounts[0]);\r\n      const id = await this.getChainId();\r\n      const unsupported = this.isChainUnsupported(id);\r\n      return {\r\n        account,\r\n        chain: { id, unsupported }\r\n      };\r\n    } catch (error) {\r\n      if (/user rejected/i.test(error?.message)) {\r\n        throw new UserRejectedRequestError(error);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n  async disconnect() {\r\n    const provider = await this.getProvider();\r\n    try {\r\n      await provider.disconnect();\r\n    } catch (error) {\r\n      if (!/No matching key/i.test(error.message))\r\n        throw error;\r\n    } finally {\r\n      __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\r\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\r\n    }\r\n  }\r\n  async getAccount() {\r\n    const { accounts } = await this.getProvider();\r\n    return getAddress(accounts[0]);\r\n  }\r\n  async getChainId() {\r\n    const { chainId } = await this.getProvider();\r\n    return chainId;\r\n  }\r\n  async getProvider({ chainId } = {}) {\r\n    if (!__privateGet(this, _provider))\r\n      await __privateMethod(this, _createProvider, createProvider_fn).call(this);\r\n    if (chainId)\r\n      await this.switchChain(chainId);\r\n    return __privateGet(this, _provider);\r\n  }\r\n  async getWalletClient({ chainId } = {}) {\r\n    const [provider, account] = await Promise.all([\r\n      this.getProvider({ chainId }),\r\n      this.getAccount()\r\n    ]);\r\n    const chain = this.chains.find((x) => x.id === chainId);\r\n    if (!provider)\r\n      throw new Error(\"provider is required.\");\r\n    return createWalletClient({\r\n      account,\r\n      chain,\r\n      transport: custom(provider)\r\n    });\r\n  }\r\n  async isAuthorized() {\r\n    try {\r\n      const [account, provider] = await Promise.all([\r\n        this.getAccount(),\r\n        this.getProvider()\r\n      ]);\r\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\r\n      if (!account)\r\n        return false;\r\n      if (isChainsStale && provider.session) {\r\n        try {\r\n          await provider.disconnect();\r\n        } catch {\r\n        }\r\n        return false;\r\n      }\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  async switchChain(chainId) {\r\n    const chain = this.chains.find((chain2) => chain2.id === chainId);\r\n    if (!chain)\r\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\r\n    try {\r\n      const provider = await this.getProvider();\r\n      const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\r\n      const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\r\n      const isChainApproved = namespaceChains.includes(chainId);\r\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\r\n        await provider.request({\r\n          method: ADD_ETH_CHAIN_METHOD,\r\n          params: [\r\n            {\r\n              chainId: numberToHex(chain.id),\r\n              blockExplorerUrls: [chain.blockExplorers?.default],\r\n              chainName: chain.name,\r\n              nativeCurrency: chain.nativeCurrency,\r\n              rpcUrls: [...chain.rpcUrls.default.http]\r\n            }\r\n          ]\r\n        });\r\n        const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\r\n        requestedChains.push(chainId);\r\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\r\n      }\r\n      await provider.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: numberToHex(chainId) }]\r\n      });\r\n      return chain;\r\n    } catch (error) {\r\n      const message = typeof error === \"string\" ? error : error?.message;\r\n      if (/user rejected request/i.test(message)) {\r\n        throw new UserRejectedRequestError(error);\r\n      }\r\n      throw new SwitchChainError(error);\r\n    }\r\n  }\r\n};\r\n_provider = new WeakMap();\r\n_initProviderPromise = new WeakMap();\r\n_createProvider = new WeakSet();\r\ncreateProvider_fn = async function() {\r\n  if (!__privateGet(this, _initProviderPromise) && typeof window !== \"undefined\") {\r\n    __privateSet(this, _initProviderPromise, __privateMethod(this, _initProvider, initProvider_fn).call(this));\r\n  }\r\n  return __privateGet(this, _initProviderPromise);\r\n};\r\n_initProvider = new WeakSet();\r\ninitProvider_fn = async function() {\r\n  const {\r\n    default: EthereumProvider,\r\n    OPTIONAL_EVENTS,\r\n    OPTIONAL_METHODS\r\n  } = await import(\"@walletconnect/ethereum-provider\");\r\n  const [defaultChain, ...optionalChains] = this.chains.map(({ id }) => id);\r\n  if (defaultChain) {\r\n    const { projectId, showQrModal = true, qrModalOptions } = this.options;\r\n    __privateSet(this, _provider, await EthereumProvider.init({\r\n      showQrModal,\r\n      qrModalOptions,\r\n      projectId,\r\n      optionalMethods: OPTIONAL_METHODS,\r\n      optionalEvents: OPTIONAL_EVENTS,\r\n      chains: [defaultChain],\r\n      optionalChains,\r\n      rpcMap: Object.fromEntries(\r\n        this.chains.map((chain) => [\r\n          chain.id,\r\n          chain.rpcUrls.default.http[0]\r\n        ])\r\n      )\r\n    }));\r\n  }\r\n};\r\n_isChainsStale = new WeakSet();\r\nisChainsStale_fn = function() {\r\n  const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\r\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD))\r\n    return false;\r\n  if (!this.options.isNewChainsStale)\r\n    return false;\r\n  const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\r\n  const connectorChains = this.chains.map(({ id }) => id);\r\n  const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\r\n  if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))\r\n    return false;\r\n  return !connectorChains.every((id) => requestedChains.includes(id));\r\n};\r\n_setupListeners = new WeakSet();\r\nsetupListeners_fn = function() {\r\n  if (!__privateGet(this, _provider))\r\n    return;\r\n  __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\r\n  __privateGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\r\n  __privateGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\r\n  __privateGet(this, _provider).on(\"disconnect\", this.onDisconnect);\r\n  __privateGet(this, _provider).on(\"session_delete\", this.onDisconnect);\r\n  __privateGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\r\n  __privateGet(this, _provider).on(\"connect\", this.onConnect);\r\n};\r\n_removeListeners = new WeakSet();\r\nremoveListeners_fn = function() {\r\n  if (!__privateGet(this, _provider))\r\n    return;\r\n  __privateGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\r\n  __privateGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\r\n  __privateGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\r\n  __privateGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\r\n  __privateGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\r\n  __privateGet(this, _provider).removeListener(\"connect\", this.onConnect);\r\n};\r\n_setRequestedChainsIds = new WeakSet();\r\nsetRequestedChainsIds_fn = function(chains) {\r\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\r\n};\r\n_getRequestedChainsIds = new WeakSet();\r\ngetRequestedChainsIds_fn = function() {\r\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\r\n};\r\n_getNamespaceChainsIds = new WeakSet();\r\ngetNamespaceChainsIds_fn = function() {\r\n  if (!__privateGet(this, _provider))\r\n    return [];\r\n  const chainIds = __privateGet(this, _provider).session?.namespaces[NAMESPACE]?.chains?.map(\r\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\r\n  );\r\n  return chainIds ?? [];\r\n};\r\n_getNamespaceMethods = new WeakSet();\r\ngetNamespaceMethods_fn = function() {\r\n  if (!__privateGet(this, _provider))\r\n    return [];\r\n  const methods = __privateGet(this, _provider).session?.namespaces[NAMESPACE]?.methods;\r\n  return methods ?? [];\r\n};\r\nexport {\r\n  WalletConnectConnector\r\n};\r\n", "import {\r\n  normalizeChainId\r\n} from \"./chunk-OQILYQDO.js\";\r\nimport {\r\n  Connector,\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateMethod,\r\n  __privateSet,\r\n  __publicField\r\n} from \"./chunk-QYMCVNHT.js\";\r\n\r\n// src/walletConnectLegacy.ts\r\nimport {\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  createWalletClient,\r\n  custom,\r\n  getAddress,\r\n  numberToHex\r\n} from \"viem\";\r\nvar switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i;\r\nvar _provider, _switchChain, switchChain_fn;\r\nvar WalletConnectLegacyConnector = class extends Connector {\r\n  constructor() {\r\n    super(...arguments);\r\n    __privateAdd(this, _switchChain);\r\n    __publicField(this, \"id\", \"walletConnectLegacy\");\r\n    __publicField(this, \"name\", \"WalletConnectLegacy\");\r\n    __publicField(this, \"ready\", true);\r\n    __privateAdd(this, _provider, void 0);\r\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\r\n      if (accounts.length === 0)\r\n        this.emit(\"disconnect\");\r\n      else\r\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\r\n    });\r\n    __publicField(this, \"onChainChanged\", (chainId) => {\r\n      const id = normalizeChainId(chainId);\r\n      const unsupported = this.isChainUnsupported(id);\r\n      this.emit(\"change\", { chain: { id, unsupported } });\r\n    });\r\n    __publicField(this, \"onDisconnect\", () => {\r\n      this.emit(\"disconnect\");\r\n    });\r\n  }\r\n  async connect({ chainId } = {}) {\r\n    try {\r\n      let targetChainId = chainId;\r\n      if (!targetChainId) {\r\n        const store = this.storage?.getItem(\"store\");\r\n        const lastUsedChainId = store?.state?.data?.chain?.id;\r\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\r\n          targetChainId = lastUsedChainId;\r\n      }\r\n      const provider = await this.getProvider({\r\n        chainId: targetChainId,\r\n        create: true\r\n      });\r\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\r\n      provider.on(\"chainChanged\", this.onChainChanged);\r\n      provider.on(\"disconnect\", this.onDisconnect);\r\n      setTimeout(() => this.emit(\"message\", { type: \"connecting\" }), 0);\r\n      const accounts = await provider.enable();\r\n      const account = getAddress(accounts[0]);\r\n      const id = await this.getChainId();\r\n      const unsupported = this.isChainUnsupported(id);\r\n      const walletName = provider.connector?.peerMeta?.name ?? \"\";\r\n      if (switchChainAllowedRegex.test(walletName))\r\n        this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\r\n      return {\r\n        account,\r\n        chain: { id, unsupported }\r\n      };\r\n    } catch (error) {\r\n      if (/user closed modal/i.test(error.message))\r\n        throw new UserRejectedRequestError(error);\r\n      throw error;\r\n    }\r\n  }\r\n  async disconnect() {\r\n    const provider = await this.getProvider();\r\n    await provider.disconnect();\r\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\r\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\r\n    provider.removeListener(\"disconnect\", this.onDisconnect);\r\n    typeof localStorage !== \"undefined\" && localStorage.removeItem(\"walletconnect\");\r\n  }\r\n  async getAccount() {\r\n    const provider = await this.getProvider();\r\n    const accounts = provider.accounts;\r\n    return getAddress(accounts[0]);\r\n  }\r\n  async getChainId() {\r\n    const provider = await this.getProvider();\r\n    const chainId = normalizeChainId(provider.chainId);\r\n    return chainId;\r\n  }\r\n  async getProvider({\r\n    chainId,\r\n    create\r\n  } = {}) {\r\n    if (!__privateGet(this, _provider) || chainId || create) {\r\n      const rpc = !this.options?.infuraId ? this.chains.reduce(\r\n        (rpc2, chain) => ({\r\n          ...rpc2,\r\n          [chain.id]: chain.rpcUrls.default.http[0]\r\n        }),\r\n        {}\r\n      ) : {};\r\n      const WalletConnectProvider = (await import(\"@walletconnect/legacy-provider\")).default;\r\n      __privateSet(this, _provider, new WalletConnectProvider({\r\n        ...this.options,\r\n        chainId,\r\n        rpc: { ...rpc, ...this.options?.rpc }\r\n      }));\r\n      __privateGet(this, _provider).http = await __privateGet(this, _provider).setHttpProvider(chainId);\r\n    }\r\n    return __privateGet(this, _provider);\r\n  }\r\n  async getWalletClient({ chainId } = {}) {\r\n    const [provider, account] = await Promise.all([\r\n      this.getProvider({ chainId }),\r\n      this.getAccount()\r\n    ]);\r\n    const chain = this.chains.find((x) => x.id === chainId);\r\n    if (!provider)\r\n      throw new Error(\"provider is required.\");\r\n    return createWalletClient({\r\n      account,\r\n      chain,\r\n      transport: custom(provider)\r\n    });\r\n  }\r\n  async isAuthorized() {\r\n    try {\r\n      const account = await this.getAccount();\r\n      return !!account;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n_provider = new WeakMap();\r\n_switchChain = new WeakSet();\r\nswitchChain_fn = async function(chainId) {\r\n  const provider = await this.getProvider();\r\n  const id = numberToHex(chainId);\r\n  try {\r\n    await Promise.race([\r\n      provider.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: id }]\r\n      }),\r\n      new Promise(\r\n        (res) => this.on(\"change\", ({ chain }) => {\r\n          if (chain?.id === chainId)\r\n            res(chainId);\r\n        })\r\n      )\r\n    ]);\r\n    return this.chains.find((x) => x.id === chainId) ?? {\r\n      id: chainId,\r\n      name: `Chain ${id}`,\r\n      network: `${id}`,\r\n      nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\r\n      rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\r\n    };\r\n  } catch (error) {\r\n    const message = typeof error === \"string\" ? error : error?.message;\r\n    if (/user rejected request/i.test(message))\r\n      throw new UserRejectedRequestError(error);\r\n    throw new SwitchChainError(error);\r\n  }\r\n};\r\nexport {\r\n  WalletConnectLegacyConnector\r\n};\r\n", "import \"../chunk-MQXBDTVK.js\";\r\n\r\n// src/providers/jsonRpc.ts\r\nfunction jsonRpcProvider({\r\n  rpc\r\n}) {\r\n  return function(chain) {\r\n    const rpcConfig = rpc(chain);\r\n    if (!rpcConfig || rpcConfig.http === \"\")\r\n      return null;\r\n    return {\r\n      chain: {\r\n        ...chain,\r\n        rpcUrls: {\r\n          ...chain.rpcUrls,\r\n          default: { http: [rpcConfig.http] }\r\n        }\r\n      },\r\n      rpcUrls: {\r\n        http: [rpcConfig.http],\r\n        webSocket: rpcConfig.webSocket ? [rpcConfig.webSocket] : void 0\r\n      }\r\n    };\r\n  };\r\n}\r\nexport {\r\n  jsonRpcProvider\r\n};\r\n", "import{disconnect as d,getAccount as u,watchAccount as w,fetchBalance as C,getNetwork as m,watchNetwork as p,switchNetwork as f,fetchEnsName as g,fetchEnsAvatar as v,connect as h,InjectedConnector as y}from\"@wagmi/core\";import{WalletConnectConnector as I}from\"@wagmi/connectors/walletConnect\";import{WalletConnectLegacyConnector as W}from\"@wagmi/core/connectors/walletConnectLegacy\";import{jsonRpcProvider as E}from\"@wagmi/core/providers/jsonRpc\";const P=\"wallet_addEthereumChain\";class L{constructor(n,t){this.wagmi={},this.walletConnectVersion=1,this.chains=[],this.namespace=\"eip155\",this.disconnect=d,this.getAccount=u,this.watchAccount=w,this.fetchBalance=C,this.getNetwork=m,this.watchNetwork=p,this.switchNetwork=f,this.fetchEnsName=g,this.fetchEnsAvatar=v,this.wagmi=n,this.chains=t;const{isV2:e}=this.getWalletConnectConnectors();this.walletConnectVersion=e?2:1}getWalletConnectConnectors(){const n=this.wagmi.connectors.find(o=>o.id===\"walletConnect\"),t=this.wagmi.connectors.find(o=>o.id===\"walletConnectLegacy\"),e=n??t;if(!e)throw new Error(\"WalletConnectConnector or WalletConnectLegacyConnector is required\");return{isV2:!!n,connector:e}}async connectWalletConnectV1(n,t){return new Promise((e,o)=>{n.once(\"message\",async({type:i})=>{if(i===\"connecting\"){const c=(await n.getProvider()).connector;t(c.uri),c.on(\"disconnect\",()=>{o(Error())}),c.on(\"connect\",()=>{e()})}})})}async connectWalletConnectV2(n,t){return await n.getProvider(),new Promise(e=>{n.once(\"message\",o=>{o.type===\"display_uri\"&&(t(o.data),e())})})}getConnectorById(n){const t=this.wagmi.connectors.find(e=>e.id===n);if(!t)throw new Error(`Connector for id ${n} was not found`);return t}getConnectors(){return this.wagmi.connectors.filter(n=>!n.id.includes(\"walletConnect\"))}async connectWalletConnect(n,t){const{connector:e,isV2:o}=this.getWalletConnectConnectors(),i={connector:e};t&&(i.chainId=t);const c=o?this.connectWalletConnectV2.bind(this):this.connectWalletConnectV1.bind(this);return Promise.all([h(i),c(e,n)])}async connectConnector(n,t){const e={connector:this.getConnectorById(n)};return t&&(e.chainId=t),await h(e)}isInjectedProviderInstalled(){return typeof window.ethereum<\"u\"}safeCheckInjectedProvider(n){var t;try{const e=String(n);return!!((t=window.ethereum)!=null&&t[e])}catch(e){return console.error(e),!1}}async getConnectedChainIds(){var n,t,e;const{connector:o,isV2:i}=this.getWalletConnectConnectors();if(i){const c=(t=(n=(await o.getProvider()).signer)==null?void 0:n.session)==null?void 0:t.namespaces,l=(e=c?.[this.namespace])==null?void 0:e.methods;if(l!=null&&l.includes(P))return\"ALL\";if(c){const a=[];return Object.keys(c).forEach(s=>{s.includes(this.namespace)&&a.push(...c[s].accounts)}),a?.map(s=>s.split(\":\")[1])}}return\"ALL\"}}const k=\"eip155\";function b({projectId:r}){return E({rpc:n=>{var t;return[1,3,4,5,10,42,56,69,97,100,137,280,324,420,42161,42220,43114,80001,421611,421613,1313161554,1313161555].includes(n.id)?{http:`https://rpc.walletconnect.com/v1/?chainId=${k}:${n.id}&projectId=${r}`}:{http:n.rpcUrls.default.http[0],webSocket:(t=n.rpcUrls.default.webSocket)==null?void 0:t[0]}}})}function B({chains:r,version:n,projectId:t}){const e=n===1,o=[new y({chains:r})];return e?o.unshift(new W({chains:r,options:{qrcode:!1}})):o.unshift(new I({chains:r,options:{projectId:t,showQrModal:!1}})),o}export{L as EthereumClient,B as w3mConnectors,b as w3mProvider};\r\n"],
  "mappings": "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",
  "names": ["_provider"]
}
