import {
  HttpConnection,
  JsonRpcProvider,
  detect,
  esm_default,
  esm_exports,
  formatJsonRpcError,
  formatJsonRpcRequest,
  formatJsonRpcResult,
  getBigIntRpcId,
  init_es,
  init_esm,
  init_esm3 as init_esm2,
  isJsonRpcError,
  isJsonRpcRequest,
  isJsonRpcResponse,
  isJsonRpcResult,
  isLocalhostUrl,
  isWsUrl,
  parseConnectionError,
  require_browser,
  require_cjs,
  require_cjs2,
  require_decode_uri_component,
  require_filter_obj,
  require_split_on_first,
  require_strict_uri_encode,
  require_tslib,
  safeJsonParse,
  safeJsonStringify
} from "./chunk-WBQXHGVE.js";
import {
  require_events
} from "./chunk-2U65H46M.js";
import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-JZQ37OGZ.js";

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a2, b4) {
      var ah = a2 >>> 16 & 65535, al = a2 & 65535;
      var bh = b4 >>> 16 & 65535, bl = b4 & 65535;
      return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a2, b4) {
      return a2 + b4 | 0;
    }
    exports.add = add;
    function sub(a2, b4) {
      return a2 - b4 | 0;
    }
    exports.sub = sub;
    function rotl(x3, n2) {
      return x3 << n2 | x3 >>> 32 - n2;
    }
    exports.rotl = rotl;
    function rotr(x3, n2) {
      return x3 << 32 - n2 | x3 >>> n2;
    }
    exports.rotr = rotr;
    function isIntegerShim(n2) {
      return typeof n2 === "number" && isFinite(n2) && Math.floor(n2) === n2;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n2) {
      return exports.isInteger(n2) && (n2 >= -exports.MAX_SAFE_INTEGER && n2 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readInt32BE(array, offset);
      var lo = readInt32BE(array, offset + 4);
      return hi * 4294967296 + lo - (lo >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readUint32BE(array, offset);
      var lo = readUint32BE(array, offset + 4);
      return hi * 4294967296 + lo;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo = readInt32LE(array, offset);
      var hi = readInt32LE(array, offset + 4);
      return hi * 4294967296 + lo - (lo >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo = readUint32LE(array, offset);
      var hi = readUint32LE(array, offset + 4);
      return hi * 4294967296 + lo;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i2 = bitLength / 8 + offset - 1; i2 >= offset; i2--) {
        result += array[i2] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i2 = offset; i2 < offset + bitLength / 8; i2++) {
        result += array[i2] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i2 = bitLength / 8 + offset - 1; i2 >= offset; i2--) {
        out[i2] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i2 = offset; i2 < offset + bitLength / 8; i2++) {
        out[i2] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i2 = 0; i2 < array.length; i2++) {
        array[i2] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j0 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j4 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j5 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j6 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x0 = j0;
      var x1 = j1;
      var x22 = j22;
      var x3 = j32;
      var x4 = j4;
      var x5 = j5;
      var x6 = j6;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i2 = 0; i2 < ROUNDS; i2 += 2) {
        x0 = x0 + x4 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x3 = x3 + x7 | 0;
        x15 ^= x3;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x3 = x3 + x7 | 0;
        x15 ^= x3;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x0 = x0 + x4 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x3 = x3 + x4 | 0;
        x14 ^= x3;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x3 = x3 + x4 | 0;
        x14 ^= x3;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x3 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x4 + j4 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j5 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i2 = 0; i2 < src2.length; i2 += 64) {
        core(block, nc, key);
        for (var j4 = i2; j4 < i2 + 64 && j4 < src2.length; j4++) {
          dst[j4] = src2[j4] ^ block[j4 - i2];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a2, b4) {
      return (a2 | 0) - (b4 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a2, b4) {
      if (a2.length !== b4.length) {
        return 0;
      }
      var result = 0;
      for (var i2 = 0; i2 < a2.length; i2++) {
        result |= a2[i2] ^ b4[i2];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a2, b4) {
      if (a2.length === 0 || b4.length === 0) {
        return false;
      }
      return compare2(a2, b4) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t0 = key[0] | key[1] << 8;
          this._r[0] = t0 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
          var t2 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m3, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t0 = m3[mpos + 0] | m3[mpos + 1] << 8;
            h0 += t0 & 8191;
            var t1 = m3[mpos + 2] | m3[mpos + 3] << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            var t2 = m3[mpos + 4] | m3[mpos + 5] << 8;
            h2 += (t1 >>> 10 | t2 << 6) & 8191;
            var t3 = m3[mpos + 6] | m3[mpos + 7] << 8;
            h3 += (t2 >>> 7 | t3 << 9) & 8191;
            var t4 = m3[mpos + 8] | m3[mpos + 9] << 8;
            h4 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            var t5 = m3[mpos + 10] | m3[mpos + 11] << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m3[mpos + 12] | m3[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m3[mpos + 14] | m3[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c2 = 0;
            var d0 = c2;
            d0 += h0 * r0;
            d0 += h1 * (5 * r9);
            d0 += h2 * (5 * r8);
            d0 += h3 * (5 * r7);
            d0 += h4 * (5 * r6);
            c2 = d0 >>> 13;
            d0 &= 8191;
            d0 += h5 * (5 * r5);
            d0 += h6 * (5 * r4);
            d0 += h7 * (5 * r3);
            d0 += h8 * (5 * r2);
            d0 += h9 * (5 * r1);
            c2 += d0 >>> 13;
            d0 &= 8191;
            var d1 = c2;
            d1 += h0 * r1;
            d1 += h1 * r0;
            d1 += h2 * (5 * r9);
            d1 += h3 * (5 * r8);
            d1 += h4 * (5 * r7);
            c2 = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r2);
            c2 += d1 >>> 13;
            d1 &= 8191;
            var d2 = c2;
            d2 += h0 * r2;
            d2 += h1 * r1;
            d2 += h2 * r0;
            d2 += h3 * (5 * r9);
            d2 += h4 * (5 * r8);
            c2 = d2 >>> 13;
            d2 &= 8191;
            d2 += h5 * (5 * r7);
            d2 += h6 * (5 * r6);
            d2 += h7 * (5 * r5);
            d2 += h8 * (5 * r4);
            d2 += h9 * (5 * r3);
            c2 += d2 >>> 13;
            d2 &= 8191;
            var d3 = c2;
            d3 += h0 * r3;
            d3 += h1 * r2;
            d3 += h2 * r1;
            d3 += h3 * r0;
            d3 += h4 * (5 * r9);
            c2 = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c2 += d3 >>> 13;
            d3 &= 8191;
            var d4 = c2;
            d4 += h0 * r4;
            d4 += h1 * r3;
            d4 += h2 * r2;
            d4 += h3 * r1;
            d4 += h4 * r0;
            c2 = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c2 += d4 >>> 13;
            d4 &= 8191;
            var d5 = c2;
            d5 += h0 * r5;
            d5 += h1 * r4;
            d5 += h2 * r3;
            d5 += h3 * r2;
            d5 += h4 * r1;
            c2 = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r0;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c2 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c2;
            d6 += h0 * r6;
            d6 += h1 * r5;
            d6 += h2 * r4;
            d6 += h3 * r3;
            d6 += h4 * r2;
            c2 = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c2 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c2;
            d7 += h0 * r7;
            d7 += h1 * r6;
            d7 += h2 * r5;
            d7 += h3 * r4;
            d7 += h4 * r3;
            c2 = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r2;
            d7 += h6 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c2 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c2;
            d8 += h0 * r8;
            d8 += h1 * r7;
            d8 += h2 * r6;
            d8 += h3 * r5;
            d8 += h4 * r4;
            c2 = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r2;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c2 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c2;
            d9 += h0 * r9;
            d9 += h1 * r8;
            d9 += h2 * r7;
            d9 += h3 * r6;
            d9 += h4 * r5;
            c2 = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r2;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c2 += d9 >>> 13;
            d9 &= 8191;
            c2 = (c2 << 2) + c2 | 0;
            c2 = c2 + d0 | 0;
            d0 = c2 & 8191;
            c2 = c2 >>> 13;
            d1 += c2;
            h0 = d0;
            h1 = d1;
            h2 = d2;
            h3 = d3;
            h4 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h0;
          this._h[1] = h1;
          this._h[2] = h2;
          this._h[3] = h3;
          this._h[4] = h4;
          this._h[5] = h5;
          this._h[6] = h6;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g3 = new Uint16Array(10);
          var c2;
          var mask;
          var f3;
          var i2;
          if (this._leftover) {
            i2 = this._leftover;
            this._buffer[i2++] = 1;
            for (; i2 < 16; i2++) {
              this._buffer[i2] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c2 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i2 = 2; i2 < 10; i2++) {
            this._h[i2] += c2;
            c2 = this._h[i2] >>> 13;
            this._h[i2] &= 8191;
          }
          this._h[0] += c2 * 5;
          c2 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c2;
          c2 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c2;
          g3[0] = this._h[0] + 5;
          c2 = g3[0] >>> 13;
          g3[0] &= 8191;
          for (i2 = 1; i2 < 10; i2++) {
            g3[i2] = this._h[i2] + c2;
            c2 = g3[i2] >>> 13;
            g3[i2] &= 8191;
          }
          g3[9] -= 1 << 13;
          mask = (c2 ^ 1) - 1;
          for (i2 = 0; i2 < 10; i2++) {
            g3[i2] &= mask;
          }
          mask = ~mask;
          for (i2 = 0; i2 < 10; i2++) {
            this._h[i2] = this._h[i2] & mask | g3[i2];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f3 = this._h[0] + this._pad[0];
          this._h[0] = f3 & 65535;
          for (i2 = 1; i2 < 8; i2++) {
            f3 = (this._h[i2] + this._pad[i2] | 0) + (f3 >>> 16) | 0;
            this._h[i2] = f3 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m3) {
          var mpos = 0;
          var bytes = m3.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i2 = 0; i2 < want; i2++) {
              this._buffer[this._leftover + i2] = m3[mpos + i2];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m3, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i2 = 0; i2 < bytes; i2++) {
              this._buffer[this._leftover + i2] = m3[mpos + i2];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h2 = new Poly1305(key);
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a2, b4) {
      if (a2.length !== exports.DIGEST_LENGTH || b4.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a2, b4);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h2 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h2.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h2.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h2.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h2.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length2 = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length2);
          }
          h2.update(length2);
          binary_1.writeUint64LE(ciphertext.length, length2);
          h2.update(length2);
          var tag = h2.digest();
          for (var i2 = 0; i2 < tag.length; i2++) {
            tagOut[i2] = tag[i2];
          }
          h2.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length2);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h2) {
      return typeof h2.saveState !== "undefined" && typeof h2.restoreState !== "undefined" && typeof h2.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i2 = 0; i2 < pad.length; i2++) {
            pad[i2] ^= 54;
          }
          this._inner.update(pad);
          for (var i2 = 0; i2 < pad.length; i2++) {
            pad[i2] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h2 = new HMAC(hash, key);
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length2) {
          var out = new Uint8Array(length2);
          for (var i2 = 0; i2 < out.length; i2++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i2] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser2 = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i2 = 0; i2 < out.length; i2 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i2, i2 + Math.min(out.length - i2, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_4, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_crypto();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i2 = 0; i2 < out.length; i2++) {
          out[i2] = buffer[i2];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser2();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes2(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes2;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes2(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes2(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i2 = 0; i2 < buf.length && length2 > 0; i2++) {
          const randomByte = buf[i2];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i2 = left + 1; i2 < padLength - 8; i2++) {
              this._buffer[i2] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i2 = 0; i2 < this.digestLength / 4; i2++) {
            binary_1.writeUint32BE(this._state[i2], out, i2 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K3 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w4, v, p4, pos, len) {
      while (len >= 64) {
        var a2 = v[0];
        var b4 = v[1];
        var c2 = v[2];
        var d2 = v[3];
        var e = v[4];
        var f3 = v[5];
        var g3 = v[6];
        var h2 = v[7];
        for (var i2 = 0; i2 < 16; i2++) {
          var j4 = pos + i2 * 4;
          w4[i2] = binary_1.readUint32BE(p4, j4);
        }
        for (var i2 = 16; i2 < 64; i2++) {
          var u4 = w4[i2 - 2];
          var t1 = (u4 >>> 17 | u4 << 32 - 17) ^ (u4 >>> 19 | u4 << 32 - 19) ^ u4 >>> 10;
          u4 = w4[i2 - 15];
          var t2 = (u4 >>> 7 | u4 << 32 - 7) ^ (u4 >>> 18 | u4 << 32 - 18) ^ u4 >>> 3;
          w4[i2] = (t1 + w4[i2 - 7] | 0) + (t2 + w4[i2 - 16] | 0);
        }
        for (var i2 = 0; i2 < 64; i2++) {
          var t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f3 ^ ~e & g3) | 0) + (h2 + (K3[i2] + w4[i2] | 0) | 0) | 0;
          var t2 = ((a2 >>> 2 | a2 << 32 - 2) ^ (a2 >>> 13 | a2 << 32 - 13) ^ (a2 >>> 22 | a2 << 32 - 22)) + (a2 & b4 ^ a2 & c2 ^ b4 & c2) | 0;
          h2 = g3;
          g3 = f3;
          f3 = e;
          e = d2 + t1 | 0;
          d2 = c2;
          c2 = b4;
          b4 = a2;
          a2 = t1 + t2 | 0;
        }
        v[0] += a2;
        v[1] += b4;
        v[2] += c2;
        v[3] += d2;
        v[4] += e;
        v[5] += f3;
        v[6] += g3;
        v[7] += h2;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h2 = new SHA256();
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf(init) {
      const r = new Float64Array(16);
      if (init) {
        for (let i2 = 0; i2 < init.length; i2++) {
          r[i2] = init[i2];
        }
      }
      return r;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf([56129, 1]);
    function car25519(o) {
      let c2 = 1;
      for (let i2 = 0; i2 < 16; i2++) {
        let v = o[i2] + c2 + 65535;
        c2 = Math.floor(v / 65536);
        o[i2] = v - c2 * 65536;
      }
      o[0] += c2 - 1 + 37 * (c2 - 1);
    }
    function sel25519(p4, q5, b4) {
      const c2 = ~(b4 - 1);
      for (let i2 = 0; i2 < 16; i2++) {
        const t = c2 & (p4[i2] ^ q5[i2]);
        p4[i2] ^= t;
        q5[i2] ^= t;
      }
    }
    function pack25519(o, n2) {
      const m3 = gf();
      const t = gf();
      for (let i2 = 0; i2 < 16; i2++) {
        t[i2] = n2[i2];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j4 = 0; j4 < 2; j4++) {
        m3[0] = t[0] - 65517;
        for (let i2 = 1; i2 < 15; i2++) {
          m3[i2] = t[i2] - 65535 - (m3[i2 - 1] >> 16 & 1);
          m3[i2 - 1] &= 65535;
        }
        m3[15] = t[15] - 32767 - (m3[14] >> 16 & 1);
        const b4 = m3[15] >> 16 & 1;
        m3[14] &= 65535;
        sel25519(t, m3, 1 - b4);
      }
      for (let i2 = 0; i2 < 16; i2++) {
        o[2 * i2] = t[i2] & 255;
        o[2 * i2 + 1] = t[i2] >> 8;
      }
    }
    function unpack25519(o, n2) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = n2[2 * i2] + (n2[2 * i2 + 1] << 8);
      }
      o[15] &= 32767;
    }
    function add(o, a2, b4) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = a2[i2] + b4[i2];
      }
    }
    function sub(o, a2, b4) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = a2[i2] - b4[i2];
      }
    }
    function mul(o, a2, b4) {
      let v, c2, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b4[0], b1 = b4[1], b22 = b4[2], b32 = b4[3], b42 = b4[4], b5 = b4[5], b6 = b4[6], b7 = b4[7], b8 = b4[8], b9 = b4[9], b10 = b4[10], b11 = b4[11], b12 = b4[12], b13 = b4[13], b14 = b4[14], b15 = b4[15];
      v = a2[0];
      t0 += v * b0;
      t1 += v * b1;
      t2 += v * b22;
      t3 += v * b32;
      t4 += v * b42;
      t5 += v * b5;
      t6 += v * b6;
      t7 += v * b7;
      t8 += v * b8;
      t9 += v * b9;
      t10 += v * b10;
      t11 += v * b11;
      t12 += v * b12;
      t13 += v * b13;
      t14 += v * b14;
      t15 += v * b15;
      v = a2[1];
      t1 += v * b0;
      t2 += v * b1;
      t3 += v * b22;
      t4 += v * b32;
      t5 += v * b42;
      t6 += v * b5;
      t7 += v * b6;
      t8 += v * b7;
      t9 += v * b8;
      t10 += v * b9;
      t11 += v * b10;
      t12 += v * b11;
      t13 += v * b12;
      t14 += v * b13;
      t15 += v * b14;
      t16 += v * b15;
      v = a2[2];
      t2 += v * b0;
      t3 += v * b1;
      t4 += v * b22;
      t5 += v * b32;
      t6 += v * b42;
      t7 += v * b5;
      t8 += v * b6;
      t9 += v * b7;
      t10 += v * b8;
      t11 += v * b9;
      t12 += v * b10;
      t13 += v * b11;
      t14 += v * b12;
      t15 += v * b13;
      t16 += v * b14;
      t17 += v * b15;
      v = a2[3];
      t3 += v * b0;
      t4 += v * b1;
      t5 += v * b22;
      t6 += v * b32;
      t7 += v * b42;
      t8 += v * b5;
      t9 += v * b6;
      t10 += v * b7;
      t11 += v * b8;
      t12 += v * b9;
      t13 += v * b10;
      t14 += v * b11;
      t15 += v * b12;
      t16 += v * b13;
      t17 += v * b14;
      t18 += v * b15;
      v = a2[4];
      t4 += v * b0;
      t5 += v * b1;
      t6 += v * b22;
      t7 += v * b32;
      t8 += v * b42;
      t9 += v * b5;
      t10 += v * b6;
      t11 += v * b7;
      t12 += v * b8;
      t13 += v * b9;
      t14 += v * b10;
      t15 += v * b11;
      t16 += v * b12;
      t17 += v * b13;
      t18 += v * b14;
      t19 += v * b15;
      v = a2[5];
      t5 += v * b0;
      t6 += v * b1;
      t7 += v * b22;
      t8 += v * b32;
      t9 += v * b42;
      t10 += v * b5;
      t11 += v * b6;
      t12 += v * b7;
      t13 += v * b8;
      t14 += v * b9;
      t15 += v * b10;
      t16 += v * b11;
      t17 += v * b12;
      t18 += v * b13;
      t19 += v * b14;
      t20 += v * b15;
      v = a2[6];
      t6 += v * b0;
      t7 += v * b1;
      t8 += v * b22;
      t9 += v * b32;
      t10 += v * b42;
      t11 += v * b5;
      t12 += v * b6;
      t13 += v * b7;
      t14 += v * b8;
      t15 += v * b9;
      t16 += v * b10;
      t17 += v * b11;
      t18 += v * b12;
      t19 += v * b13;
      t20 += v * b14;
      t21 += v * b15;
      v = a2[7];
      t7 += v * b0;
      t8 += v * b1;
      t9 += v * b22;
      t10 += v * b32;
      t11 += v * b42;
      t12 += v * b5;
      t13 += v * b6;
      t14 += v * b7;
      t15 += v * b8;
      t16 += v * b9;
      t17 += v * b10;
      t18 += v * b11;
      t19 += v * b12;
      t20 += v * b13;
      t21 += v * b14;
      t22 += v * b15;
      v = a2[8];
      t8 += v * b0;
      t9 += v * b1;
      t10 += v * b22;
      t11 += v * b32;
      t12 += v * b42;
      t13 += v * b5;
      t14 += v * b6;
      t15 += v * b7;
      t16 += v * b8;
      t17 += v * b9;
      t18 += v * b10;
      t19 += v * b11;
      t20 += v * b12;
      t21 += v * b13;
      t22 += v * b14;
      t23 += v * b15;
      v = a2[9];
      t9 += v * b0;
      t10 += v * b1;
      t11 += v * b22;
      t12 += v * b32;
      t13 += v * b42;
      t14 += v * b5;
      t15 += v * b6;
      t16 += v * b7;
      t17 += v * b8;
      t18 += v * b9;
      t19 += v * b10;
      t20 += v * b11;
      t21 += v * b12;
      t22 += v * b13;
      t23 += v * b14;
      t24 += v * b15;
      v = a2[10];
      t10 += v * b0;
      t11 += v * b1;
      t12 += v * b22;
      t13 += v * b32;
      t14 += v * b42;
      t15 += v * b5;
      t16 += v * b6;
      t17 += v * b7;
      t18 += v * b8;
      t19 += v * b9;
      t20 += v * b10;
      t21 += v * b11;
      t22 += v * b12;
      t23 += v * b13;
      t24 += v * b14;
      t25 += v * b15;
      v = a2[11];
      t11 += v * b0;
      t12 += v * b1;
      t13 += v * b22;
      t14 += v * b32;
      t15 += v * b42;
      t16 += v * b5;
      t17 += v * b6;
      t18 += v * b7;
      t19 += v * b8;
      t20 += v * b9;
      t21 += v * b10;
      t22 += v * b11;
      t23 += v * b12;
      t24 += v * b13;
      t25 += v * b14;
      t26 += v * b15;
      v = a2[12];
      t12 += v * b0;
      t13 += v * b1;
      t14 += v * b22;
      t15 += v * b32;
      t16 += v * b42;
      t17 += v * b5;
      t18 += v * b6;
      t19 += v * b7;
      t20 += v * b8;
      t21 += v * b9;
      t22 += v * b10;
      t23 += v * b11;
      t24 += v * b12;
      t25 += v * b13;
      t26 += v * b14;
      t27 += v * b15;
      v = a2[13];
      t13 += v * b0;
      t14 += v * b1;
      t15 += v * b22;
      t16 += v * b32;
      t17 += v * b42;
      t18 += v * b5;
      t19 += v * b6;
      t20 += v * b7;
      t21 += v * b8;
      t22 += v * b9;
      t23 += v * b10;
      t24 += v * b11;
      t25 += v * b12;
      t26 += v * b13;
      t27 += v * b14;
      t28 += v * b15;
      v = a2[14];
      t14 += v * b0;
      t15 += v * b1;
      t16 += v * b22;
      t17 += v * b32;
      t18 += v * b42;
      t19 += v * b5;
      t20 += v * b6;
      t21 += v * b7;
      t22 += v * b8;
      t23 += v * b9;
      t24 += v * b10;
      t25 += v * b11;
      t26 += v * b12;
      t27 += v * b13;
      t28 += v * b14;
      t29 += v * b15;
      v = a2[15];
      t15 += v * b0;
      t16 += v * b1;
      t17 += v * b22;
      t18 += v * b32;
      t19 += v * b42;
      t20 += v * b5;
      t21 += v * b6;
      t22 += v * b7;
      t23 += v * b8;
      t24 += v * b9;
      t25 += v * b10;
      t26 += v * b11;
      t27 += v * b12;
      t28 += v * b13;
      t29 += v * b14;
      t30 += v * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c2 = 1;
      v = t0 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t0 = v - c2 * 65536;
      v = t1 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t1 = v - c2 * 65536;
      v = t2 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t2 = v - c2 * 65536;
      v = t3 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t3 = v - c2 * 65536;
      v = t4 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t4 = v - c2 * 65536;
      v = t5 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t5 = v - c2 * 65536;
      v = t6 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t6 = v - c2 * 65536;
      v = t7 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t7 = v - c2 * 65536;
      v = t8 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t8 = v - c2 * 65536;
      v = t9 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t9 = v - c2 * 65536;
      v = t10 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t10 = v - c2 * 65536;
      v = t11 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t11 = v - c2 * 65536;
      v = t12 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t12 = v - c2 * 65536;
      v = t13 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t13 = v - c2 * 65536;
      v = t14 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t14 = v - c2 * 65536;
      v = t15 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t15 = v - c2 * 65536;
      t0 += c2 - 1 + 37 * (c2 - 1);
      c2 = 1;
      v = t0 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t0 = v - c2 * 65536;
      v = t1 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t1 = v - c2 * 65536;
      v = t2 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t2 = v - c2 * 65536;
      v = t3 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t3 = v - c2 * 65536;
      v = t4 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t4 = v - c2 * 65536;
      v = t5 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t5 = v - c2 * 65536;
      v = t6 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t6 = v - c2 * 65536;
      v = t7 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t7 = v - c2 * 65536;
      v = t8 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t8 = v - c2 * 65536;
      v = t9 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t9 = v - c2 * 65536;
      v = t10 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t10 = v - c2 * 65536;
      v = t11 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t11 = v - c2 * 65536;
      v = t12 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t12 = v - c2 * 65536;
      v = t13 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t13 = v - c2 * 65536;
      v = t14 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t14 = v - c2 * 65536;
      v = t15 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t15 = v - c2 * 65536;
      t0 += c2 - 1 + 37 * (c2 - 1);
      o[0] = t0;
      o[1] = t1;
      o[2] = t2;
      o[3] = t3;
      o[4] = t4;
      o[5] = t5;
      o[6] = t6;
      o[7] = t7;
      o[8] = t8;
      o[9] = t9;
      o[10] = t10;
      o[11] = t11;
      o[12] = t12;
      o[13] = t13;
      o[14] = t14;
      o[15] = t15;
    }
    function square(o, a2) {
      mul(o, a2, a2);
    }
    function inv25519(o, inp) {
      const c2 = gf();
      for (let i2 = 0; i2 < 16; i2++) {
        c2[i2] = inp[i2];
      }
      for (let i2 = 253; i2 >= 0; i2--) {
        square(c2, c2);
        if (i2 !== 2 && i2 !== 4) {
          mul(c2, c2, inp);
        }
      }
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = c2[i2];
      }
    }
    function scalarMult(n2, p4) {
      const z2 = new Uint8Array(32);
      const x3 = new Float64Array(80);
      const a2 = gf(), b4 = gf(), c2 = gf(), d2 = gf(), e = gf(), f3 = gf();
      for (let i2 = 0; i2 < 31; i2++) {
        z2[i2] = n2[i2];
      }
      z2[31] = n2[31] & 127 | 64;
      z2[0] &= 248;
      unpack25519(x3, p4);
      for (let i2 = 0; i2 < 16; i2++) {
        b4[i2] = x3[i2];
      }
      a2[0] = d2[0] = 1;
      for (let i2 = 254; i2 >= 0; --i2) {
        const r = z2[i2 >>> 3] >>> (i2 & 7) & 1;
        sel25519(a2, b4, r);
        sel25519(c2, d2, r);
        add(e, a2, c2);
        sub(a2, a2, c2);
        add(c2, b4, d2);
        sub(b4, b4, d2);
        square(d2, e);
        square(f3, a2);
        mul(a2, c2, a2);
        mul(c2, b4, e);
        add(e, a2, c2);
        sub(a2, a2, c2);
        square(b4, a2);
        sub(c2, d2, f3);
        mul(a2, c2, _121665);
        add(a2, a2, d2);
        mul(c2, c2, a2);
        mul(a2, d2, f3);
        mul(d2, b4, x3);
        square(b4, e);
        sel25519(a2, b4, r);
        sel25519(c2, d2, r);
      }
      for (let i2 = 0; i2 < 16; i2++) {
        x3[i2 + 16] = a2[i2];
        x3[i2 + 32] = c2[i2];
        x3[i2 + 48] = b4[i2];
        x3[i2 + 64] = d2[i2];
      }
      const x32 = x3.subarray(32);
      const x16 = x3.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q5 = new Uint8Array(32);
      pack25519(q5, x16);
      return q5;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n2) {
      return scalarMult(n2, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i2 = 0; i2 < result.length; i2++) {
          zeros |= result[i2];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds2(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds2;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/@walletconnect/utils/node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/@walletconnect/utils/node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b4) => Number(a2) - Number(b4)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k3 of Object.keys(value)) {
            value[k3] = parseValue(value[k3], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x3) => x3.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/safe-json-utils/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/safe-json-utils/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function safeJsonParse2(value) {
      if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
      }
      try {
        return JSON.parse(value);
      } catch (_a) {
        return value;
      }
    }
    exports.safeJsonParse = safeJsonParse2;
    function safeJsonStringify2(value) {
      return typeof value === "string" ? value : JSON.stringify(value, (key, value2) => typeof value2 === "undefined" ? null : value2);
    }
    exports.safeJsonStringify = safeJsonStringify2;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/lib/localStorage.js
var require_localStorage = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/lib/localStorage.js"(exports, module) {
    "use strict";
    (function() {
      "use strict";
      let db;
      function LocalStorage() {
      }
      db = LocalStorage;
      db.prototype.getItem = function(key) {
        if (this.hasOwnProperty(key)) {
          return String(this[key]);
        }
        return null;
      };
      db.prototype.setItem = function(key, val) {
        this[key] = String(val);
      };
      db.prototype.removeItem = function(key) {
        delete this[key];
      };
      db.prototype.clear = function() {
        const self2 = this;
        Object.keys(self2).forEach(function(key) {
          self2[key] = void 0;
          delete self2[key];
        });
      };
      db.prototype.key = function(i2) {
        i2 = i2 || 0;
        return Object.keys(this)[i2];
      };
      db.prototype.__defineGetter__("length", function() {
        return Object.keys(this).length;
      });
      if (typeof global !== "undefined" && global.localStorage) {
        module.exports = global.localStorage;
      } else if (typeof window !== "undefined" && window.localStorage) {
        module.exports = window.localStorage;
      } else {
        module.exports = new LocalStorage();
      }
    })();
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/types.js
var require_types2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IKeyValueStorage = void 0;
    var IKeyValueStorage = class {
    };
    exports.IKeyValueStorage = IKeyValueStorage;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/utils.js
var require_utils2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseEntry = void 0;
    var safe_json_utils_1 = require_cjs4();
    function parseEntry(entry) {
      var _a;
      return [entry[0], safe_json_utils_1.safeJsonParse((_a = entry[1]) !== null && _a !== void 0 ? _a : "")];
    }
    exports.parseEntry = parseEntry;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/index.js
var require_shared = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_utils2(), exports);
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/index.js
var require_browser3 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KeyValueStorage = void 0;
    var tslib_1 = require_tslib();
    var safe_json_utils_1 = require_cjs4();
    var localStorage_1 = tslib_1.__importDefault(require_localStorage());
    var shared_1 = require_shared();
    var KeyValueStorage = class {
      constructor() {
        this.localStorage = localStorage_1.default;
      }
      getKeys() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          return Object.keys(this.localStorage);
        });
      }
      getEntries() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          return Object.entries(this.localStorage).map(shared_1.parseEntry);
        });
      }
      getItem(key) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const item = this.localStorage.getItem(key);
          if (item === null) {
            return void 0;
          }
          return safe_json_utils_1.safeJsonParse(item);
        });
      }
      setItem(key, value) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.localStorage.setItem(key, safe_json_utils_1.safeJsonStringify(value));
        });
      }
      removeItem(key) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.localStorage.removeItem(key);
        });
      }
    };
    exports.KeyValueStorage = KeyValueStorage;
    exports.default = KeyValueStorage;
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  IEvents: () => IEvents
});
var init_esm3 = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_events();
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm3(), __toCommonJS(esm_exports2));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs3();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = require_tslib();
    var events_1 = require_events();
    var time_1 = require_cjs3();
    var types_1 = require_types3();
    var constants_1 = require_constants2();
    var HeartBeat = class extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types3(), exports);
    tslib_1.__exportStar(require_constants2(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o) {
      try {
        return JSON.stringify(o);
      } catch (e) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f3, args, opts) {
      var ss3 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f3 === "object" && f3 !== null) {
        var len = args.length + offset;
        if (len === 1)
          return f3;
        var objects = new Array(len);
        objects[0] = ss3(f3);
        for (var index = 1; index < len; index++) {
          objects[index] = ss3(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f3 !== "string") {
        return f3;
      }
      var argLen = args.length;
      if (argLen === 0)
        return f3;
      var str = "";
      var a2 = 1 - offset;
      var lastPos = -1;
      var flen = f3 && f3.length || 0;
      for (var i2 = 0; i2 < flen; ) {
        if (f3.charCodeAt(i2) === 37 && i2 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f3.charCodeAt(i2 + 1)) {
            case 100:
            case 102:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i2)
                str += f3.slice(lastPos, i2);
              str += Number(args[a2]);
              lastPos = i2 + 2;
              i2++;
              break;
            case 105:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i2)
                str += f3.slice(lastPos, i2);
              str += Math.floor(Number(args[a2]));
              lastPos = i2 + 2;
              i2++;
              break;
            case 79:
            case 111:
            case 106:
              if (a2 >= argLen)
                break;
              if (args[a2] === void 0)
                break;
              if (lastPos < i2)
                str += f3.slice(lastPos, i2);
              var type = typeof args[a2];
              if (type === "string") {
                str += "'" + args[a2] + "'";
                lastPos = i2 + 2;
                i2++;
                break;
              }
              if (type === "function") {
                str += args[a2].name || "<anonymous>";
                lastPos = i2 + 2;
                i2++;
                break;
              }
              str += ss3(args[a2]);
              lastPos = i2 + 2;
              i2++;
              break;
            case 115:
              if (a2 >= argLen)
                break;
              if (lastPos < i2)
                str += f3.slice(lastPos, i2);
              str += String(args[a2]);
              lastPos = i2 + 2;
              i2++;
              break;
            case 37:
              if (lastPos < i2)
                str += f3.slice(lastPos, i2);
              str += "%";
              lastPos = i2 + 2;
              i2++;
              a2--;
              break;
          }
          ++a2;
        }
        ++i2;
      }
      if (lastPos === -1)
        return f3;
      else if (lastPos < flen) {
        str += f3.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser4 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k3) {
          return k3 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write)
        opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1)
        stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false)
        opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log)
        logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2)
        logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set(setOpts, logger, "error", "log");
        set(setOpts, logger, "fatal", "error");
        set(setOpts, logger, "warn", "error");
        set(setOpts, logger, "info", "log");
        set(setOpts, logger, "debug", "log");
        set(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop)
        return;
      logger[level] = function(write) {
        return function LOG() {
          const ts3 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i2 = 0; i2 < args.length; i2++)
            args[i2] = arguments[i2];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject)
            write.call(proto, asObject(this, level, args, ts3));
          else
            write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue)
              return;
            transmit(this, {
              ts: ts3,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts3) {
      if (logger._serialize)
        applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o = {};
      if (ts3) {
        o.time = ts3;
      }
      o.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1)
        lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string")
        msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0)
        o.msg = msg;
      return o;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i2 in args) {
        if (stdErrSerialize && args[i2] instanceof Error) {
          args[i2] = pino.stdSerializers.err(args[i2]);
        } else if (typeof args[i2] === "object" && !Array.isArray(args[i2])) {
          for (const k3 in args[i2]) {
            if (serialize && serialize.indexOf(k3) > -1 && k3 in serializers) {
              args[i2][k3] = serializers[k3](args[i2][k3]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i2 = 1; i2 < args.length; i2++) {
          args[i2] = arguments[i2 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts3 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts3;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a2) {
      return a2;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o) {
        return typeof o !== "undefined" && o;
      }
      try {
        if (typeof globalThis !== "undefined")
          return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/logger/dist/cjs/constants.js
var require_constants3 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PINO_CUSTOM_CONTEXT_KEY = exports.PINO_LOGGER_DEFAULTS = void 0;
    exports.PINO_LOGGER_DEFAULTS = {
      level: "info"
    };
    exports.PINO_CUSTOM_CONTEXT_KEY = "custom_context";
  }
});

// node_modules/@walletconnect/logger/dist/cjs/utils.js
var require_utils3 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;
    var constants_1 = require_constants3();
    function getDefaultLoggerOptions(opts) {
      return Object.assign(Object.assign({}, opts), { level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level });
    }
    exports.getDefaultLoggerOptions = getDefaultLoggerOptions;
    function getBrowserLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      return logger[customContextKey] || "";
    }
    exports.getBrowserLoggerContext = getBrowserLoggerContext;
    function setBrowserLoggerContext(logger, context, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      logger[customContextKey] = context;
      return logger;
    }
    exports.setBrowserLoggerContext = setBrowserLoggerContext;
    function getLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      let context = "";
      if (typeof logger.bindings === "undefined") {
        context = getBrowserLoggerContext(logger, customContextKey);
      } else {
        context = logger.bindings().context || "";
      }
      return context;
    }
    exports.getLoggerContext = getLoggerContext;
    function formatChildLoggerContext(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      const parentContext = getLoggerContext(logger, customContextKey);
      const context = parentContext.trim() ? `${parentContext}/${childContext}` : childContext;
      return context;
    }
    exports.formatChildLoggerContext = formatChildLoggerContext;
    function generateChildLogger(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      const context = formatChildLoggerContext(logger, childContext, customContextKey);
      const child = logger.child({ context });
      return setBrowserLoggerContext(child, context, customContextKey);
    }
    exports.generateChildLogger = generateChildLogger;
  }
});

// node_modules/@walletconnect/logger/dist/cjs/index.js
var require_cjs6 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pino = void 0;
    var tslib_1 = require_tslib();
    var pino_1 = tslib_1.__importDefault(require_browser4());
    Object.defineProperty(exports, "pino", { enumerable: true, get: function() {
      return pino_1.default;
    } });
    tslib_1.__exportStar(require_constants3(), exports);
    tslib_1.__exportStar(require_utils3(), exports);
  }
});

// node_modules/@stablelib/sha512/lib/sha512.js
var require_sha512 = __commonJS({
  "node_modules/@stablelib/sha512/lib/sha512.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 64;
    exports.BLOCK_SIZE = 128;
    var SHA512 = (
      /** @class */
      function() {
        function SHA5122() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._stateHi = new Int32Array(8);
          this._stateLo = new Int32Array(8);
          this._tempHi = new Int32Array(16);
          this._tempLo = new Int32Array(16);
          this._buffer = new Uint8Array(256);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA5122.prototype._initState = function() {
          this._stateHi[0] = 1779033703;
          this._stateHi[1] = 3144134277;
          this._stateHi[2] = 1013904242;
          this._stateHi[3] = 2773480762;
          this._stateHi[4] = 1359893119;
          this._stateHi[5] = 2600822924;
          this._stateHi[6] = 528734635;
          this._stateHi[7] = 1541459225;
          this._stateLo[0] = 4089235720;
          this._stateLo[1] = 2227873595;
          this._stateLo[2] = 4271175723;
          this._stateLo[3] = 1595750129;
          this._stateLo[4] = 2917565137;
          this._stateLo[5] = 725511199;
          this._stateLo[6] = 4215389547;
          this._stateLo[7] = 327033209;
        };
        SHA5122.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._tempHi);
          wipe_1.wipe(this._tempLo);
          this.reset();
        };
        SHA5122.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA512: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA5122.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 128 < 112 ? 128 : 256;
            this._buffer[left] = 128;
            for (var i2 = left + 1; i2 < padLength - 8; i2++) {
              this._buffer[i2] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i2 = 0; i2 < this.digestLength / 8; i2++) {
            binary_1.writeUint32BE(this._stateHi[i2], out, i2 * 8);
            binary_1.writeUint32BE(this._stateLo[i2], out, i2 * 8 + 4);
          }
          return this;
        };
        SHA5122.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA5122.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            stateHi: new Int32Array(this._stateHi),
            stateLo: new Int32Array(this._stateLo),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA5122.prototype.restoreState = function(savedState) {
          this._stateHi.set(savedState.stateHi);
          this._stateLo.set(savedState.stateLo);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.stateHi);
          wipe_1.wipe(savedState.stateLo);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA5122;
      }()
    );
    exports.SHA512 = SHA512;
    var K3 = new Int32Array([
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ]);
    function hashBlocks(wh, wl, hh, hl, m3, pos, len) {
      var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
      var h2, l;
      var th, tl;
      var a2, b4, c2, d2;
      while (len >= 128) {
        for (var i2 = 0; i2 < 16; i2++) {
          var j4 = 8 * i2 + pos;
          wh[i2] = binary_1.readUint32BE(m3, j4);
          wl[i2] = binary_1.readUint32BE(m3, j4 + 4);
        }
        for (var i2 = 0; i2 < 80; i2++) {
          var bh0 = ah0;
          var bh1 = ah1;
          var bh2 = ah2;
          var bh3 = ah3;
          var bh4 = ah4;
          var bh5 = ah5;
          var bh6 = ah6;
          var bh7 = ah7;
          var bl0 = al0;
          var bl1 = al1;
          var bl2 = al2;
          var bl3 = al3;
          var bl4 = al4;
          var bl5 = al5;
          var bl6 = al6;
          var bl7 = al7;
          h2 = ah7;
          l = al7;
          a2 = l & 65535;
          b4 = l >>> 16;
          c2 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
          l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = ah4 & ah5 ^ ~ah4 & ah6;
          l = al4 & al5 ^ ~al4 & al6;
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = K3[i2 * 2];
          l = K3[i2 * 2 + 1];
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = wh[i2 % 16];
          l = wl[i2 % 16];
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          b4 += a2 >>> 16;
          c2 += b4 >>> 16;
          d2 += c2 >>> 16;
          th = c2 & 65535 | d2 << 16;
          tl = a2 & 65535 | b4 << 16;
          h2 = th;
          l = tl;
          a2 = l & 65535;
          b4 = l >>> 16;
          c2 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
          l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
          l = al0 & al1 ^ al0 & al2 ^ al1 & al2;
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          b4 += a2 >>> 16;
          c2 += b4 >>> 16;
          d2 += c2 >>> 16;
          bh7 = c2 & 65535 | d2 << 16;
          bl7 = a2 & 65535 | b4 << 16;
          h2 = bh3;
          l = bl3;
          a2 = l & 65535;
          b4 = l >>> 16;
          c2 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = th;
          l = tl;
          a2 += l & 65535;
          b4 += l >>> 16;
          c2 += h2 & 65535;
          d2 += h2 >>> 16;
          b4 += a2 >>> 16;
          c2 += b4 >>> 16;
          d2 += c2 >>> 16;
          bh3 = c2 & 65535 | d2 << 16;
          bl3 = a2 & 65535 | b4 << 16;
          ah1 = bh0;
          ah2 = bh1;
          ah3 = bh2;
          ah4 = bh3;
          ah5 = bh4;
          ah6 = bh5;
          ah7 = bh6;
          ah0 = bh7;
          al1 = bl0;
          al2 = bl1;
          al3 = bl2;
          al4 = bl3;
          al5 = bl4;
          al6 = bl5;
          al7 = bl6;
          al0 = bl7;
          if (i2 % 16 === 15) {
            for (var j4 = 0; j4 < 16; j4++) {
              h2 = wh[j4];
              l = wl[j4];
              a2 = l & 65535;
              b4 = l >>> 16;
              c2 = h2 & 65535;
              d2 = h2 >>> 16;
              h2 = wh[(j4 + 9) % 16];
              l = wl[(j4 + 9) % 16];
              a2 += l & 65535;
              b4 += l >>> 16;
              c2 += h2 & 65535;
              d2 += h2 >>> 16;
              th = wh[(j4 + 1) % 16];
              tl = wl[(j4 + 1) % 16];
              h2 = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
              l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
              a2 += l & 65535;
              b4 += l >>> 16;
              c2 += h2 & 65535;
              d2 += h2 >>> 16;
              th = wh[(j4 + 14) % 16];
              tl = wl[(j4 + 14) % 16];
              h2 = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
              l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
              a2 += l & 65535;
              b4 += l >>> 16;
              c2 += h2 & 65535;
              d2 += h2 >>> 16;
              b4 += a2 >>> 16;
              c2 += b4 >>> 16;
              d2 += c2 >>> 16;
              wh[j4] = c2 & 65535 | d2 << 16;
              wl[j4] = a2 & 65535 | b4 << 16;
            }
          }
        }
        h2 = ah0;
        l = al0;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[0];
        l = hl[0];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[0] = ah0 = c2 & 65535 | d2 << 16;
        hl[0] = al0 = a2 & 65535 | b4 << 16;
        h2 = ah1;
        l = al1;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[1];
        l = hl[1];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[1] = ah1 = c2 & 65535 | d2 << 16;
        hl[1] = al1 = a2 & 65535 | b4 << 16;
        h2 = ah2;
        l = al2;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[2];
        l = hl[2];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[2] = ah2 = c2 & 65535 | d2 << 16;
        hl[2] = al2 = a2 & 65535 | b4 << 16;
        h2 = ah3;
        l = al3;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[3];
        l = hl[3];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[3] = ah3 = c2 & 65535 | d2 << 16;
        hl[3] = al3 = a2 & 65535 | b4 << 16;
        h2 = ah4;
        l = al4;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[4];
        l = hl[4];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[4] = ah4 = c2 & 65535 | d2 << 16;
        hl[4] = al4 = a2 & 65535 | b4 << 16;
        h2 = ah5;
        l = al5;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[5];
        l = hl[5];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[5] = ah5 = c2 & 65535 | d2 << 16;
        hl[5] = al5 = a2 & 65535 | b4 << 16;
        h2 = ah6;
        l = al6;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[6];
        l = hl[6];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[6] = ah6 = c2 & 65535 | d2 << 16;
        hl[6] = al6 = a2 & 65535 | b4 << 16;
        h2 = ah7;
        l = al7;
        a2 = l & 65535;
        b4 = l >>> 16;
        c2 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[7];
        l = hl[7];
        a2 += l & 65535;
        b4 += l >>> 16;
        c2 += h2 & 65535;
        d2 += h2 >>> 16;
        b4 += a2 >>> 16;
        c2 += b4 >>> 16;
        d2 += c2 >>> 16;
        hh[7] = ah7 = c2 & 65535 | d2 << 16;
        hl[7] = al7 = a2 & 65535 | b4 << 16;
        pos += 128;
        len -= 128;
      }
      return pos;
    }
    function hash(data) {
      var h2 = new SHA512();
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/ed25519/lib/ed25519.js
var require_ed25519 = __commonJS({
  "node_modules/@stablelib/ed25519/lib/ed25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
    var random_1 = require_random();
    var sha512_1 = require_sha512();
    var wipe_1 = require_wipe();
    exports.SIGNATURE_LENGTH = 64;
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 64;
    exports.SEED_LENGTH = 32;
    function gf(init) {
      const r = new Float64Array(16);
      if (init) {
        for (let i2 = 0; i2 < init.length; i2++) {
          r[i2] = init[i2];
        }
      }
      return r;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var gf0 = gf();
    var gf1 = gf([1]);
    var D2 = gf([
      30883,
      4953,
      19914,
      30187,
      55467,
      16705,
      2637,
      112,
      59544,
      30585,
      16505,
      36039,
      65139,
      11119,
      27886,
      20995
    ]);
    var D22 = gf([
      61785,
      9906,
      39828,
      60374,
      45398,
      33411,
      5274,
      224,
      53552,
      61171,
      33010,
      6542,
      64743,
      22239,
      55772,
      9222
    ]);
    var X4 = gf([
      54554,
      36645,
      11616,
      51542,
      42930,
      38181,
      51040,
      26924,
      56412,
      64982,
      57905,
      49316,
      21502,
      52590,
      14035,
      8553
    ]);
    var Y4 = gf([
      26200,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214
    ]);
    var I2 = gf([
      41136,
      18958,
      6951,
      50414,
      58488,
      44335,
      6150,
      12099,
      55207,
      15867,
      153,
      11085,
      57099,
      20417,
      9344,
      11139
    ]);
    function set25519(r, a2) {
      for (let i2 = 0; i2 < 16; i2++) {
        r[i2] = a2[i2] | 0;
      }
    }
    function car25519(o) {
      let c2 = 1;
      for (let i2 = 0; i2 < 16; i2++) {
        let v = o[i2] + c2 + 65535;
        c2 = Math.floor(v / 65536);
        o[i2] = v - c2 * 65536;
      }
      o[0] += c2 - 1 + 37 * (c2 - 1);
    }
    function sel25519(p4, q5, b4) {
      const c2 = ~(b4 - 1);
      for (let i2 = 0; i2 < 16; i2++) {
        const t = c2 & (p4[i2] ^ q5[i2]);
        p4[i2] ^= t;
        q5[i2] ^= t;
      }
    }
    function pack25519(o, n2) {
      const m3 = gf();
      const t = gf();
      for (let i2 = 0; i2 < 16; i2++) {
        t[i2] = n2[i2];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j4 = 0; j4 < 2; j4++) {
        m3[0] = t[0] - 65517;
        for (let i2 = 1; i2 < 15; i2++) {
          m3[i2] = t[i2] - 65535 - (m3[i2 - 1] >> 16 & 1);
          m3[i2 - 1] &= 65535;
        }
        m3[15] = t[15] - 32767 - (m3[14] >> 16 & 1);
        const b4 = m3[15] >> 16 & 1;
        m3[14] &= 65535;
        sel25519(t, m3, 1 - b4);
      }
      for (let i2 = 0; i2 < 16; i2++) {
        o[2 * i2] = t[i2] & 255;
        o[2 * i2 + 1] = t[i2] >> 8;
      }
    }
    function verify32(x3, y3) {
      let d2 = 0;
      for (let i2 = 0; i2 < 32; i2++) {
        d2 |= x3[i2] ^ y3[i2];
      }
      return (1 & d2 - 1 >>> 8) - 1;
    }
    function neq25519(a2, b4) {
      const c2 = new Uint8Array(32);
      const d2 = new Uint8Array(32);
      pack25519(c2, a2);
      pack25519(d2, b4);
      return verify32(c2, d2);
    }
    function par25519(a2) {
      const d2 = new Uint8Array(32);
      pack25519(d2, a2);
      return d2[0] & 1;
    }
    function unpack25519(o, n2) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = n2[2 * i2] + (n2[2 * i2 + 1] << 8);
      }
      o[15] &= 32767;
    }
    function add(o, a2, b4) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = a2[i2] + b4[i2];
      }
    }
    function sub(o, a2, b4) {
      for (let i2 = 0; i2 < 16; i2++) {
        o[i2] = a2[i2] - b4[i2];
      }
    }
    function mul(o, a2, b4) {
      let v, c2, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b4[0], b1 = b4[1], b22 = b4[2], b32 = b4[3], b42 = b4[4], b5 = b4[5], b6 = b4[6], b7 = b4[7], b8 = b4[8], b9 = b4[9], b10 = b4[10], b11 = b4[11], b12 = b4[12], b13 = b4[13], b14 = b4[14], b15 = b4[15];
      v = a2[0];
      t0 += v * b0;
      t1 += v * b1;
      t2 += v * b22;
      t3 += v * b32;
      t4 += v * b42;
      t5 += v * b5;
      t6 += v * b6;
      t7 += v * b7;
      t8 += v * b8;
      t9 += v * b9;
      t10 += v * b10;
      t11 += v * b11;
      t12 += v * b12;
      t13 += v * b13;
      t14 += v * b14;
      t15 += v * b15;
      v = a2[1];
      t1 += v * b0;
      t2 += v * b1;
      t3 += v * b22;
      t4 += v * b32;
      t5 += v * b42;
      t6 += v * b5;
      t7 += v * b6;
      t8 += v * b7;
      t9 += v * b8;
      t10 += v * b9;
      t11 += v * b10;
      t12 += v * b11;
      t13 += v * b12;
      t14 += v * b13;
      t15 += v * b14;
      t16 += v * b15;
      v = a2[2];
      t2 += v * b0;
      t3 += v * b1;
      t4 += v * b22;
      t5 += v * b32;
      t6 += v * b42;
      t7 += v * b5;
      t8 += v * b6;
      t9 += v * b7;
      t10 += v * b8;
      t11 += v * b9;
      t12 += v * b10;
      t13 += v * b11;
      t14 += v * b12;
      t15 += v * b13;
      t16 += v * b14;
      t17 += v * b15;
      v = a2[3];
      t3 += v * b0;
      t4 += v * b1;
      t5 += v * b22;
      t6 += v * b32;
      t7 += v * b42;
      t8 += v * b5;
      t9 += v * b6;
      t10 += v * b7;
      t11 += v * b8;
      t12 += v * b9;
      t13 += v * b10;
      t14 += v * b11;
      t15 += v * b12;
      t16 += v * b13;
      t17 += v * b14;
      t18 += v * b15;
      v = a2[4];
      t4 += v * b0;
      t5 += v * b1;
      t6 += v * b22;
      t7 += v * b32;
      t8 += v * b42;
      t9 += v * b5;
      t10 += v * b6;
      t11 += v * b7;
      t12 += v * b8;
      t13 += v * b9;
      t14 += v * b10;
      t15 += v * b11;
      t16 += v * b12;
      t17 += v * b13;
      t18 += v * b14;
      t19 += v * b15;
      v = a2[5];
      t5 += v * b0;
      t6 += v * b1;
      t7 += v * b22;
      t8 += v * b32;
      t9 += v * b42;
      t10 += v * b5;
      t11 += v * b6;
      t12 += v * b7;
      t13 += v * b8;
      t14 += v * b9;
      t15 += v * b10;
      t16 += v * b11;
      t17 += v * b12;
      t18 += v * b13;
      t19 += v * b14;
      t20 += v * b15;
      v = a2[6];
      t6 += v * b0;
      t7 += v * b1;
      t8 += v * b22;
      t9 += v * b32;
      t10 += v * b42;
      t11 += v * b5;
      t12 += v * b6;
      t13 += v * b7;
      t14 += v * b8;
      t15 += v * b9;
      t16 += v * b10;
      t17 += v * b11;
      t18 += v * b12;
      t19 += v * b13;
      t20 += v * b14;
      t21 += v * b15;
      v = a2[7];
      t7 += v * b0;
      t8 += v * b1;
      t9 += v * b22;
      t10 += v * b32;
      t11 += v * b42;
      t12 += v * b5;
      t13 += v * b6;
      t14 += v * b7;
      t15 += v * b8;
      t16 += v * b9;
      t17 += v * b10;
      t18 += v * b11;
      t19 += v * b12;
      t20 += v * b13;
      t21 += v * b14;
      t22 += v * b15;
      v = a2[8];
      t8 += v * b0;
      t9 += v * b1;
      t10 += v * b22;
      t11 += v * b32;
      t12 += v * b42;
      t13 += v * b5;
      t14 += v * b6;
      t15 += v * b7;
      t16 += v * b8;
      t17 += v * b9;
      t18 += v * b10;
      t19 += v * b11;
      t20 += v * b12;
      t21 += v * b13;
      t22 += v * b14;
      t23 += v * b15;
      v = a2[9];
      t9 += v * b0;
      t10 += v * b1;
      t11 += v * b22;
      t12 += v * b32;
      t13 += v * b42;
      t14 += v * b5;
      t15 += v * b6;
      t16 += v * b7;
      t17 += v * b8;
      t18 += v * b9;
      t19 += v * b10;
      t20 += v * b11;
      t21 += v * b12;
      t22 += v * b13;
      t23 += v * b14;
      t24 += v * b15;
      v = a2[10];
      t10 += v * b0;
      t11 += v * b1;
      t12 += v * b22;
      t13 += v * b32;
      t14 += v * b42;
      t15 += v * b5;
      t16 += v * b6;
      t17 += v * b7;
      t18 += v * b8;
      t19 += v * b9;
      t20 += v * b10;
      t21 += v * b11;
      t22 += v * b12;
      t23 += v * b13;
      t24 += v * b14;
      t25 += v * b15;
      v = a2[11];
      t11 += v * b0;
      t12 += v * b1;
      t13 += v * b22;
      t14 += v * b32;
      t15 += v * b42;
      t16 += v * b5;
      t17 += v * b6;
      t18 += v * b7;
      t19 += v * b8;
      t20 += v * b9;
      t21 += v * b10;
      t22 += v * b11;
      t23 += v * b12;
      t24 += v * b13;
      t25 += v * b14;
      t26 += v * b15;
      v = a2[12];
      t12 += v * b0;
      t13 += v * b1;
      t14 += v * b22;
      t15 += v * b32;
      t16 += v * b42;
      t17 += v * b5;
      t18 += v * b6;
      t19 += v * b7;
      t20 += v * b8;
      t21 += v * b9;
      t22 += v * b10;
      t23 += v * b11;
      t24 += v * b12;
      t25 += v * b13;
      t26 += v * b14;
      t27 += v * b15;
      v = a2[13];
      t13 += v * b0;
      t14 += v * b1;
      t15 += v * b22;
      t16 += v * b32;
      t17 += v * b42;
      t18 += v * b5;
      t19 += v * b6;
      t20 += v * b7;
      t21 += v * b8;
      t22 += v * b9;
      t23 += v * b10;
      t24 += v * b11;
      t25 += v * b12;
      t26 += v * b13;
      t27 += v * b14;
      t28 += v * b15;
      v = a2[14];
      t14 += v * b0;
      t15 += v * b1;
      t16 += v * b22;
      t17 += v * b32;
      t18 += v * b42;
      t19 += v * b5;
      t20 += v * b6;
      t21 += v * b7;
      t22 += v * b8;
      t23 += v * b9;
      t24 += v * b10;
      t25 += v * b11;
      t26 += v * b12;
      t27 += v * b13;
      t28 += v * b14;
      t29 += v * b15;
      v = a2[15];
      t15 += v * b0;
      t16 += v * b1;
      t17 += v * b22;
      t18 += v * b32;
      t19 += v * b42;
      t20 += v * b5;
      t21 += v * b6;
      t22 += v * b7;
      t23 += v * b8;
      t24 += v * b9;
      t25 += v * b10;
      t26 += v * b11;
      t27 += v * b12;
      t28 += v * b13;
      t29 += v * b14;
      t30 += v * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c2 = 1;
      v = t0 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t0 = v - c2 * 65536;
      v = t1 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t1 = v - c2 * 65536;
      v = t2 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t2 = v - c2 * 65536;
      v = t3 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t3 = v - c2 * 65536;
      v = t4 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t4 = v - c2 * 65536;
      v = t5 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t5 = v - c2 * 65536;
      v = t6 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t6 = v - c2 * 65536;
      v = t7 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t7 = v - c2 * 65536;
      v = t8 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t8 = v - c2 * 65536;
      v = t9 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t9 = v - c2 * 65536;
      v = t10 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t10 = v - c2 * 65536;
      v = t11 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t11 = v - c2 * 65536;
      v = t12 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t12 = v - c2 * 65536;
      v = t13 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t13 = v - c2 * 65536;
      v = t14 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t14 = v - c2 * 65536;
      v = t15 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t15 = v - c2 * 65536;
      t0 += c2 - 1 + 37 * (c2 - 1);
      c2 = 1;
      v = t0 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t0 = v - c2 * 65536;
      v = t1 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t1 = v - c2 * 65536;
      v = t2 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t2 = v - c2 * 65536;
      v = t3 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t3 = v - c2 * 65536;
      v = t4 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t4 = v - c2 * 65536;
      v = t5 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t5 = v - c2 * 65536;
      v = t6 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t6 = v - c2 * 65536;
      v = t7 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t7 = v - c2 * 65536;
      v = t8 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t8 = v - c2 * 65536;
      v = t9 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t9 = v - c2 * 65536;
      v = t10 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t10 = v - c2 * 65536;
      v = t11 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t11 = v - c2 * 65536;
      v = t12 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t12 = v - c2 * 65536;
      v = t13 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t13 = v - c2 * 65536;
      v = t14 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t14 = v - c2 * 65536;
      v = t15 + c2 + 65535;
      c2 = Math.floor(v / 65536);
      t15 = v - c2 * 65536;
      t0 += c2 - 1 + 37 * (c2 - 1);
      o[0] = t0;
      o[1] = t1;
      o[2] = t2;
      o[3] = t3;
      o[4] = t4;
      o[5] = t5;
      o[6] = t6;
      o[7] = t7;
      o[8] = t8;
      o[9] = t9;
      o[10] = t10;
      o[11] = t11;
      o[12] = t12;
      o[13] = t13;
      o[14] = t14;
      o[15] = t15;
    }
    function square(o, a2) {
      mul(o, a2, a2);
    }
    function inv25519(o, i2) {
      const c2 = gf();
      let a2;
      for (a2 = 0; a2 < 16; a2++) {
        c2[a2] = i2[a2];
      }
      for (a2 = 253; a2 >= 0; a2--) {
        square(c2, c2);
        if (a2 !== 2 && a2 !== 4) {
          mul(c2, c2, i2);
        }
      }
      for (a2 = 0; a2 < 16; a2++) {
        o[a2] = c2[a2];
      }
    }
    function pow2523(o, i2) {
      const c2 = gf();
      let a2;
      for (a2 = 0; a2 < 16; a2++) {
        c2[a2] = i2[a2];
      }
      for (a2 = 250; a2 >= 0; a2--) {
        square(c2, c2);
        if (a2 !== 1) {
          mul(c2, c2, i2);
        }
      }
      for (a2 = 0; a2 < 16; a2++) {
        o[a2] = c2[a2];
      }
    }
    function edadd(p4, q5) {
      const a2 = gf(), b4 = gf(), c2 = gf(), d2 = gf(), e = gf(), f3 = gf(), g3 = gf(), h2 = gf(), t = gf();
      sub(a2, p4[1], p4[0]);
      sub(t, q5[1], q5[0]);
      mul(a2, a2, t);
      add(b4, p4[0], p4[1]);
      add(t, q5[0], q5[1]);
      mul(b4, b4, t);
      mul(c2, p4[3], q5[3]);
      mul(c2, c2, D22);
      mul(d2, p4[2], q5[2]);
      add(d2, d2, d2);
      sub(e, b4, a2);
      sub(f3, d2, c2);
      add(g3, d2, c2);
      add(h2, b4, a2);
      mul(p4[0], e, f3);
      mul(p4[1], h2, g3);
      mul(p4[2], g3, f3);
      mul(p4[3], e, h2);
    }
    function cswap(p4, q5, b4) {
      for (let i2 = 0; i2 < 4; i2++) {
        sel25519(p4[i2], q5[i2], b4);
      }
    }
    function pack(r, p4) {
      const tx = gf(), ty = gf(), zi2 = gf();
      inv25519(zi2, p4[2]);
      mul(tx, p4[0], zi2);
      mul(ty, p4[1], zi2);
      pack25519(r, ty);
      r[31] ^= par25519(tx) << 7;
    }
    function scalarmult(p4, q5, s) {
      set25519(p4[0], gf0);
      set25519(p4[1], gf1);
      set25519(p4[2], gf1);
      set25519(p4[3], gf0);
      for (let i2 = 255; i2 >= 0; --i2) {
        const b4 = s[i2 / 8 | 0] >> (i2 & 7) & 1;
        cswap(p4, q5, b4);
        edadd(q5, p4);
        edadd(p4, p4);
        cswap(p4, q5, b4);
      }
    }
    function scalarbase(p4, s) {
      const q5 = [gf(), gf(), gf(), gf()];
      set25519(q5[0], X4);
      set25519(q5[1], Y4);
      set25519(q5[2], gf1);
      mul(q5[3], X4, Y4);
      scalarmult(p4, q5, s);
    }
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SEED_LENGTH) {
        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);
      }
      const d2 = (0, sha512_1.hash)(seed);
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const publicKey = new Uint8Array(32);
      const p4 = [gf(), gf(), gf(), gf()];
      scalarbase(p4, d2);
      pack(publicKey, p4);
      const secretKey = new Uint8Array(64);
      secretKey.set(seed);
      secretKey.set(publicKey, 32);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function extractPublicKeyFromSecretKey(secretKey) {
      if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      return new Uint8Array(secretKey.subarray(32));
    }
    exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
    var L4 = new Float64Array([
      237,
      211,
      245,
      92,
      26,
      99,
      18,
      88,
      214,
      156,
      247,
      162,
      222,
      249,
      222,
      20,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      16
    ]);
    function modL(r, x3) {
      let carry;
      let i2;
      let j4;
      let k3;
      for (i2 = 63; i2 >= 32; --i2) {
        carry = 0;
        for (j4 = i2 - 32, k3 = i2 - 12; j4 < k3; ++j4) {
          x3[j4] += carry - 16 * x3[i2] * L4[j4 - (i2 - 32)];
          carry = Math.floor((x3[j4] + 128) / 256);
          x3[j4] -= carry * 256;
        }
        x3[j4] += carry;
        x3[i2] = 0;
      }
      carry = 0;
      for (j4 = 0; j4 < 32; j4++) {
        x3[j4] += carry - (x3[31] >> 4) * L4[j4];
        carry = x3[j4] >> 8;
        x3[j4] &= 255;
      }
      for (j4 = 0; j4 < 32; j4++) {
        x3[j4] -= carry * L4[j4];
      }
      for (i2 = 0; i2 < 32; i2++) {
        x3[i2 + 1] += x3[i2] >> 8;
        r[i2] = x3[i2] & 255;
      }
    }
    function reduce(r) {
      const x3 = new Float64Array(64);
      for (let i2 = 0; i2 < 64; i2++) {
        x3[i2] = r[i2];
      }
      for (let i2 = 0; i2 < 64; i2++) {
        r[i2] = 0;
      }
      modL(r, x3);
    }
    function sign2(secretKey, message) {
      const x3 = new Float64Array(64);
      const p4 = [gf(), gf(), gf(), gf()];
      const d2 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const signature = new Uint8Array(64);
      signature.set(d2.subarray(32), 32);
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(32));
      hs2.update(message);
      const r = hs2.digest();
      hs2.clean();
      reduce(r);
      scalarbase(p4, r);
      pack(signature, p4);
      hs2.reset();
      hs2.update(signature.subarray(0, 32));
      hs2.update(secretKey.subarray(32));
      hs2.update(message);
      const h2 = hs2.digest();
      reduce(h2);
      for (let i2 = 0; i2 < 32; i2++) {
        x3[i2] = r[i2];
      }
      for (let i2 = 0; i2 < 32; i2++) {
        for (let j4 = 0; j4 < 32; j4++) {
          x3[i2 + j4] += h2[i2] * d2[j4];
        }
      }
      modL(signature.subarray(32), x3);
      return signature;
    }
    exports.sign = sign2;
    function unpackneg(r, p4) {
      const t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
      set25519(r[2], gf1);
      unpack25519(r[1], p4);
      square(num, r[1]);
      mul(den, num, D2);
      sub(num, num, r[2]);
      add(den, r[2], den);
      square(den2, den);
      square(den4, den2);
      mul(den6, den4, den2);
      mul(t, den6, num);
      mul(t, t, den);
      pow2523(t, t);
      mul(t, t, num);
      mul(t, t, den);
      mul(t, t, den);
      mul(r[0], t, den);
      square(chk, r[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        mul(r[0], r[0], I2);
      }
      square(chk, r[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        return -1;
      }
      if (par25519(r[0]) === p4[31] >> 7) {
        sub(r[0], gf0, r[0]);
      }
      mul(r[3], r[0], r[1]);
      return 0;
    }
    function verify2(publicKey, message, signature) {
      const t = new Uint8Array(32);
      const p4 = [gf(), gf(), gf(), gf()];
      const q5 = [gf(), gf(), gf(), gf()];
      if (signature.length !== exports.SIGNATURE_LENGTH) {
        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);
      }
      if (unpackneg(q5, publicKey)) {
        return false;
      }
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(0, 32));
      hs2.update(publicKey);
      hs2.update(message);
      const h2 = hs2.digest();
      reduce(h2);
      scalarmult(p4, q5, h2);
      scalarbase(q5, signature.subarray(32));
      edadd(p4, q5);
      pack(t, p4);
      if (verify32(signature, t)) {
        return false;
      }
      return true;
    }
    exports.verify = verify2;
    function convertPublicKeyToX25519(publicKey) {
      let q5 = [gf(), gf(), gf(), gf()];
      if (unpackneg(q5, publicKey)) {
        throw new Error("Ed25519: invalid public key");
      }
      let a2 = gf();
      let b4 = gf();
      let y3 = q5[1];
      add(a2, gf1, y3);
      sub(b4, gf1, y3);
      inv25519(b4, b4);
      mul(a2, a2, b4);
      let z2 = new Uint8Array(32);
      pack25519(z2, a2);
      return z2;
    }
    exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
    function convertSecretKeyToX25519(secretKey) {
      const d2 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const o = new Uint8Array(d2.subarray(0, 32));
      (0, wipe_1.wipe)(d2);
      return o;
    }
    exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n2, iteratee) {
      var index = -1, result = Array(n2);
      while (++index < n2) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var import_events7 = __toESM(require_events());

// node_modules/@walletconnect/utils/dist/index.es.js
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var ue = __toESM(require_x25519());

// node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j4 = 0; j4 < BASE_MAP.length; j4++) {
    BASE_MAP[j4] = 255;
  }
  for (var i2 = 0; i2 < ALPHABET.length; i2++) {
    var x3 = ALPHABET.charAt(i2);
    var xc = x3.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x3 + " is ambiguous");
    }
    BASE_MAP[xc] = i2;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i3 = 0;
      for (var it1 = size - 1; (carry !== 0 || i3 < length2) && it1 !== -1; it1--, i3++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i3;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i3 = 0;
      for (var it3 = size - 1; (carry !== 0 || i3 < length2) && it3 !== -1; it3--, i3++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i3;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j5 = zeroes;
    while (it4 !== size) {
      vch[j5++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o) => {
  if (o instanceof Uint8Array && o.constructor.name === "Uint8Array")
    return o;
  if (o instanceof ArrayBuffer)
    return new Uint8Array(o);
  if (ArrayBuffer.isView(o)) {
    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b4) => new TextDecoder().decode(b4);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i2 = 0; i2 < alphabet2.length; ++i2) {
    codes[alphabet2[i2]] = i2;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i2 = 0; i2 < end; ++i2) {
    const value = codes[string2[i2]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i2 = 0; i2 < data.length; ++i2) {
    buffer = buffer << 8 | data[i2];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p4, c2, i2) => {
  p4[i2] = c2;
  return p4;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p4, c2, i2) => {
  p4[c2.codePointAt(0)] = i2;
  return p4;
}, []);
function encode2(data) {
  return data.reduce((p4, c2) => {
    p4 += alphabetBytesToChars[c2];
    return p4;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b4, l = buf.length;
  do {
    if (counter >= l) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b4 = buf[counter++];
    res += shift < 28 ? (b4 & REST$1) << shift : (b4 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b4 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a2, b4) => {
  if (a2 === b4) {
    return true;
  } else {
    return a2.code === b4.code && a2.size === b4.size && equals(a2.bytes, b4.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/cid.js
var CID = class {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? CID.createV0(digest2) : CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i2, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i2;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i2 = 0; i2 < buf.length; i2++) {
    string2 += String.fromCharCode(buf[i2]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i2 = 0; i2 < str.length; i2++) {
    buf[i2] = str.charCodeAt(i2);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string2, "utf-8"));
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/utils/dist/index.es.js
init_es();
var import_time = __toESM(require_cjs3());
var import_window_getters = __toESM(require_cjs());
var import_window_metadata = __toESM(require_cjs2());
var $ = __toESM(require_query_string());

// node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js
var RELAY_JSONRPC = {
  waku: {
    publish: "waku_publish",
    batchPublish: "waku_batchPublish",
    subscribe: "waku_subscribe",
    batchSubscribe: "waku_batchSubscribe",
    subscription: "waku_subscription",
    unsubscribe: "waku_unsubscribe",
    batchUnsubscribe: "waku_batchUnsubscribe"
  },
  irn: {
    publish: "irn_publish",
    batchPublish: "irn_batchPublish",
    subscribe: "irn_subscribe",
    batchSubscribe: "irn_batchSubscribe",
    subscription: "irn_subscription",
    unsubscribe: "irn_unsubscribe",
    batchUnsubscribe: "irn_batchUnsubscribe"
  },
  iridium: {
    publish: "iridium_publish",
    batchPublish: "iridium_batchPublish",
    subscribe: "iridium_subscribe",
    batchSubscribe: "iridium_batchSubscribe",
    subscription: "iridium_subscription",
    unsubscribe: "iridium_unsubscribe",
    batchUnsubscribe: "iridium_batchUnsubscribe"
  }
};

// node_modules/@walletconnect/utils/dist/index.es.js
function On(e, n2 = []) {
  const t = [];
  return Object.keys(e).forEach((r) => {
    if (n2.length && !n2.includes(r))
      return;
    const o = e[r];
    t.push(...o.accounts);
  }), t;
}
function V(e, n2) {
  return e.includes(":") ? [e] : n2.chains || [];
}
var G = "base10";
var f = "base16";
var K = "base64pad";
var k = "utf8";
var W = 0;
var U = 1;
var Rn = 0;
var Oe = 1;
var Y = 12;
var J = 32;
function An() {
  const e = ue.generateKeyPair();
  return { privateKey: toString2(e.secretKey, f), publicKey: toString2(e.publicKey, f) };
}
function Un() {
  const e = (0, import_random.randomBytes)(J);
  return toString2(e, f);
}
function _n(e, n2) {
  const t = ue.sharedKey(fromString2(e, f), fromString2(n2, f)), r = new import_hkdf.HKDF(import_sha256.SHA256, t).expand(J);
  return toString2(r, f);
}
function wn(e) {
  const n2 = (0, import_sha256.hash)(fromString2(e, f));
  return toString2(n2, f);
}
function jn(e) {
  const n2 = (0, import_sha256.hash)(fromString2(e, k));
  return toString2(n2, f);
}
function Se(e) {
  return fromString2(`${e}`, G);
}
function j(e) {
  return Number(toString2(e, G));
}
function Cn(e) {
  const n2 = Se(typeof e.type < "u" ? e.type : W);
  if (j(n2) === U && typeof e.senderPublicKey > "u")
    throw new Error("Missing sender public key for type 1 envelope");
  const t = typeof e.senderPublicKey < "u" ? fromString2(e.senderPublicKey, f) : void 0, r = typeof e.iv < "u" ? fromString2(e.iv, f) : (0, import_random.randomBytes)(Y), o = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e.symKey, f)).seal(r, fromString2(e.message, k));
  return Ie({ type: n2, sealed: o, iv: r, senderPublicKey: t });
}
function $n(e) {
  const n2 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e.symKey, f)), { sealed: t, iv: r } = Q(e.encoded), o = n2.open(r, t);
  if (o === null)
    throw new Error("Failed to decrypt");
  return toString2(o, k);
}
function Ie(e) {
  if (j(e.type) === U) {
    if (typeof e.senderPublicKey > "u")
      throw new Error("Missing sender public key for type 1 envelope");
    return toString2(concat([e.type, e.senderPublicKey, e.iv, e.sealed]), K);
  }
  return toString2(concat([e.type, e.iv, e.sealed]), K);
}
function Q(e) {
  const n2 = fromString2(e, K), t = n2.slice(Rn, Oe), r = Oe;
  if (j(t) === U) {
    const d2 = r + J, l = d2 + Y, i2 = n2.slice(r, d2), u4 = n2.slice(d2, l), a2 = n2.slice(l);
    return { type: t, sealed: a2, iv: u4, senderPublicKey: i2 };
  }
  const o = r + Y, s = n2.slice(r, o), c2 = n2.slice(o);
  return { type: t, sealed: c2, iv: s };
}
function Dn(e, n2) {
  const t = Q(e);
  return Pe({ type: j(t.type), senderPublicKey: typeof t.senderPublicKey < "u" ? toString2(t.senderPublicKey, f) : void 0, receiverPublicKey: n2 == null ? void 0 : n2.receiverPublicKey });
}
function Pe(e) {
  const n2 = (e == null ? void 0 : e.type) || W;
  if (n2 === U) {
    if (typeof (e == null ? void 0 : e.senderPublicKey) > "u")
      throw new Error("missing sender public key");
    if (typeof (e == null ? void 0 : e.receiverPublicKey) > "u")
      throw new Error("missing receiver public key");
  }
  return { type: n2, senderPublicKey: e == null ? void 0 : e.senderPublicKey, receiverPublicKey: e == null ? void 0 : e.receiverPublicKey };
}
function Vn(e) {
  return e.type === U && typeof e.senderPublicKey == "string" && typeof e.receiverPublicKey == "string";
}
var Mn = Object.defineProperty;
var Te = Object.getOwnPropertySymbols;
var Kn = Object.prototype.hasOwnProperty;
var kn = Object.prototype.propertyIsEnumerable;
var Re = (e, n2, t) => n2 in e ? Mn(e, n2, { enumerable: true, configurable: true, writable: true, value: t }) : e[n2] = t;
var Ae = (e, n2) => {
  for (var t in n2 || (n2 = {}))
    Kn.call(n2, t) && Re(e, t, n2[t]);
  if (Te)
    for (var t of Te(n2))
      kn.call(n2, t) && Re(e, t, n2[t]);
  return e;
};
var Ue = "ReactNative";
var _ = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var we = "js";
function X() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function je() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === Ue;
}
function Ce() {
  return !X() && !!(0, import_window_getters.getNavigator)();
}
function ee() {
  return je() ? _.reactNative : X() ? _.node : Ce() ? _.browser : _.unknown;
}
function $e(e, n2) {
  let t = $.parse(e);
  return t = Ae(Ae({}, t), n2), e = $.stringify(t), e;
}
function Fn() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function De() {
  const e = detect();
  if (e === null)
    return "unknown";
  const n2 = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
  return e.type === "browser" ? [n2, e.name, e.version].join("-") : [n2, e.version].join("-");
}
function Ve() {
  var e;
  const n2 = ee();
  return n2 === _.browser ? [n2, ((e = (0, import_window_getters.getLocation)()) == null ? void 0 : e.host) || "unknown"].join(":") : n2;
}
function Me(e, n2, t) {
  const r = De(), o = Ve();
  return [[e, n2].join("-"), [we, t].join("-"), r, o].join("/");
}
function qn({ protocol: e, version: n2, relayUrl: t, sdkVersion: r, auth: o, projectId: s, useOnCloseEvent: c2 }) {
  const d2 = t.split("?"), l = Me(e, n2, r), i2 = { auth: o, ua: l, projectId: s, useOnCloseEvent: c2 || void 0 }, u4 = $e(d2[1] || "", i2);
  return d2[0] + "?" + u4;
}
function b(e, n2) {
  return e.filter((t) => n2.includes(t)).length === e.length;
}
function Wn(e) {
  return Object.fromEntries(e.entries());
}
function Yn(e) {
  return new Map(Object.entries(e));
}
function Xn(e = import_time.FIVE_MINUTES, n2) {
  const t = (0, import_time.toMiliseconds)(e || import_time.FIVE_MINUTES);
  let r, o, s;
  return { resolve: (c2) => {
    s && r && (clearTimeout(s), r(c2));
  }, reject: (c2) => {
    s && o && (clearTimeout(s), o(c2));
  }, done: () => new Promise((c2, d2) => {
    s = setTimeout(() => {
      d2(new Error(n2));
    }, t), r = c2, o = d2;
  }) };
}
function et(e, n2, t) {
  return new Promise(async (r, o) => {
    const s = setTimeout(() => o(new Error(t)), n2);
    try {
      const c2 = await e;
      r(c2);
    } catch (c2) {
      o(c2);
    }
    clearTimeout(s);
  });
}
function ne(e, n2) {
  if (typeof n2 == "string" && n2.startsWith(`${e}:`))
    return n2;
  if (e.toLowerCase() === "topic") {
    if (typeof n2 != "string")
      throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${n2}`;
  } else if (e.toLowerCase() === "id") {
    if (typeof n2 != "number")
      throw new Error('Value must be "number" for expirer target type: id');
    return `id:${n2}`;
  }
  throw new Error(`Unknown expirer target type: ${e}`);
}
function nt(e) {
  return ne("topic", e);
}
function tt(e) {
  return ne("id", e);
}
function rt(e) {
  const [n2, t] = e.split(":"), r = { id: void 0, topic: void 0 };
  if (n2 === "topic" && typeof t == "string")
    r.topic = t;
  else if (n2 === "id" && Number.isInteger(Number(t)))
    r.id = Number(t);
  else
    throw new Error(`Invalid target, expected id:number or topic:string, got ${n2}:${t}`);
  return r;
}
function ot(e, n2) {
  return (0, import_time.fromMiliseconds)((n2 || Date.now()) + (0, import_time.toMiliseconds)(e));
}
function st(e) {
  return Date.now() >= (0, import_time.toMiliseconds)(e);
}
function it(e, n2) {
  return `${e}${n2 ? `:${n2}` : ""}`;
}
function O(e = [], n2 = []) {
  return [.../* @__PURE__ */ new Set([...e, ...n2])];
}
var xe = "irn";
function ct(e) {
  return (e == null ? void 0 : e.relay) || { protocol: xe };
}
function at(e) {
  const n2 = RELAY_JSONRPC[e];
  if (typeof n2 > "u")
    throw new Error(`Relay Protocol not supported: ${e}`);
  return n2;
}
var ut = Object.defineProperty;
var Fe = Object.getOwnPropertySymbols;
var dt = Object.prototype.hasOwnProperty;
var lt = Object.prototype.propertyIsEnumerable;
var He = (e, n2, t) => n2 in e ? ut(e, n2, { enumerable: true, configurable: true, writable: true, value: t }) : e[n2] = t;
var ft = (e, n2) => {
  for (var t in n2 || (n2 = {}))
    dt.call(n2, t) && He(e, t, n2[t]);
  if (Fe)
    for (var t of Fe(n2))
      lt.call(n2, t) && He(e, t, n2[t]);
  return e;
};
function qe(e, n2 = "-") {
  const t = {}, r = "relay" + n2;
  return Object.keys(e).forEach((o) => {
    if (o.startsWith(r)) {
      const s = o.replace(r, ""), c2 = e[o];
      t[s] = c2;
    }
  }), t;
}
function pt(e) {
  const n2 = e.indexOf(":"), t = e.indexOf("?") !== -1 ? e.indexOf("?") : void 0, r = e.substring(0, n2), o = e.substring(n2 + 1, t).split("@"), s = typeof t < "u" ? e.substring(t) : "", c2 = $.parse(s);
  return { protocol: r, topic: ze(o[0]), version: parseInt(o[1], 10), symKey: c2.symKey, relay: qe(c2) };
}
function ze(e) {
  return e.startsWith("//") ? e.substring(2) : e;
}
function Be(e, n2 = "-") {
  const t = "relay", r = {};
  return Object.keys(e).forEach((o) => {
    const s = t + n2 + o;
    e[o] && (r[s] = e[o]);
  }), r;
}
function mt(e) {
  return `${e.protocol}:${e.topic}@${e.version}?` + $.stringify(ft({ symKey: e.symKey }, Be(e.relay)));
}
function T(e) {
  const n2 = [];
  return e.forEach((t) => {
    const [r, o] = t.split(":");
    n2.push(`${r}:${o}`);
  }), n2;
}
function Ye(e) {
  const n2 = [];
  return Object.values(e).forEach((t) => {
    n2.push(...T(t.accounts));
  }), n2;
}
function Je(e, n2) {
  const t = [];
  return Object.values(e).forEach((r) => {
    T(r.accounts).includes(n2) && t.push(...r.methods);
  }), t;
}
function Qe(e, n2) {
  const t = [];
  return Object.values(e).forEach((r) => {
    T(r.accounts).includes(n2) && t.push(...r.events);
  }), t;
}
function Ot(e, n2) {
  const t = sn(e, n2);
  if (t)
    throw new Error(t.message);
  const r = {};
  for (const [o, s] of Object.entries(e))
    r[o] = { methods: s.methods, events: s.events, chains: s.accounts.map((c2) => `${c2.split(":")[0]}:${c2.split(":")[1]}`) };
  return r;
}
function te(e) {
  return e.includes(":");
}
function Ze(e) {
  return te(e) ? e.split(":")[0] : e;
}
var It = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Pt = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function N(e, n2) {
  const { message: t, code: r } = Pt[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function R(e, n2) {
  const { message: t, code: r } = It[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function C(e, n2) {
  return Array.isArray(e) ? typeof n2 < "u" && e.length ? e.every(n2) : true : false;
}
function x(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}
function S(e) {
  return typeof e > "u";
}
function m(e, n2) {
  return n2 && S(e) ? true : typeof e == "string" && Boolean(e.trim().length);
}
function F(e, n2) {
  return n2 && S(e) ? true : typeof e == "number" && !isNaN(e);
}
function Tt(e, n2) {
  const { requiredNamespaces: t } = n2, r = Object.keys(e.namespaces), o = Object.keys(t);
  let s = true;
  return b(o, r) ? (r.forEach((c2) => {
    const { accounts: d2, methods: l, events: i2 } = e.namespaces[c2], u4 = T(d2), a2 = t[c2];
    (!b(V(c2, a2), u4) || !b(a2.methods, l) || !b(a2.events, i2)) && (s = false);
  }), s) : false;
}
function H(e) {
  return m(e, false) && e.includes(":") ? e.split(":").length === 2 : false;
}
function Xe(e) {
  if (m(e, false) && e.includes(":")) {
    const n2 = e.split(":");
    if (n2.length === 3) {
      const t = n2[0] + ":" + n2[1];
      return !!n2[2] && H(t);
    }
  }
  return false;
}
function Rt(e) {
  if (m(e, false))
    try {
      return typeof new URL(e) < "u";
    } catch {
      return false;
    }
  return false;
}
function At(e) {
  var n2;
  return (n2 = e == null ? void 0 : e.proposer) == null ? void 0 : n2.publicKey;
}
function Ut(e) {
  return e == null ? void 0 : e.topic;
}
function _t(e, n2) {
  let t = null;
  return m(e == null ? void 0 : e.publicKey, false) || (t = N("MISSING_OR_INVALID", `${n2} controller public key should be a string`)), t;
}
function oe(e) {
  let n2 = true;
  return C(e) ? e.length && (n2 = e.every((t) => m(t, false))) : n2 = false, n2;
}
function en(e, n2, t) {
  let r = null;
  return C(n2) ? n2.forEach((o) => {
    r || (!H(o) || !o.includes(e)) && (r = R("UNSUPPORTED_CHAINS", `${t}, chain ${o} should be a string and conform to "namespace:chainId" format`));
  }) : r = R("UNSUPPORTED_CHAINS", `${t}, chains ${n2} should be an array of strings conforming to "namespace:chainId" format`), r;
}
function nn(e, n2) {
  let t = null;
  return Object.entries(e).forEach(([r, o]) => {
    if (t)
      return;
    const s = en(r, V(r, o), `${n2} requiredNamespace`);
    s && (t = s);
  }), t;
}
function tn(e, n2) {
  let t = null;
  return C(e) ? e.forEach((r) => {
    t || Xe(r) || (t = R("UNSUPPORTED_ACCOUNTS", `${n2}, account ${r} should be a string and conform to "namespace:chainId:address" format`));
  }) : t = R("UNSUPPORTED_ACCOUNTS", `${n2}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), t;
}
function rn(e, n2) {
  let t = null;
  return Object.values(e).forEach((r) => {
    if (t)
      return;
    const o = tn(r == null ? void 0 : r.accounts, `${n2} namespace`);
    o && (t = o);
  }), t;
}
function on(e, n2) {
  let t = null;
  return oe(e == null ? void 0 : e.methods) ? oe(e == null ? void 0 : e.events) || (t = R("UNSUPPORTED_EVENTS", `${n2}, events should be an array of strings or empty array for no events`)) : t = R("UNSUPPORTED_METHODS", `${n2}, methods should be an array of strings or empty array for no methods`), t;
}
function se(e, n2) {
  let t = null;
  return Object.values(e).forEach((r) => {
    if (t)
      return;
    const o = on(r, `${n2}, namespace`);
    o && (t = o);
  }), t;
}
function wt(e, n2, t) {
  let r = null;
  if (e && x(e)) {
    const o = se(e, n2);
    o && (r = o);
    const s = nn(e, n2);
    s && (r = s);
  } else
    r = N("MISSING_OR_INVALID", `${n2}, ${t} should be an object with data`);
  return r;
}
function sn(e, n2) {
  let t = null;
  if (e && x(e)) {
    const r = se(e, n2);
    r && (t = r);
    const o = rn(e, n2);
    o && (t = o);
  } else
    t = N("MISSING_OR_INVALID", `${n2}, namespaces should be an object with data`);
  return t;
}
function cn(e) {
  return m(e.protocol, true);
}
function jt(e, n2) {
  let t = false;
  return n2 && !e ? t = true : e && C(e) && e.length && e.forEach((r) => {
    t = cn(r);
  }), t;
}
function Ct(e) {
  return typeof e == "number";
}
function $t(e) {
  return typeof e < "u" && typeof e !== null;
}
function Dt(e) {
  return !(!e || typeof e != "object" || !e.code || !F(e.code, false) || !e.message || !m(e.message, false));
}
function Vt(e) {
  return !(S(e) || !m(e.method, false));
}
function Mt(e) {
  return !(S(e) || S(e.result) && S(e.error) || !F(e.id, false) || !m(e.jsonrpc, false));
}
function Kt(e) {
  return !(S(e) || !m(e.name, false));
}
function kt(e, n2) {
  return !(!H(n2) || !Ye(e).includes(n2));
}
function Lt(e, n2, t) {
  return m(t, false) ? Je(e, n2).includes(t) : false;
}
function xt(e, n2, t) {
  return m(t, false) ? Qe(e, n2).includes(t) : false;
}
function an(e, n2, t) {
  let r = null;
  const o = Ft(e), s = Ht(n2), c2 = Object.keys(o), d2 = Object.keys(s), l = un(Object.keys(e)), i2 = un(Object.keys(n2)), u4 = l.filter((a2) => !i2.includes(a2));
  return u4.length && (r = N("NON_CONFORMING_NAMESPACES", `${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u4.toString()}
      Received: ${Object.keys(n2).toString()}`)), b(c2, d2) || (r = N("NON_CONFORMING_NAMESPACES", `${t} namespaces chains don't satisfy required namespaces.
      Required: ${c2.toString()}
      Approved: ${d2.toString()}`)), Object.keys(n2).forEach((a2) => {
    if (!a2.includes(":") || r)
      return;
    const g3 = T(n2[a2].accounts);
    g3.includes(a2) || (r = N("NON_CONFORMING_NAMESPACES", `${t} namespaces accounts don't satisfy namespace accounts for ${a2}
        Required: ${a2}
        Approved: ${g3.toString()}`));
  }), c2.forEach((a2) => {
    r || (b(o[a2].methods, s[a2].methods) ? b(o[a2].events, s[a2].events) || (r = N("NON_CONFORMING_NAMESPACES", `${t} namespaces events don't satisfy namespace events for ${a2}`)) : r = N("NON_CONFORMING_NAMESPACES", `${t} namespaces methods don't satisfy namespace methods for ${a2}`));
  }), r;
}
function Ft(e) {
  const n2 = {};
  return Object.keys(e).forEach((t) => {
    var r;
    t.includes(":") ? n2[t] = e[t] : (r = e[t].chains) == null || r.forEach((o) => {
      n2[o] = { methods: e[t].methods, events: e[t].events };
    });
  }), n2;
}
function un(e) {
  return [...new Set(e.map((n2) => n2.includes(":") ? n2.split(":")[0] : n2))];
}
function Ht(e) {
  const n2 = {};
  return Object.keys(e).forEach((t) => {
    if (t.includes(":"))
      n2[t] = e[t];
    else {
      const r = T(e[t].accounts);
      r == null ? void 0 : r.forEach((o) => {
        n2[o] = { accounts: e[t].accounts.filter((s) => s.includes(`${o}:`)), methods: e[t].methods, events: e[t].events };
      });
    }
  }), n2;
}
function qt(e, n2) {
  return F(e, false) && e <= n2.max && e >= n2.min;
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_events4 = __toESM(require_events());
var import_keyvaluestorage = __toESM(require_browser3());
var import_heartbeat = __toESM(require_cjs5());
var import_logger = __toESM(require_cjs6());

// node_modules/@walletconnect/types/dist/index.es.js
init_esm3();
var import_events2 = __toESM(require_events());
var n = class extends IEvents {
  constructor(s) {
    super(), this.opts = s, this.protocol = "wc", this.version = 2;
  }
};
var h = class extends IEvents {
  constructor(s, t) {
    super(), this.core = s, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s, t) {
    this.logger = s, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s, t) {
    super(), this.relayer = s, this.logger = t;
  }
};
var g = class extends IEvents {
  constructor(s) {
    super();
  }
};
var p = class {
  constructor(s, t, o, w4) {
    this.core = s, this.logger = t, this.name = o;
  }
};
var d = class extends IEvents {
  constructor(s, t) {
    super(), this.relayer = s, this.logger = t;
  }
};
var E = class extends IEvents {
  constructor(s, t) {
    super(), this.core = s, this.logger = t;
  }
};
var y = class {
  constructor(s, t) {
    this.projectId = s, this.logger = t;
  }
};
var b2 = class {
  constructor(s) {
    this.opts = s, this.protocol = "wc", this.version = 2;
  }
};
var S2 = class {
  constructor(s) {
    this.client = s;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
init_esm();

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
var ed25519 = __toESM(require_ed25519());
var import_random2 = __toESM(require_random());
var import_time2 = __toESM(require_cjs3());

// node_modules/@walletconnect/relay-auth/dist/esm/constants.js
var JWT_IRIDIUM_ALG = "EdDSA";
var JWT_IRIDIUM_TYP = "JWT";
var JWT_DELIMITER = ".";
var JWT_ENCODING = "base64url";
var JSON_ENCODING = "utf8";
var DATA_ENCODING = "utf8";
var DID_DELIMITER = ":";
var DID_PREFIX = "did";
var DID_METHOD = "key";
var MULTICODEC_ED25519_ENCODING = "base58btc";
var MULTICODEC_ED25519_BASE = "z";
var MULTICODEC_ED25519_HEADER = "K36";
var KEY_PAIR_SEED_LENGTH = 32;

// node_modules/@walletconnect/relay-auth/dist/esm/utils.js
init_esm();
function encodeJSON(val) {
  return toString2(fromString2(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);
}
function encodeIss(publicKey) {
  const header = fromString2(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);
  const multicodec = MULTICODEC_ED25519_BASE + toString2(concat([header, publicKey]), MULTICODEC_ED25519_ENCODING);
  return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);
}
function encodeSig(bytes) {
  return toString2(bytes, JWT_ENCODING);
}
function encodeData(params) {
  return fromString2([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);
}
function encodeJWT(params) {
  return [
    encodeJSON(params.header),
    encodeJSON(params.payload),
    encodeSig(params.signature)
  ].join(JWT_DELIMITER);
}

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
function generateKeyPair2(seed = (0, import_random2.randomBytes)(KEY_PAIR_SEED_LENGTH)) {
  return ed25519.generateKeyPairFromSeed(seed);
}
async function signJWT(sub, aud, ttl, keyPair, iat = (0, import_time2.fromMiliseconds)(Date.now())) {
  const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };
  const iss = encodeIss(keyPair.publicKey);
  const exp = iat + ttl;
  const payload = { iss, sub, aud, iat, exp };
  const data = encodeData({ header, payload });
  const signature = ed25519.sign(keyPair.secretKey, data);
  return encodeJWT({ header, payload, signature });
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_time3 = __toESM(require_cjs3());
init_esm2();

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
var import_events3 = __toESM(require_events());
init_esm();
init_esm2();
var EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
var resolveWebSocketImplementation = () => {
  if (typeof global !== "undefined" && typeof global.WebSocket !== "undefined") {
    return global.WebSocket;
  }
  if (typeof window !== "undefined" && typeof window.WebSocket !== "undefined") {
    return window.WebSocket;
  }
  return require_browser();
};
var isBrowser = () => typeof window !== "undefined";
var WS = resolveWebSocketImplementation();
var WsConnection = class {
  constructor(url) {
    this.url = url;
    this.events = new import_events3.EventEmitter();
    this.registering = false;
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    this.url = url;
  }
  get connected() {
    return typeof this.socket !== "undefined";
  }
  get connecting() {
    return this.registering;
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async open(url = this.url) {
    await this.register(url);
  }
  async close() {
    return new Promise((resolve, reject) => {
      if (typeof this.socket === "undefined") {
        reject(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (event) => {
        this.onClose(event);
        resolve();
      };
      this.socket.close();
    });
  }
  async send(payload, context) {
    if (typeof this.socket === "undefined") {
      this.socket = await this.register();
    }
    try {
      this.socket.send(safeJsonStringify(payload));
    } catch (e) {
      this.onError(payload.id, e);
    }
  }
  register(url = this.url) {
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    if (this.registering) {
      const currentMaxListeners = this.events.getMaxListeners();
      if (this.events.listenerCount("register_error") >= currentMaxListeners || this.events.listenerCount("open") >= currentMaxListeners) {
        this.events.setMaxListeners(currentMaxListeners + 1);
      }
      return new Promise((resolve, reject) => {
        this.events.once("register_error", (error) => {
          this.resetMaxListeners();
          reject(error);
        });
        this.events.once("open", () => {
          this.resetMaxListeners();
          if (typeof this.socket === "undefined") {
            return reject(new Error("WebSocket connection is missing or invalid"));
          }
          resolve(this.socket);
        });
      });
    }
    this.url = url;
    this.registering = true;
    return new Promise((resolve, reject) => {
      const opts = !(0, esm_exports.isReactNative)() ? { rejectUnauthorized: !isLocalhostUrl(url) } : void 0;
      const socket = new WS(url, [], opts);
      if (isBrowser()) {
        socket.onerror = (event) => {
          const errorEvent = event;
          reject(this.emitError(errorEvent.error));
        };
      } else {
        socket.on("error", (errorEvent) => {
          reject(this.emitError(errorEvent));
        });
      }
      socket.onopen = () => {
        this.onOpen(socket);
        resolve(socket);
      };
    });
  }
  onOpen(socket) {
    socket.onmessage = (event) => this.onPayload(event);
    socket.onclose = (event) => this.onClose(event);
    this.socket = socket;
    this.registering = false;
    this.events.emit("open");
  }
  onClose(event) {
    this.socket = void 0;
    this.registering = false;
    this.events.emit("close", event);
  }
  onPayload(e) {
    if (typeof e.data === "undefined")
      return;
    const payload = typeof e.data === "string" ? safeJsonParse(e.data) : e.data;
    this.events.emit("payload", payload);
  }
  onError(id, e) {
    const error = this.parseError(e);
    const message = error.message || error.toString();
    const payload = formatJsonRpcError(id, message);
    this.events.emit("payload", payload);
  }
  parseError(e, url = this.url) {
    return parseConnectionError(e, url, "WS");
  }
  resetMaxListeners() {
    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
    }
  }
  emitError(errorEvent) {
    const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for URL: ${this.url}`));
    this.events.emit("register_error", error);
    return error;
  }
};
var ws_default = WsConnection;

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js
var esm_default2 = ws_default;

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
function Ni(r, e) {
  if (r.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i2 = 0; i2 < t.length; i2++)
    t[i2] = 255;
  for (var s = 0; s < r.length; s++) {
    var n2 = r.charAt(s), a2 = n2.charCodeAt(0);
    if (t[a2] !== 255)
      throw new TypeError(n2 + " is ambiguous");
    t[a2] = s;
  }
  var o = r.length, h2 = r.charAt(0), d2 = Math.log(o) / Math.log(256), l = Math.log(256) / Math.log(o);
  function D2(u4) {
    if (u4 instanceof Uint8Array || (ArrayBuffer.isView(u4) ? u4 = new Uint8Array(u4.buffer, u4.byteOffset, u4.byteLength) : Array.isArray(u4) && (u4 = Uint8Array.from(u4))), !(u4 instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (u4.length === 0)
      return "";
    for (var y3 = 0, A2 = 0, v = 0, R2 = u4.length; v !== R2 && u4[v] === 0; )
      v++, y3++;
    for (var S3 = (R2 - v) * l + 1 >>> 0, m3 = new Uint8Array(S3); v !== R2; ) {
      for (var T2 = u4[v], O4 = 0, I2 = S3 - 1; (T2 !== 0 || O4 < A2) && I2 !== -1; I2--, O4++)
        T2 += 256 * m3[I2] >>> 0, m3[I2] = T2 % o >>> 0, T2 = T2 / o >>> 0;
      if (T2 !== 0)
        throw new Error("Non-zero carry");
      A2 = O4, v++;
    }
    for (var P2 = S3 - A2; P2 !== S3 && m3[P2] === 0; )
      P2++;
    for (var K3 = h2.repeat(y3); P2 < S3; ++P2)
      K3 += r.charAt(m3[P2]);
    return K3;
  }
  function b4(u4) {
    if (typeof u4 != "string")
      throw new TypeError("Expected String");
    if (u4.length === 0)
      return new Uint8Array();
    var y3 = 0;
    if (u4[y3] !== " ") {
      for (var A2 = 0, v = 0; u4[y3] === h2; )
        A2++, y3++;
      for (var R2 = (u4.length - y3) * d2 + 1 >>> 0, S3 = new Uint8Array(R2); u4[y3]; ) {
        var m3 = t[u4.charCodeAt(y3)];
        if (m3 === 255)
          return;
        for (var T2 = 0, O4 = R2 - 1; (m3 !== 0 || T2 < v) && O4 !== -1; O4--, T2++)
          m3 += o * S3[O4] >>> 0, S3[O4] = m3 % 256 >>> 0, m3 = m3 / 256 >>> 0;
        if (m3 !== 0)
          throw new Error("Non-zero carry");
        v = T2, y3++;
      }
      if (u4[y3] !== " ") {
        for (var I2 = R2 - v; I2 !== R2 && S3[I2] === 0; )
          I2++;
        for (var P2 = new Uint8Array(A2 + (R2 - I2)), K3 = A2; I2 !== R2; )
          P2[K3++] = S3[I2++];
        return P2;
      }
    }
  }
  function H3(u4) {
    var y3 = b4(u4);
    if (y3)
      return y3;
    throw new Error(`Non-${e} character`);
  }
  return { encode: D2, decodeUnsafe: b4, decode: H3 };
}
var Ui = Ni;
var Li = Ui;
var Pe2 = (r) => {
  if (r instanceof Uint8Array && r.constructor.name === "Uint8Array")
    return r;
  if (r instanceof ArrayBuffer)
    return new Uint8Array(r);
  if (ArrayBuffer.isView(r))
    return new Uint8Array(r.buffer, r.byteOffset, r.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fi = (r) => new TextEncoder().encode(r);
var $i = (r) => new TextDecoder().decode(r);
var Mi = class {
  constructor(e, t, i2) {
    this.name = e, this.prefix = t, this.baseEncode = i2;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Ki = class {
  constructor(e, t, i2) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i2;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return xe2(this, e);
  }
};
var ki = class {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return xe2(this, e);
  }
  decode(e) {
    const t = e[0], i2 = this.decoders[t];
    if (i2)
      return i2.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var xe2 = (r, e) => new ki({ ...r.decoders || { [r.prefix]: r }, ...e.decoders || { [e.prefix]: e } });
var Bi = class {
  constructor(e, t, i2, s) {
    this.name = e, this.prefix = t, this.baseEncode = i2, this.baseDecode = s, this.encoder = new Mi(e, t, i2), this.decoder = new Ki(e, t, s);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
};
var q2 = ({ name: r, prefix: e, encode: t, decode: i2 }) => new Bi(r, e, t, i2);
var $2 = ({ prefix: r, name: e, alphabet: t }) => {
  const { encode: i2, decode: s } = Li(t, e);
  return q2({ prefix: r, name: e, encode: i2, decode: (n2) => Pe2(s(n2)) });
};
var ji = (r, e, t, i2) => {
  const s = {};
  for (let l = 0; l < e.length; ++l)
    s[e[l]] = l;
  let n2 = r.length;
  for (; r[n2 - 1] === "="; )
    --n2;
  const a2 = new Uint8Array(n2 * t / 8 | 0);
  let o = 0, h2 = 0, d2 = 0;
  for (let l = 0; l < n2; ++l) {
    const D2 = s[r[l]];
    if (D2 === void 0)
      throw new SyntaxError(`Non-${i2} character`);
    h2 = h2 << t | D2, o += t, o >= 8 && (o -= 8, a2[d2++] = 255 & h2 >> o);
  }
  if (o >= t || 255 & h2 << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a2;
};
var Vi = (r, e, t) => {
  const i2 = e[e.length - 1] === "=", s = (1 << t) - 1;
  let n2 = "", a2 = 0, o = 0;
  for (let h2 = 0; h2 < r.length; ++h2)
    for (o = o << 8 | r[h2], a2 += 8; a2 > t; )
      a2 -= t, n2 += e[s & o >> a2];
  if (a2 && (n2 += e[s & o << t - a2]), i2)
    for (; n2.length * t & 7; )
      n2 += "=";
  return n2;
};
var p2 = ({ name: r, prefix: e, bitsPerChar: t, alphabet: i2 }) => q2({ prefix: e, name: r, encode(s) {
  return Vi(s, i2, t);
}, decode(s) {
  return ji(s, i2, t, r);
} });
var qi = q2({ prefix: "\0", name: "identity", encode: (r) => $i(r), decode: (r) => Fi(r) });
var Gi = Object.freeze({ __proto__: null, identity: qi });
var Yi = p2({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Ji = Object.freeze({ __proto__: null, base2: Yi });
var Hi = p2({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Xi = Object.freeze({ __proto__: null, base8: Hi });
var Wi = $2({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Zi = Object.freeze({ __proto__: null, base10: Wi });
var Qi = p2({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var es = p2({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var ts = Object.freeze({ __proto__: null, base16: Qi, base16upper: es });
var is = p2({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var ss = p2({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var rs = p2({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var ns = p2({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var as = p2({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var os = p2({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var hs = p2({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var cs = p2({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var us = p2({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var ls = Object.freeze({ __proto__: null, base32: is, base32upper: ss, base32pad: rs, base32padupper: ns, base32hex: as, base32hexupper: os, base32hexpad: hs, base32hexpadupper: cs, base32z: us });
var ds = $2({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var gs = $2({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ps = Object.freeze({ __proto__: null, base36: ds, base36upper: gs });
var Ds = $2({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var ys = $2({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var bs = Object.freeze({ __proto__: null, base58btc: Ds, base58flickr: ys });
var ms = p2({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var fs = p2({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Es = p2({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var ws = p2({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var vs = Object.freeze({ __proto__: null, base64: ms, base64pad: fs, base64url: Es, base64urlpad: ws });
var Oe2 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Is = Oe2.reduce((r, e, t) => (r[t] = e, r), []);
var Cs = Oe2.reduce((r, e, t) => (r[e.codePointAt(0)] = t, r), []);
function _s(r) {
  return r.reduce((e, t) => (e += Is[t], e), "");
}
function Rs(r) {
  const e = [];
  for (const t of r) {
    const i2 = Cs[t.codePointAt(0)];
    if (i2 === void 0)
      throw new Error(`Non-base256emoji character: ${t}`);
    e.push(i2);
  }
  return new Uint8Array(e);
}
var Ss = q2({ prefix: "🚀", name: "base256emoji", encode: _s, decode: Rs });
var Ts = Object.freeze({ __proto__: null, base256emoji: Ss });
var Ps = ze2;
var Ae2 = 128;
var xs = 127;
var Os = ~xs;
var As = Math.pow(2, 31);
function ze2(r, e, t) {
  e = e || [], t = t || 0;
  for (var i2 = t; r >= As; )
    e[t++] = r & 255 | Ae2, r /= 128;
  for (; r & Os; )
    e[t++] = r & 255 | Ae2, r >>>= 7;
  return e[t] = r | 0, ze2.bytes = t - i2 + 1, e;
}
var zs = ne2;
var Ns = 128;
var Ne = 127;
function ne2(r, i2) {
  var t = 0, i2 = i2 || 0, s = 0, n2 = i2, a2, o = r.length;
  do {
    if (n2 >= o)
      throw ne2.bytes = 0, new RangeError("Could not decode varint");
    a2 = r[n2++], t += s < 28 ? (a2 & Ne) << s : (a2 & Ne) * Math.pow(2, s), s += 7;
  } while (a2 >= Ns);
  return ne2.bytes = n2 - i2, t;
}
var Us = Math.pow(2, 7);
var Ls = Math.pow(2, 14);
var Fs = Math.pow(2, 21);
var $s = Math.pow(2, 28);
var Ms = Math.pow(2, 35);
var Ks = Math.pow(2, 42);
var ks = Math.pow(2, 49);
var Bs = Math.pow(2, 56);
var js = Math.pow(2, 63);
var Vs = function(r) {
  return r < Us ? 1 : r < Ls ? 2 : r < Fs ? 3 : r < $s ? 4 : r < Ms ? 5 : r < Ks ? 6 : r < ks ? 7 : r < Bs ? 8 : r < js ? 9 : 10;
};
var qs = { encode: Ps, decode: zs, encodingLength: Vs };
var Ue2 = qs;
var Le = (r, e, t = 0) => (Ue2.encode(r, e, t), e);
var Fe2 = (r) => Ue2.encodingLength(r);
var ae2 = (r, e) => {
  const t = e.byteLength, i2 = Fe2(r), s = i2 + Fe2(t), n2 = new Uint8Array(s + t);
  return Le(r, n2, 0), Le(t, n2, i2), n2.set(e, s), new Gs(r, t, e, n2);
};
var Gs = class {
  constructor(e, t, i2, s) {
    this.code = e, this.size = t, this.digest = i2, this.bytes = s;
  }
};
var $e2 = ({ name: r, code: e, encode: t }) => new Ys(r, e, t);
var Ys = class {
  constructor(e, t, i2) {
    this.name = e, this.code = t, this.encode = i2;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const t = this.encode(e);
      return t instanceof Uint8Array ? ae2(this.code, t) : t.then((i2) => ae2(this.code, i2));
    } else
      throw Error("Unknown type, must be binary type");
  }
};
var Me2 = (r) => async (e) => new Uint8Array(await crypto.subtle.digest(r, e));
var Js = $e2({ name: "sha2-256", code: 18, encode: Me2("SHA-256") });
var Hs = $e2({ name: "sha2-512", code: 19, encode: Me2("SHA-512") });
var Xs = Object.freeze({ __proto__: null, sha256: Js, sha512: Hs });
var Ke = 0;
var Ws = "identity";
var ke = Pe2;
var Zs = (r) => ae2(Ke, ke(r));
var Qs = { code: Ke, name: Ws, encode: ke, digest: Zs };
var er = Object.freeze({ __proto__: null, identity: Qs });
new TextEncoder(), new TextDecoder();
var Be2 = { ...Gi, ...Ji, ...Xi, ...Zi, ...ts, ...ls, ...ps, ...bs, ...vs, ...Ts };
({ ...Xs, ...er });
function je2(r) {
  return globalThis.Buffer != null ? new Uint8Array(r.buffer, r.byteOffset, r.byteLength) : r;
}
function tr(r = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? je2(globalThis.Buffer.allocUnsafe(r)) : new Uint8Array(r);
}
function Ve2(r, e, t, i2) {
  return { name: r, prefix: e, encoder: { name: r, prefix: e, encode: t }, decoder: { decode: i2 } };
}
var qe2 = Ve2("utf8", "u", (r) => "u" + new TextDecoder("utf8").decode(r), (r) => new TextEncoder().encode(r.substring(1)));
var oe2 = Ve2("ascii", "a", (r) => {
  let e = "a";
  for (let t = 0; t < r.length; t++)
    e += String.fromCharCode(r[t]);
  return e;
}, (r) => {
  r = r.substring(1);
  const e = tr(r.length);
  for (let t = 0; t < r.length; t++)
    e[t] = r.charCodeAt(t);
  return e;
});
var ir = { utf8: qe2, "utf-8": qe2, hex: Be2.base16, latin1: oe2, ascii: oe2, binary: oe2, ...Be2 };
function sr(r, e = "utf8") {
  const t = ir[e];
  if (!t)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? je2(globalThis.Buffer.from(r, "utf-8")) : t.decoder.decode(`${t.prefix}${r}`);
}
var he = "wc";
var Ge = 2;
var G2 = "core";
var x2 = `${he}@${2}:${G2}:`;
var Ye2 = { name: G2, logger: "error" };
var Je2 = { database: ":memory:" };
var He2 = "crypto";
var ce2 = "client_ed25519_seed";
var Xe2 = import_time3.ONE_DAY;
var We = "keychain";
var Ze2 = "0.3";
var Qe2 = "messages";
var et2 = "0.3";
var tt2 = import_time3.SIX_HOURS;
var it2 = "publisher";
var st2 = "irn";
var rt2 = "error";
var ue2 = "wss://relay.walletconnect.com";
var nt2 = "relayer";
var g2 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var at2 = "_subscription";
var U2 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ot2 = import_time3.ONE_SECOND / 2;
var ht = "y";
var ct2 = 1e4;
var ut2 = "0.3";
var C2 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var lt2 = "subscription";
var dt2 = "0.3";
var gt = import_time3.FIVE_SECONDS * 1e3;
var pt2 = "pairing";
var Dt2 = "0.3";
var L = { wc_pairingDelete: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 } } };
var _2 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var yt = "history";
var bt = "0.3";
var mt2 = "expirer";
var w = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var ft2 = "0.3";
var Y2 = "verify-api";
var le2 = "https://verify.walletconnect.com";
var Et = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = We, this.version = Ze2, this.initialized = false, this.storagePrefix = x2, this.init = async () => {
      if (!this.initialized) {
        const i2 = await this.getKeyChain();
        typeof i2 < "u" && (this.keychain = i2), this.initialized = true;
      }
    }, this.has = (i2) => (this.isInitialized(), this.keychain.has(i2)), this.set = async (i2, s) => {
      this.isInitialized(), this.keychain.set(i2, s), await this.persist();
    }, this.get = (i2) => {
      this.isInitialized();
      const s = this.keychain.get(i2);
      if (typeof s > "u") {
        const { message: n2 } = N("NO_MATCHING_KEY", `${this.name}: ${i2}`);
        throw new Error(n2);
      }
      return s;
    }, this.del = async (i2) => {
      this.isInitialized(), this.keychain.delete(i2), await this.persist();
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setKeyChain(e) {
    await this.core.storage.setItem(this.storageKey, Wn(e));
  }
  async getKeyChain() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var wt2 = class {
  constructor(e, t, i2) {
    this.core = e, this.logger = t, this.name = He2, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s) => (this.isInitialized(), this.keychain.has(s)), this.getClientId = async () => {
      this.isInitialized();
      const s = await this.getClientSeed(), n2 = generateKeyPair2(s);
      return encodeIss(n2.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s = An();
      return this.setPrivateKey(s.publicKey, s.privateKey);
    }, this.signJWT = async (s) => {
      this.isInitialized();
      const n2 = await this.getClientSeed(), a2 = generateKeyPair2(n2), o = Un(), h2 = Xe2;
      return await signJWT(o, s, h2, a2);
    }, this.generateSharedKey = (s, n2, a2) => {
      this.isInitialized();
      const o = this.getPrivateKey(s), h2 = _n(o, n2);
      return this.setSymKey(h2, a2);
    }, this.setSymKey = async (s, n2) => {
      this.isInitialized();
      const a2 = n2 || wn(s);
      return await this.keychain.set(a2, s), a2;
    }, this.deleteKeyPair = async (s) => {
      this.isInitialized(), await this.keychain.del(s);
    }, this.deleteSymKey = async (s) => {
      this.isInitialized(), await this.keychain.del(s);
    }, this.encode = async (s, n2, a2) => {
      this.isInitialized();
      const o = Pe(a2), h2 = safeJsonStringify(n2);
      if (Vn(o)) {
        const b4 = o.senderPublicKey, H3 = o.receiverPublicKey;
        s = await this.generateSharedKey(b4, H3);
      }
      const d2 = this.getSymKey(s), { type: l, senderPublicKey: D2 } = o;
      return Cn({ type: l, symKey: d2, message: h2, senderPublicKey: D2 });
    }, this.decode = async (s, n2, a2) => {
      this.isInitialized();
      const o = Dn(n2, a2);
      if (Vn(o)) {
        const l = o.receiverPublicKey, D2 = o.senderPublicKey;
        s = await this.generateSharedKey(l, D2);
      }
      const h2 = this.getSymKey(s), d2 = $n({ symKey: h2, encoded: n2 });
      return safeJsonParse(d2);
    }, this.getPayloadType = (s) => {
      const n2 = Q(s);
      return j(n2.type);
    }, this.getPayloadSenderPublicKey = (s) => {
      const n2 = Q(s);
      return n2.senderPublicKey ? toString2(n2.senderPublicKey, f) : void 0;
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.keychain = i2 || new Et(this.core, this.logger);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  async setPrivateKey(e, t) {
    return await this.keychain.set(e, t), e;
  }
  getPrivateKey(e) {
    return this.keychain.get(e);
  }
  async getClientSeed() {
    let e = "";
    try {
      e = this.keychain.get(ce2);
    } catch {
      e = Un(), await this.keychain.set(ce2, e);
    }
    return sr(e, "base16");
  }
  getSymKey(e) {
    return this.keychain.get(e);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var vt = class extends a {
  constructor(e, t) {
    super(e, t), this.logger = e, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = Qe2, this.version = et2, this.initialized = false, this.storagePrefix = x2, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i2 = await this.getRelayerMessages();
          typeof i2 < "u" && (this.messages = i2), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i2) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i2);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i2, s) => {
      this.isInitialized();
      const n2 = jn(s);
      let a2 = this.messages.get(i2);
      return typeof a2 > "u" && (a2 = {}), typeof a2[n2] < "u" || (a2[n2] = s, this.messages.set(i2, a2), await this.persist()), n2;
    }, this.get = (i2) => {
      this.isInitialized();
      let s = this.messages.get(i2);
      return typeof s > "u" && (s = {}), s;
    }, this.has = (i2, s) => {
      this.isInitialized();
      const n2 = this.get(i2), a2 = jn(s);
      return typeof n2[a2] < "u";
    }, this.del = async (i2) => {
      this.isInitialized(), this.messages.delete(i2), await this.persist();
    }, this.logger = (0, import_logger.generateChildLogger)(e, this.name), this.core = t;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setRelayerMessages(e) {
    await this.core.storage.setItem(this.storageKey, Wn(e));
  }
  async getRelayerMessages() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var hr = class extends u {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.events = new import_events4.EventEmitter(), this.name = it2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = 1e4, this.publish = async (i2, s, n2) => {
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i2, message: s, opts: n2 } });
      try {
        const a2 = (n2 == null ? void 0 : n2.ttl) || tt2, o = ct(n2), h2 = (n2 == null ? void 0 : n2.prompt) || false, d2 = (n2 == null ? void 0 : n2.tag) || 0, l = (n2 == null ? void 0 : n2.id) || getBigIntRpcId().toString(), D2 = { topic: i2, message: s, opts: { ttl: a2, relay: o, prompt: h2, tag: d2, id: l } };
        this.queue.set(l, D2);
        try {
          await await et(this.rpcPublish(i2, s, a2, o, h2, d2, l), this.publishTimeout), this.relayer.events.emit(g2.publish, D2);
        } catch {
          this.logger.debug("Publishing Payload stalled"), this.relayer.events.emit(g2.connection_stalled);
          return;
        }
        this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i2, message: s, opts: n2 } });
      } catch (a2) {
        throw this.logger.debug("Failed to Publish Payload"), this.logger.error(a2), a2;
      }
    }, this.on = (i2, s) => {
      this.events.on(i2, s);
    }, this.once = (i2, s) => {
      this.events.once(i2, s);
    }, this.off = (i2, s) => {
      this.events.off(i2, s);
    }, this.removeListener = (i2, s) => {
      this.events.removeListener(i2, s);
    }, this.relayer = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.registerEventListeners();
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  rpcPublish(e, t, i2, s, n2, a2, o) {
    var h2, d2, l, D2;
    const b4 = { method: at(s.protocol).publish, params: { topic: e, message: t, ttl: i2, prompt: n2, tag: a2 }, id: o };
    return S((h2 = b4.params) == null ? void 0 : h2.prompt) && ((d2 = b4.params) == null || delete d2.prompt), S((l = b4.params) == null ? void 0 : l.tag) && ((D2 = b4.params) == null || delete D2.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: b4 }), this.relayer.request(b4);
  }
  onPublish(e) {
    this.queue.delete(e);
  }
  checkQueue() {
    this.queue.forEach(async (e) => {
      const { topic: t, message: i2, opts: s } = e;
      await this.publish(t, i2, s);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      this.checkQueue();
    }), this.relayer.on(g2.message_ack, (e) => {
      this.onPublish(e.id.toString());
    });
  }
};
var cr = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e, t) => {
      const i2 = this.get(e);
      this.exists(e, t) || this.map.set(e, [...i2, t]);
    }, this.get = (e) => this.map.get(e) || [], this.exists = (e, t) => this.get(e).includes(t), this.delete = (e, t) => {
      if (typeof t > "u") {
        this.map.delete(e);
        return;
      }
      if (!this.map.has(e))
        return;
      const i2 = this.get(e);
      if (!this.exists(e, t))
        return;
      const s = i2.filter((n2) => n2 !== t);
      if (!s.length) {
        this.map.delete(e);
        return;
      }
      this.map.set(e, s);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var ur = Object.defineProperty;
var lr = Object.defineProperties;
var dr = Object.getOwnPropertyDescriptors;
var It2 = Object.getOwnPropertySymbols;
var gr = Object.prototype.hasOwnProperty;
var pr = Object.prototype.propertyIsEnumerable;
var Ct2 = (r, e, t) => e in r ? ur(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var M = (r, e) => {
  for (var t in e || (e = {}))
    gr.call(e, t) && Ct2(r, t, e[t]);
  if (It2)
    for (var t of It2(e))
      pr.call(e, t) && Ct2(r, t, e[t]);
  return r;
};
var de = (r, e) => lr(r, dr(e));
var _t2 = class extends d {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new cr(), this.events = new import_events4.EventEmitter(), this.name = lt2, this.version = dt2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = x2, this.subscribeTimeout = 1e4, this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restart(), this.registerEventListeners(), this.onEnable(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i2, s) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i2, opts: s } });
      try {
        const n2 = ct(s), a2 = { topic: i2, relay: n2 };
        this.pending.set(i2, a2);
        const o = await this.rpcSubscribe(i2, n2);
        return this.onSubscribe(o, a2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i2, opts: s } }), o;
      } catch (n2) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n2), n2;
      }
    }, this.unsubscribe = async (i2, s) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s == null ? void 0 : s.id) < "u" ? await this.unsubscribeById(i2, s.id, s) : await this.unsubscribeByTopic(i2, s);
    }, this.isSubscribed = async (i2) => this.topics.includes(i2) ? true : await new Promise((s, n2) => {
      const a2 = new import_time3.Watch();
      a2.start(this.pendingSubscriptionWatchLabel);
      const o = setInterval(() => {
        !this.pending.has(i2) && this.topics.includes(i2) && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), s(true)), a2.elapsed(this.pendingSubscriptionWatchLabel) >= gt && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), n2(new Error("Subscription resolution timeout")));
      }, this.pollingInterval);
    }).catch(() => false), this.on = (i2, s) => {
      this.events.on(i2, s);
    }, this.once = (i2, s) => {
      this.events.once(i2, s);
    }, this.off = (i2, s) => {
      this.events.off(i2, s);
    }, this.removeListener = (i2, s) => {
      this.events.removeListener(i2, s);
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.clientId = "";
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e, t) {
    let i2 = false;
    try {
      i2 = this.getSubscription(e).topic === t;
    } catch {
    }
    return i2;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e, t) {
    const i2 = this.topicMap.get(e);
    await Promise.all(i2.map(async (s) => await this.unsubscribeById(e, s, t)));
  }
  async unsubscribeById(e, t, i2) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i2 } });
    try {
      const s = ct(i2);
      await this.rpcUnsubscribe(e, t, s);
      const n2 = R("USER_DISCONNECTED", `${this.name}, ${e}`);
      await this.onUnsubscribe(e, t, n2), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i2 } });
    } catch (s) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s), s;
    }
  }
  async rpcSubscribe(e, t) {
    const i2 = { method: at(t.protocol).subscribe, params: { topic: e } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i2 });
    try {
      await await et(this.relayer.request(i2), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(g2.connection_stalled);
    }
    return jn(e + this.clientId);
  }
  async rpcBatchSubscribe(e) {
    if (!e.length)
      return;
    const t = e[0].relay, i2 = { method: at(t.protocol).batchSubscribe, params: { topics: e.map((s) => s.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i2 });
    try {
      return await await et(this.relayer.request(i2), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(g2.connection_stalled);
    }
  }
  rpcUnsubscribe(e, t, i2) {
    const s = { method: at(i2.protocol).unsubscribe, params: { topic: e, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s }), this.relayer.request(s);
  }
  onSubscribe(e, t) {
    this.setSubscription(e, de(M({}, t), { id: e })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e) {
    e.length && e.forEach((t) => {
      this.setSubscription(t.id, M({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e, t, i2) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i2), await this.relayer.messages.del(e);
  }
  async setRelayerSubscriptions(e) {
    await this.relayer.core.storage.setItem(this.storageKey, e);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e, t) {
    this.subscriptions.has(e) || (this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e, subscription: t }), this.addSubscription(e, t));
  }
  addSubscription(e, t) {
    this.subscriptions.set(e, M({}, t)), this.topicMap.set(t.topic, e), this.events.emit(C2.created, t);
  }
  getSubscription(e) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e });
    const t = this.subscriptions.get(e);
    if (!t) {
      const { message: i2 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i2);
    }
    return t;
  }
  deleteSubscription(e, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e, reason: t });
    const i2 = this.getSubscription(e);
    this.subscriptions.delete(e), this.topicMap.delete(i2.topic, e), this.events.emit(C2.deleted, de(M({}, i2), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(C2.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e; t++) {
        const i2 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i2);
      }
    }
    this.events.emit(C2.resubscribed);
  }
  async restore() {
    try {
      const e = await this.getRelayerSubscriptions();
      if (typeof e > "u" || !e.length)
        return;
      if (this.subscriptions.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
    }
  }
  async batchSubscribe(e) {
    if (!e.length)
      return;
    const t = await this.rpcBatchSubscribe(e);
    C(t) && this.onBatchSubscribe(t.map((i2, s) => de(M({}, e[s]), { id: i2 })));
  }
  async onConnect() {
    this.restartInProgress || (await this.restart(), this.onEnable());
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (this.relayer.transportExplicitlyClosed)
      return;
    const e = [];
    this.pending.forEach((t) => {
      e.push(t);
    }), await this.batchSubscribe(e);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.relayer.on(g2.connect, async () => {
      await this.onConnect();
    }), this.relayer.on(g2.disconnect, () => {
      this.onDisconnect();
    }), this.events.on(C2.created, async (e) => {
      const t = C2.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    }), this.events.on(C2.deleted, async (e) => {
      const t = C2.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e());
      }, this.pollingInterval);
    });
  }
};
var Dr = Object.defineProperty;
var Rt2 = Object.getOwnPropertySymbols;
var yr = Object.prototype.hasOwnProperty;
var br = Object.prototype.propertyIsEnumerable;
var St = (r, e, t) => e in r ? Dr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var mr = (r, e) => {
  for (var t in e || (e = {}))
    yr.call(e, t) && St(r, t, e[t]);
  if (Rt2)
    for (var t of Rt2(e))
      br.call(e, t) && St(r, t, e[t]);
  return r;
};
var Tt2 = class extends g {
  constructor(e) {
    super(e), this.protocol = "wc", this.version = 2, this.events = new import_events4.EventEmitter(), this.name = nt2, this.transportExplicitlyClosed = false, this.initialized = false, this.reconnecting = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.request = async (t) => {
      this.logger.debug("Publishing Request Payload");
      try {
        return await this.toEstablishConnection(), await this.provider.request(t);
      } catch (i2) {
        throw this.logger.debug("Failed to Publish Request"), this.logger.error(i2), i2;
      }
    }, this.core = e.core, this.logger = typeof e.logger < "u" && typeof e.logger != "string" ? (0, import_logger.generateChildLogger)(e.logger, this.name) : (0, import_logger.pino)((0, import_logger.getDefaultLoggerOptions)({ level: e.logger || rt2 })), this.messages = new vt(this.logger, e.core), this.subscriber = new _t2(this, this.logger), this.publisher = new hr(this, this.logger), this.relayUrl = (e == null ? void 0 : e.relayUrl) || ue2, this.projectId = e.projectId, this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), await this.createProvider(), await Promise.all([this.messages.init(), this.transportOpen(), this.subscriber.init()]), this.registerEventListeners(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && (this.logger.info("No topics subscribted to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, ct2);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get connected() {
    return this.provider.connection.connected;
  }
  get connecting() {
    return this.provider.connection.connecting;
  }
  async publish(e, t, i2) {
    this.isInitialized(), await this.publisher.publish(e, t, i2), await this.recordMessageEvent({ topic: e, message: t, publishedAt: Date.now() });
  }
  async subscribe(e, t) {
    this.isInitialized();
    let i2 = "";
    return await Promise.all([new Promise((s) => {
      this.subscriber.once(C2.created, (n2) => {
        n2.topic === e && s();
      });
    }), new Promise(async (s) => {
      i2 = await this.subscriber.subscribe(e, t), s();
    })]), i2;
  }
  async unsubscribe(e, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e, t);
  }
  on(e, t) {
    this.events.on(e, t);
  }
  once(e, t) {
    this.events.once(e, t);
  }
  off(e, t) {
    this.events.off(e, t);
  }
  removeListener(e, t) {
    this.events.removeListener(e, t);
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, this.connected && (await this.provider.disconnect(), this.events.emit(g2.transport_closed));
  }
  async transportOpen(e) {
    if (this.transportExplicitlyClosed = false, !this.reconnecting) {
      this.relayUrl = e || this.relayUrl, this.reconnecting = true;
      try {
        await Promise.all([new Promise((t) => {
          this.initialized || t(), this.subscriber.once(C2.resubscribed, () => {
            t();
          });
        }), await Promise.race([new Promise(async (t, i2) => {
          await et(this.provider.connect(), 5e3, "socket stalled").catch((s) => i2(s)).then(() => t()).finally(() => this.removeListener(g2.transport_closed, this.rejectTransportOpen));
        }), new Promise((t) => this.once(g2.transport_closed, this.rejectTransportOpen))])]);
      } catch (t) {
        this.logger.error(t);
        const i2 = t;
        if (!this.isConnectionStalled(i2.message))
          throw t;
        this.events.emit(g2.transport_closed);
      } finally {
        this.reconnecting = false;
      }
    }
  }
  async restartTransport(e) {
    this.transportExplicitlyClosed || (this.relayUrl = e || this.relayUrl, this.connected && await Promise.all([new Promise((t) => {
      this.provider.once(U2.disconnect, () => {
        t();
      });
    }), this.transportClose()]), await this.createProvider(), await this.transportOpen());
  }
  isConnectionStalled(e) {
    return this.staleConnectionErrors.some((t) => e.includes(t));
  }
  rejectTransportOpen() {
    throw new Error("closeTransport called before connection was established");
  }
  async createProvider() {
    const e = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new esm_default2(qn({ sdkVersion: ht, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e, useOnCloseEvent: true }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e) {
    const { topic: t, message: i2 } = e;
    await this.messages.set(t, i2);
  }
  async shouldIgnoreMessageEvent(e) {
    const { topic: t, message: i2 } = e;
    return await this.subscriber.isSubscribed(t) ? this.messages.has(t, i2) : true;
  }
  async onProviderPayload(e) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e }), isJsonRpcRequest(e)) {
      if (!e.method.endsWith(at2))
        return;
      const t = e.params, { topic: i2, message: s, publishedAt: n2 } = t.data, a2 = { topic: i2, message: s, publishedAt: n2 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(mr({ type: "event", event: t.id }, a2)), this.events.emit(t.id, a2), await this.acknowledgePayload(e), await this.onMessageEvent(a2);
    } else
      isJsonRpcResponse(e) && this.events.emit(g2.message_ack, e);
  }
  async onMessageEvent(e) {
    await this.shouldIgnoreMessageEvent(e) || (this.events.emit(g2.message, e), await this.recordMessageEvent(e));
  }
  async acknowledgePayload(e) {
    const t = formatJsonRpcResult(e.id, true);
    await this.provider.connection.send(t);
  }
  registerProviderListeners() {
    this.provider.on(U2.payload, (e) => this.onProviderPayload(e)), this.provider.on(U2.connect, () => {
      this.events.emit(g2.connect);
    }), this.provider.on(U2.disconnect, () => {
      this.onProviderDisconnect();
    }), this.provider.on(U2.error, (e) => {
      this.logger.error(e), this.events.emit(g2.error, e);
    });
  }
  registerEventListeners() {
    this.events.on(g2.connection_stalled, async () => {
      await this.restartTransport();
    });
  }
  onProviderDisconnect() {
    this.events.emit(g2.disconnect), this.attemptToReconnect();
  }
  attemptToReconnect() {
    this.transportExplicitlyClosed || setTimeout(async () => {
      await this.restartTransport();
    }, (0, import_time3.toMiliseconds)(ot2));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async toEstablishConnection() {
    if (!this.connected) {
      if (this.connecting)
        return await new Promise((e) => {
          const t = setInterval(() => {
            this.connected && (clearInterval(t), e());
          }, this.connectionStatusPollingInterval);
        });
      await this.restartTransport();
    }
  }
};
var fr = Object.defineProperty;
var Pt2 = Object.getOwnPropertySymbols;
var Er = Object.prototype.hasOwnProperty;
var wr = Object.prototype.propertyIsEnumerable;
var xt2 = (r, e, t) => e in r ? fr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var Ot2 = (r, e) => {
  for (var t in e || (e = {}))
    Er.call(e, t) && xt2(r, t, e[t]);
  if (Pt2)
    for (var t of Pt2(e))
      wr.call(e, t) && xt2(r, t, e[t]);
  return r;
};
var At2 = class extends p {
  constructor(e, t, i2, s = x2, n2 = void 0) {
    super(e, t, i2, s), this.core = e, this.logger = t, this.name = i2, this.map = /* @__PURE__ */ new Map(), this.version = ut2, this.cached = [], this.initialized = false, this.storagePrefix = x2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((a2) => {
        this.getKey && a2 !== null && !S(a2) ? this.map.set(this.getKey(a2), a2) : At(a2) ? this.map.set(a2.id, a2) : Ut(a2) && this.map.set(a2.topic, a2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) ? await this.update(a2, o) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: a2, value: o }), this.map.set(a2, o), await this.persist());
    }, this.get = (a2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: a2 }), this.getData(a2)), this.getAll = (a2) => (this.isInitialized(), a2 ? this.values.filter((o) => Object.keys(a2).every((h2) => (0, import_lodash.default)(o[h2], a2[h2]))) : this.values), this.update = async (a2, o) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: a2, update: o });
      const h2 = Ot2(Ot2({}, this.getData(a2)), o);
      this.map.set(a2, h2), await this.persist();
    }, this.delete = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: a2, reason: o }), this.map.delete(a2), await this.persist());
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.storagePrefix = s, this.getKey = n2;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  async setDataStore(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e) {
    const t = this.map.get(e);
    if (!t) {
      const { message: i2 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i2), new Error(i2);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e = await this.getDataStore();
      if (typeof e > "u" || !e.length)
        return;
      if (this.map.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var zt = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.name = pt2, this.version = Dt2, this.events = new import_events4.default(), this.initialized = false, this.storagePrefix = x2, this.ignoredPayloadTypes = [U], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i2 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i2])];
    }, this.create = async () => {
      this.isInitialized();
      const i2 = Un(), s = await this.core.crypto.setSymKey(i2), n2 = ot(import_time3.FIVE_MINUTES), a2 = { protocol: st2 }, o = { topic: s, expiry: n2, relay: a2, active: false }, h2 = mt({ protocol: this.core.protocol, version: this.core.version, topic: s, symKey: i2, relay: a2 });
      return await this.pairings.set(s, o), await this.core.relayer.subscribe(s), this.core.expirer.set(s, n2), { topic: s, uri: h2 };
    }, this.pair = async (i2) => {
      this.isInitialized(), this.isValidPair(i2);
      const { topic: s, symKey: n2, relay: a2 } = pt(i2.uri);
      if (this.pairings.keys.includes(s))
        throw new Error(`Pairing already exists: ${s}`);
      if (this.core.crypto.hasKeys(s))
        throw new Error(`Keychain already exists: ${s}`);
      const o = ot(import_time3.FIVE_MINUTES), h2 = { topic: s, relay: a2, expiry: o, active: false };
      return await this.pairings.set(s, h2), await this.core.crypto.setSymKey(n2, s), await this.core.relayer.subscribe(s, { relay: a2 }), this.core.expirer.set(s, o), i2.activatePairing && await this.activate({ topic: s }), h2;
    }, this.activate = async ({ topic: i2 }) => {
      this.isInitialized();
      const s = ot(import_time3.THIRTY_DAYS);
      await this.pairings.update(i2, { active: true, expiry: s }), this.core.expirer.set(i2, s);
    }, this.ping = async (i2) => {
      this.isInitialized(), await this.isValidPing(i2);
      const { topic: s } = i2;
      if (this.pairings.keys.includes(s)) {
        const n2 = await this.sendRequest(s, "wc_pairingPing", {}), { done: a2, resolve: o, reject: h2 } = Xn();
        this.events.once(it("pairing_ping", n2), ({ error: d2 }) => {
          d2 ? h2(d2) : o();
        }), await a2();
      }
    }, this.updateExpiry = async ({ topic: i2, expiry: s }) => {
      this.isInitialized(), await this.pairings.update(i2, { expiry: s });
    }, this.updateMetadata = async ({ topic: i2, metadata: s }) => {
      this.isInitialized(), await this.pairings.update(i2, { peerMetadata: s });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i2) => {
      this.isInitialized(), await this.isValidDisconnect(i2);
      const { topic: s } = i2;
      this.pairings.keys.includes(s) && (await this.sendRequest(s, "wc_pairingDelete", R("USER_DISCONNECTED")), await this.deletePairing(s));
    }, this.sendRequest = async (i2, s, n2) => {
      const a2 = formatJsonRpcRequest(s, n2), o = await this.core.crypto.encode(i2, a2), h2 = L[s].req;
      return this.core.history.set(i2, a2), this.core.relayer.publish(i2, o, h2), a2.id;
    }, this.sendResult = async (i2, s, n2) => {
      const a2 = formatJsonRpcResult(i2, n2), o = await this.core.crypto.encode(s, a2), h2 = await this.core.history.get(s, i2), d2 = L[h2.request.method].res;
      await this.core.relayer.publish(s, o, d2), await this.core.history.resolve(a2);
    }, this.sendError = async (i2, s, n2) => {
      const a2 = formatJsonRpcError(i2, n2), o = await this.core.crypto.encode(s, a2), h2 = await this.core.history.get(s, i2), d2 = L[h2.request.method] ? L[h2.request.method].res : L.unregistered_method.res;
      await this.core.relayer.publish(s, o, d2), await this.core.history.resolve(a2);
    }, this.deletePairing = async (i2, s) => {
      await this.core.relayer.unsubscribe(i2), await Promise.all([this.pairings.delete(i2, R("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i2), s ? Promise.resolve() : this.core.expirer.del(i2)]);
    }, this.cleanup = async () => {
      const i2 = this.pairings.getAll().filter((s) => st(s.expiry));
      await Promise.all(i2.map((s) => this.deletePairing(s.topic)));
    }, this.onRelayEventRequest = (i2) => {
      const { topic: s, payload: n2 } = i2, a2 = n2.method;
      if (this.pairings.keys.includes(s))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingRequest(s, n2);
          case "wc_pairingDelete":
            return this.onPairingDeleteRequest(s, n2);
          default:
            return this.onUnknownRpcMethodRequest(s, n2);
        }
    }, this.onRelayEventResponse = async (i2) => {
      const { topic: s, payload: n2 } = i2, a2 = (await this.core.history.get(s, n2.id)).request.method;
      if (this.pairings.keys.includes(s))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingResponse(s, n2);
          default:
            return this.onUnknownRpcMethodResponse(a2);
        }
    }, this.onPairingPingRequest = async (i2, s) => {
      const { id: n2 } = s;
      try {
        this.isValidPing({ topic: i2 }), await this.sendResult(n2, i2, true), this.events.emit("pairing_ping", { id: n2, topic: i2 });
      } catch (a2) {
        await this.sendError(n2, i2, a2), this.logger.error(a2);
      }
    }, this.onPairingPingResponse = (i2, s) => {
      const { id: n2 } = s;
      setTimeout(() => {
        isJsonRpcResult(s) ? this.events.emit(it("pairing_ping", n2), {}) : isJsonRpcError(s) && this.events.emit(it("pairing_ping", n2), { error: s.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i2, s) => {
      const { id: n2 } = s;
      try {
        this.isValidDisconnect({ topic: i2 }), await this.deletePairing(i2), this.events.emit("pairing_delete", { id: n2, topic: i2 });
      } catch (a2) {
        await this.sendError(n2, i2, a2), this.logger.error(a2);
      }
    }, this.onUnknownRpcMethodRequest = async (i2, s) => {
      const { id: n2, method: a2 } = s;
      try {
        if (this.registeredMethods.includes(a2))
          return;
        const o = R("WC_METHOD_UNSUPPORTED", a2);
        await this.sendError(n2, i2, o), this.logger.error(o);
      } catch (o) {
        await this.sendError(n2, i2, o), this.logger.error(o);
      }
    }, this.onUnknownRpcMethodResponse = (i2) => {
      this.registeredMethods.includes(i2) || this.logger.error(R("WC_METHOD_UNSUPPORTED", i2));
    }, this.isValidPair = (i2) => {
      if (!$t(i2)) {
        const { message: s } = N("MISSING_OR_INVALID", `pair() params: ${i2}`);
        throw new Error(s);
      }
      if (!Rt(i2.uri)) {
        const { message: s } = N("MISSING_OR_INVALID", `pair() uri: ${i2.uri}`);
        throw new Error(s);
      }
    }, this.isValidPing = async (i2) => {
      if (!$t(i2)) {
        const { message: n2 } = N("MISSING_OR_INVALID", `ping() params: ${i2}`);
        throw new Error(n2);
      }
      const { topic: s } = i2;
      await this.isValidPairingTopic(s);
    }, this.isValidDisconnect = async (i2) => {
      if (!$t(i2)) {
        const { message: n2 } = N("MISSING_OR_INVALID", `disconnect() params: ${i2}`);
        throw new Error(n2);
      }
      const { topic: s } = i2;
      await this.isValidPairingTopic(s);
    }, this.isValidPairingTopic = async (i2) => {
      if (!m(i2, false)) {
        const { message: s } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${i2}`);
        throw new Error(s);
      }
      if (!this.pairings.keys.includes(i2)) {
        const { message: s } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i2}`);
        throw new Error(s);
      }
      if (st(this.pairings.get(i2).expiry)) {
        await this.deletePairing(i2);
        const { message: s } = N("EXPIRED", `pairing topic: ${i2}`);
        throw new Error(s);
      }
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.pairings = new At2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(g2.message, async (e) => {
      const { topic: t, message: i2 } = e;
      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i2)))
        return;
      const s = await this.core.crypto.decode(t, i2);
      isJsonRpcRequest(s) ? (this.core.history.set(t, s), this.onRelayEventRequest({ topic: t, payload: s })) : isJsonRpcResponse(s) && (await this.core.history.resolve(s), this.onRelayEventResponse({ topic: t, payload: s }));
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(w.expired, async (e) => {
      const { topic: t } = rt(e.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit("pairing_expire", { topic: t }));
    });
  }
};
var Nt = class extends h {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events4.EventEmitter(), this.name = yt, this.version = bt, this.cached = [], this.initialized = false, this.storagePrefix = x2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i2) => this.records.set(i2.id, i2)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i2, s, n2) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i2, request: s, chainId: n2 }), this.records.has(s.id))
        return;
      const a2 = { id: s.id, topic: i2, request: { method: s.method, params: s.params || null }, chainId: n2 };
      this.records.set(a2.id, a2), this.events.emit(_2.created, a2);
    }, this.resolve = async (i2) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i2 }), !this.records.has(i2.id))
        return;
      const s = await this.getRecord(i2.id);
      typeof s.response > "u" && (s.response = isJsonRpcError(i2) ? { error: i2.error } : { result: i2.result }, this.records.set(s.id, s), this.events.emit(_2.updated, s));
    }, this.get = async (i2, s) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i2, id: s }), await this.getRecord(s)), this.delete = (i2, s) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s }), this.values.forEach((n2) => {
        if (n2.topic === i2) {
          if (typeof s < "u" && n2.id !== s)
            return;
          this.records.delete(n2.id), this.events.emit(_2.deleted, n2);
        }
      });
    }, this.exists = async (i2, s) => (this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i2 : false), this.on = (i2, s) => {
      this.events.on(i2, s);
    }, this.once = (i2, s) => {
      this.events.once(i2, s);
    }, this.off = (i2, s) => {
      this.events.off(i2, s);
    }, this.removeListener = (i2, s) => {
      this.events.removeListener(i2, s);
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u")
        return;
      const i2 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e.push(i2);
    }), e;
  }
  async setJsonRpcRecords(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e) {
    this.isInitialized();
    const t = this.records.get(e);
    if (!t) {
      const { message: i2 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i2);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(_2.sync);
  }
  async restore() {
    try {
      const e = await this.getJsonRpcRecords();
      if (typeof e > "u" || !e.length)
        return;
      if (this.records.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
    }
  }
  registerEventListeners() {
    this.events.on(_2.created, (e) => {
      const t = _2.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_2.updated, (e) => {
      const t = _2.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_2.deleted, (e) => {
      const t = _2.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Ut2 = class extends E {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events4.EventEmitter(), this.name = mt2, this.version = ft2, this.cached = [], this.initialized = false, this.storagePrefix = x2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i2) => this.expirations.set(i2.target, i2)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i2) => {
      try {
        const s = this.formatTarget(i2);
        return typeof this.getExpiration(s) < "u";
      } catch {
        return false;
      }
    }, this.set = (i2, s) => {
      this.isInitialized();
      const n2 = this.formatTarget(i2), a2 = { target: n2, expiry: s };
      this.expirations.set(n2, a2), this.checkExpiry(n2, a2), this.events.emit(w.created, { target: n2, expiration: a2 });
    }, this.get = (i2) => {
      this.isInitialized();
      const s = this.formatTarget(i2);
      return this.getExpiration(s);
    }, this.del = (i2) => {
      if (this.isInitialized(), this.has(i2)) {
        const s = this.formatTarget(i2), n2 = this.getExpiration(s);
        this.expirations.delete(s), this.events.emit(w.deleted, { target: s, expiration: n2 });
      }
    }, this.on = (i2, s) => {
      this.events.on(i2, s);
    }, this.once = (i2, s) => {
      this.events.once(i2, s);
    }, this.off = (i2, s) => {
      this.events.off(i2, s);
    }, this.removeListener = (i2, s) => {
      this.events.removeListener(i2, s);
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e) {
    if (typeof e == "string")
      return nt(e);
    if (typeof e == "number")
      return tt(e);
    const { message: t } = N("UNKNOWN_TYPE", `Target type: ${typeof e}`);
    throw new Error(t);
  }
  async setExpirations(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(w.sync);
  }
  async restore() {
    try {
      const e = await this.getExpirations();
      if (typeof e > "u" || !e.length)
        return;
      if (this.expirations.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
    }
  }
  getExpiration(e) {
    const t = this.expirations.get(e);
    if (!t) {
      const { message: i2 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i2), new Error(i2);
    }
    return t;
  }
  checkExpiry(e, t) {
    const { expiry: i2 } = t;
    (0, import_time3.toMiliseconds)(i2) - Date.now() <= 0 && this.expire(e, t);
  }
  expire(e, t) {
    this.expirations.delete(e), this.events.emit(w.expired, { target: e, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e, t) => this.checkExpiry(t, e));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(w.created, (e) => {
      const t = w.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w.expired, (e) => {
      const t = w.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w.deleted, (e) => {
      const t = w.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Lt2 = class extends y {
  constructor(e, t) {
    super(e, t), this.projectId = e, this.logger = t, this.name = Y2, this.initialized = false, this.init = async (i2) => {
      je() || !Ce() || (this.verifyUrl = (i2 == null ? void 0 : i2.verifyUrl) || le2, await this.createIframe());
    }, this.register = async (i2) => {
      var s;
      this.initialized || await this.init(), this.iframe && ((s = this.iframe.contentWindow) == null || s.postMessage(i2.attestationId, this.verifyUrl), this.logger.info(`postMessage sent: ${i2.attestationId} ${this.verifyUrl}`));
    }, this.resolve = async (i2) => {
      var s;
      if (this.isDevEnv)
        return "";
      this.logger.info(`resolving attestation: ${i2.attestationId}`);
      const n2 = this.startAbortTimer(import_time3.FIVE_SECONDS), a2 = await fetch(`${this.verifyUrl}/attestation/${i2.attestationId}`, { signal: this.abortController.signal });
      return clearTimeout(n2), a2.status === 200 ? (s = await a2.json()) == null ? void 0 : s.origin : "";
    }, this.createIframe = async () => {
      try {
        await Promise.race([new Promise((i2, s) => {
          if (document.getElementById(Y2))
            return i2();
          const n2 = document.createElement("iframe");
          n2.setAttribute("id", Y2), n2.setAttribute("src", `${this.verifyUrl}/${this.projectId}`), n2.style.display = "none", n2.addEventListener("load", () => {
            this.initialized = true, i2();
          }), n2.addEventListener("error", (a2) => {
            s(a2);
          }), document.body.append(n2), this.iframe = n2;
        }), new Promise((i2) => {
          setTimeout(() => i2("iframe load timeout"), (0, import_time3.toMiliseconds)(import_time3.ONE_SECOND / 2));
        })]);
      } catch (i2) {
        this.logger.error(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.error(i2);
      }
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.verifyUrl = le2, this.abortController = new AbortController(), this.isDevEnv = X() && process.env.IS_VITEST;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  startAbortTimer(e) {
    return setTimeout(() => this.abortController.abort(), (0, import_time3.toMiliseconds)(e));
  }
};
var vr = Object.defineProperty;
var Ft2 = Object.getOwnPropertySymbols;
var Ir = Object.prototype.hasOwnProperty;
var Cr = Object.prototype.propertyIsEnumerable;
var $t2 = (r, e, t) => e in r ? vr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var Mt2 = (r, e) => {
  for (var t in e || (e = {}))
    Ir.call(e, t) && $t2(r, t, e[t]);
  if (Ft2)
    for (var t of Ft2(e))
      Cr.call(e, t) && $t2(r, t, e[t]);
  return r;
};
var J2 = class extends n {
  constructor(e) {
    super(e), this.protocol = he, this.version = Ge, this.name = G2, this.events = new import_events4.EventEmitter(), this.initialized = false, this.on = (i2, s) => this.events.on(i2, s), this.once = (i2, s) => this.events.once(i2, s), this.off = (i2, s) => this.events.off(i2, s), this.removeListener = (i2, s) => this.events.removeListener(i2, s), this.projectId = e == null ? void 0 : e.projectId, this.relayUrl = (e == null ? void 0 : e.relayUrl) || ue2;
    const t = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : (0, import_logger.pino)((0, import_logger.getDefaultLoggerOptions)({ level: (e == null ? void 0 : e.logger) || Ye2.logger }));
    this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new wt2(this, this.logger, e == null ? void 0 : e.keychain), this.history = new Nt(this, this.logger), this.expirer = new Ut2(this, this.logger), this.storage = e != null && e.storage ? e.storage : new import_keyvaluestorage.default(Mt2(Mt2({}, Je2), e == null ? void 0 : e.storageOptions)), this.relayer = new Tt2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new zt(this, this.logger), this.verify = new Lt2(this.projectId || "", this.logger);
  }
  static async init(e) {
    const t = new J2(e);
    return await t.initialize(), t;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
    }
  }
};
var _r = J2;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_logger2 = __toESM(require_cjs6());
var import_events5 = __toESM(require_events());
var import_time4 = __toESM(require_cjs3());
init_esm2();
var j2 = "wc";
var k2 = 2;
var J3 = "client";
var L2 = `${j2}@${k2}:${J3}:`;
var b3 = { name: J3, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var ee2 = "proposal";
var se2 = "Proposal expired";
var te2 = "session";
var A = import_time4.SEVEN_DAYS;
var ie2 = "engine";
var O2 = { wc_sessionPropose: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1101 } }, wc_sessionSettle: { req: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1114 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1115 } } };
var G3 = { min: import_time4.FIVE_MINUTES, max: import_time4.SEVEN_DAYS };
var re2 = "request";
var ne3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
var Be3 = Object.defineProperty;
var Qe3 = Object.defineProperties;
var We2 = Object.getOwnPropertyDescriptors;
var oe3 = Object.getOwnPropertySymbols;
var Ze3 = Object.prototype.hasOwnProperty;
var es2 = Object.prototype.propertyIsEnumerable;
var ae3 = (d2, r, e) => r in d2 ? Be3(d2, r, { enumerable: true, configurable: true, writable: true, value: e }) : d2[r] = e;
var w2 = (d2, r) => {
  for (var e in r || (r = {}))
    Ze3.call(r, e) && ae3(d2, e, r[e]);
  if (oe3)
    for (var e of oe3(r))
      es2.call(r, e) && ae3(d2, e, r[e]);
  return d2;
};
var X3 = (d2, r) => Qe3(d2, We2(r));
var ss2 = class extends S2 {
  constructor(r) {
    super(r), this.name = ie2, this.events = new import_events5.default(), this.initialized = false, this.ignoredPayloadTypes = [U], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.client.core.pairing.register({ methods: Object.keys(O2) }), this.initialized = true);
    }, this.connect = async (e) => {
      this.isInitialized();
      const s = X3(w2({}, e), { requiredNamespaces: e.requiredNamespaces || {}, optionalNamespaces: e.optionalNamespaces || {} });
      await this.isValidConnect(s);
      const { pairingTopic: t, requiredNamespaces: i2, optionalNamespaces: n2, sessionProperties: a2, relays: o } = s;
      let l = t, h2, I2 = false;
      if (l && (I2 = this.client.core.pairing.pairings.get(l).active), !l || !I2) {
        const { topic: v, uri: y3 } = await this.client.core.pairing.create();
        l = v, h2 = y3;
      }
      const g3 = await this.client.core.crypto.generateKeyPair(), f3 = w2({ requiredNamespaces: i2, optionalNamespaces: n2, relays: o ?? [{ protocol: st2 }], proposer: { publicKey: g3, metadata: this.client.metadata } }, a2 && { sessionProperties: a2 }), { reject: m3, resolve: V4, done: M2 } = Xn(import_time4.FIVE_MINUTES, se2);
      if (this.events.once(it("session_connect"), async ({ error: v, session: y3 }) => {
        if (v)
          m3(v);
        else if (y3) {
          y3.self.publicKey = g3;
          const H3 = X3(w2({}, y3), { requiredNamespaces: y3.requiredNamespaces, optionalNamespaces: y3.optionalNamespaces });
          await this.client.session.set(y3.topic, H3), await this.setExpiry(y3.topic, y3.expiry), l && await this.client.core.pairing.updateMetadata({ topic: l, metadata: y3.peer.metadata }), V4(H3);
        }
      }), !l) {
        const { message: v } = N("NO_MATCHING_KEY", `connect() pairing topic: ${l}`);
        throw new Error(v);
      }
      const C4 = await this.sendRequest(l, "wc_sessionPropose", f3), ce3 = ot(import_time4.FIVE_MINUTES);
      return await this.setProposal(C4, w2({ id: C4, expiry: ce3 }, f3)), { uri: h2, approval: M2 };
    }, this.pair = async (e) => (this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e) => {
      this.isInitialized(), await this.isValidApprove(e);
      const { id: s, relayProtocol: t, namespaces: i2, sessionProperties: n2 } = e, a2 = this.client.proposal.get(s);
      let { pairingTopic: o, proposer: l, requiredNamespaces: h2, optionalNamespaces: I2 } = a2;
      o = o || "", x(h2) || (h2 = Ot(i2, "approve()"));
      const g3 = await this.client.core.crypto.generateKeyPair(), f3 = l.publicKey, m3 = await this.client.core.crypto.generateSharedKey(g3, f3);
      o && s && (await this.client.core.pairing.updateMetadata({ topic: o, metadata: l.metadata }), await this.sendResult(s, o, { relay: { protocol: t ?? "irn" }, responderPublicKey: g3 }), await this.client.proposal.delete(s, R("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: o }));
      const V4 = w2({ relay: { protocol: t ?? "irn" }, namespaces: i2, requiredNamespaces: h2, optionalNamespaces: I2, pairingTopic: o, controller: { publicKey: g3, metadata: this.client.metadata }, expiry: ot(A) }, n2 && { sessionProperties: n2 });
      await this.client.core.relayer.subscribe(m3), await this.sendRequest(m3, "wc_sessionSettle", V4);
      const M2 = X3(w2({}, V4), { topic: m3, pairingTopic: o, acknowledged: false, self: V4.controller, peer: { publicKey: l.publicKey, metadata: l.metadata }, controller: g3 });
      return await this.client.session.set(m3, M2), await this.setExpiry(m3, ot(A)), { topic: m3, acknowledged: () => new Promise((C4) => setTimeout(() => C4(this.client.session.get(m3)), 500)) };
    }, this.reject = async (e) => {
      this.isInitialized(), await this.isValidReject(e);
      const { id: s, reason: t } = e, { pairingTopic: i2 } = this.client.proposal.get(s);
      i2 && (await this.sendError(s, i2, t), await this.client.proposal.delete(s, R("USER_DISCONNECTED")));
    }, this.update = async (e) => {
      this.isInitialized(), await this.isValidUpdate(e);
      const { topic: s, namespaces: t } = e, i2 = await this.sendRequest(s, "wc_sessionUpdate", { namespaces: t }), { done: n2, resolve: a2, reject: o } = Xn();
      return this.events.once(it("session_update", i2), ({ error: l }) => {
        l ? o(l) : a2();
      }), await this.client.session.update(s, { namespaces: t }), { acknowledged: n2 };
    }, this.extend = async (e) => {
      this.isInitialized(), await this.isValidExtend(e);
      const { topic: s } = e, t = await this.sendRequest(s, "wc_sessionExtend", {}), { done: i2, resolve: n2, reject: a2 } = Xn();
      return this.events.once(it("session_extend", t), ({ error: o }) => {
        o ? a2(o) : n2();
      }), await this.setExpiry(s, ot(A)), { acknowledged: i2 };
    }, this.request = async (e) => {
      this.isInitialized(), await this.isValidRequest(e);
      const { chainId: s, request: t, topic: i2, expiry: n2 } = e, a2 = await this.sendRequest(i2, "wc_sessionRequest", { request: t, chainId: s }, n2), { done: o, resolve: l, reject: h2 } = Xn(n2);
      return this.events.once(it("session_request", a2), ({ error: I2, result: g3 }) => {
        I2 ? h2(I2) : l(g3);
      }), this.client.events.emit("session_request_sent", { topic: i2, request: t, chainId: s, id: a2 }), await o();
    }, this.respond = async (e) => {
      this.isInitialized(), await this.isValidRespond(e);
      const { topic: s, response: t } = e, { id: i2 } = t;
      isJsonRpcResult(t) ? await this.sendResult(i2, s, t.result) : isJsonRpcError(t) && await this.sendError(i2, s, t.error), this.deletePendingSessionRequest(e.response.id, { message: "fulfilled", code: 0 });
    }, this.ping = async (e) => {
      this.isInitialized(), await this.isValidPing(e);
      const { topic: s } = e;
      if (this.client.session.keys.includes(s)) {
        const t = await this.sendRequest(s, "wc_sessionPing", {}), { done: i2, resolve: n2, reject: a2 } = Xn();
        this.events.once(it("session_ping", t), ({ error: o }) => {
          o ? a2(o) : n2();
        }), await i2();
      } else
        this.client.core.pairing.pairings.keys.includes(s) && await this.client.core.pairing.ping({ topic: s });
    }, this.emit = async (e) => {
      this.isInitialized(), await this.isValidEmit(e);
      const { topic: s, event: t, chainId: i2 } = e;
      await this.sendRequest(s, "wc_sessionEvent", { event: t, chainId: i2 });
    }, this.disconnect = async (e) => {
      this.isInitialized(), await this.isValidDisconnect(e);
      const { topic: s } = e;
      this.client.session.keys.includes(s) ? (await this.sendRequest(s, "wc_sessionDelete", R("USER_DISCONNECTED")), await this.deleteSession(s)) : await this.client.core.pairing.disconnect({ topic: s });
    }, this.find = (e) => (this.isInitialized(), this.client.session.getAll().filter((s) => Tt(s, e))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e) => {
      try {
        const s = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i2) => {
          var n2, a2;
          return ((n2 = i2.peerMetadata) == null ? void 0 : n2.url) && ((a2 = i2.peerMetadata) == null ? void 0 : a2.url) === e.self.metadata.url && i2.topic !== s.topic;
        });
        if (t.length === 0)
          return;
        this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i2) => this.client.core.pairing.disconnect({ topic: i2.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (s) {
        this.client.logger.error(s);
      }
    }, this.deleteSession = async (e, s) => {
      const { self: t } = this.client.session.get(e);
      await this.client.core.relayer.unsubscribe(e), await Promise.all([this.client.session.delete(e, R("USER_DISCONNECTED")), this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.deleteSymKey(e), s ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.deleteProposal = async (e, s) => {
      await Promise.all([this.client.proposal.delete(e, R("USER_DISCONNECTED")), s ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.deletePendingSessionRequest = async (e, s, t = false) => {
      await Promise.all([this.client.pendingRequest.delete(e, s), t ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.setExpiry = async (e, s) => {
      this.client.session.keys.includes(e) && await this.client.session.update(e, { expiry: s }), this.client.core.expirer.set(e, s);
    }, this.setProposal = async (e, s) => {
      await this.client.proposal.set(e, s), this.client.core.expirer.set(e, s.expiry);
    }, this.setPendingSessionRequest = async (e) => {
      const s = O2.wc_sessionRequest.req.ttl, { id: t, topic: i2, params: n2 } = e;
      await this.client.pendingRequest.set(t, { id: t, topic: i2, params: n2 }), s && this.client.core.expirer.set(t, ot(s));
    }, this.sendRequest = async (e, s, t, i2) => {
      const n2 = formatJsonRpcRequest(s, t);
      if (Ce() && ne3.includes(s)) {
        const l = jn(JSON.stringify(n2));
        await this.client.core.verify.register({ attestationId: l });
      }
      const a2 = await this.client.core.crypto.encode(e, n2), o = O2[s].req;
      return i2 && (o.ttl = i2), this.client.core.history.set(e, n2), this.client.core.relayer.publish(e, a2, o), n2.id;
    }, this.sendResult = async (e, s, t) => {
      const i2 = formatJsonRpcResult(e, t), n2 = await this.client.core.crypto.encode(s, i2), a2 = await this.client.core.history.get(s, e), o = O2[a2.request.method].res;
      this.client.core.relayer.publish(s, n2, o), await this.client.core.history.resolve(i2);
    }, this.sendError = async (e, s, t) => {
      const i2 = formatJsonRpcError(e, t), n2 = await this.client.core.crypto.encode(s, i2), a2 = await this.client.core.history.get(s, e), o = O2[a2.request.method].res;
      this.client.core.relayer.publish(s, n2, o), await this.client.core.history.resolve(i2);
    }, this.cleanup = async () => {
      const e = [], s = [];
      this.client.session.getAll().forEach((t) => {
        st(t.expiry) && e.push(t.topic);
      }), this.client.proposal.getAll().forEach((t) => {
        st(t.expiry) && s.push(t.id);
      }), await Promise.all([...e.map((t) => this.deleteSession(t)), ...s.map((t) => this.deleteProposal(t))]);
    }, this.onRelayEventRequest = (e) => {
      const { topic: s, payload: t } = e, i2 = t.method;
      switch (i2) {
        case "wc_sessionPropose":
          return this.onSessionProposeRequest(s, t);
        case "wc_sessionSettle":
          return this.onSessionSettleRequest(s, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateRequest(s, t);
        case "wc_sessionExtend":
          return this.onSessionExtendRequest(s, t);
        case "wc_sessionPing":
          return this.onSessionPingRequest(s, t);
        case "wc_sessionDelete":
          return this.onSessionDeleteRequest(s, t);
        case "wc_sessionRequest":
          return this.onSessionRequest(s, t);
        case "wc_sessionEvent":
          return this.onSessionEventRequest(s, t);
        default:
          return this.client.logger.info(`Unsupported request method ${i2}`);
      }
    }, this.onRelayEventResponse = async (e) => {
      const { topic: s, payload: t } = e, i2 = (await this.client.core.history.get(s, t.id)).request.method;
      switch (i2) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(s, t);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(s, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(s, t);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(s, t);
        case "wc_sessionPing":
          return this.onSessionPingResponse(s, t);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(s, t);
        default:
          return this.client.logger.info(`Unsupported response method ${i2}`);
      }
    }, this.onSessionProposeRequest = async (e, s) => {
      const { params: t, id: i2 } = s;
      try {
        this.isValidConnect(w2({}, s.params));
        const n2 = ot(import_time4.FIVE_MINUTES), a2 = w2({ id: i2, pairingTopic: e, expiry: n2 }, t);
        await this.setProposal(i2, a2);
        const o = jn(JSON.stringify(s)), l = await this.getVerifyContext(o, a2.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i2, params: a2, verifyContext: l });
      } catch (n2) {
        await this.sendError(i2, e, n2), this.client.logger.error(n2);
      }
    }, this.onSessionProposeResponse = async (e, s) => {
      const { id: t } = s;
      if (isJsonRpcResult(s)) {
        const { result: i2 } = s;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i2 });
        const n2 = this.client.proposal.get(t);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: n2 });
        const a2 = n2.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: a2 });
        const o = i2.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: o });
        const l = await this.client.core.crypto.generateSharedKey(a2, o);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: l });
        const h2 = await this.client.core.relayer.subscribe(l);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h2 }), await this.client.core.pairing.activate({ topic: e });
      } else
        isJsonRpcError(s) && (await this.client.proposal.delete(t, R("USER_DISCONNECTED")), this.events.emit(it("session_connect"), { error: s.error }));
    }, this.onSessionSettleRequest = async (e, s) => {
      const { id: t, params: i2 } = s;
      try {
        this.isValidSessionSettleRequest(i2);
        const { relay: n2, controller: a2, expiry: o, namespaces: l, requiredNamespaces: h2, optionalNamespaces: I2, sessionProperties: g3, pairingTopic: f3 } = s.params, m3 = w2({ topic: e, relay: n2, expiry: o, namespaces: l, acknowledged: true, pairingTopic: f3, requiredNamespaces: h2, optionalNamespaces: I2, controller: a2.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: a2.publicKey, metadata: a2.metadata } }, g3 && { sessionProperties: g3 });
        await this.sendResult(s.id, e, true), this.events.emit(it("session_connect"), { session: m3 }), this.cleanupDuplicatePairings(m3);
      } catch (n2) {
        await this.sendError(t, e, n2), this.client.logger.error(n2);
      }
    }, this.onSessionSettleResponse = async (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? (await this.client.session.update(e, { acknowledged: true }), this.events.emit(it("session_approve", t), {})) : isJsonRpcError(s) && (await this.client.session.delete(e, R("USER_DISCONNECTED")), this.events.emit(it("session_approve", t), { error: s.error }));
    }, this.onSessionUpdateRequest = async (e, s) => {
      const { params: t, id: i2 } = s;
      try {
        this.isValidUpdate(w2({ topic: e }, t)), await this.client.session.update(e, { namespaces: t.namespaces }), await this.sendResult(i2, e, true), this.client.events.emit("session_update", { id: i2, topic: e, params: t });
      } catch (n2) {
        await this.sendError(i2, e, n2), this.client.logger.error(n2);
      }
    }, this.onSessionUpdateResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it("session_update", t), {}) : isJsonRpcError(s) && this.events.emit(it("session_update", t), { error: s.error });
    }, this.onSessionExtendRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidExtend({ topic: e }), await this.setExpiry(e, ot(A)), await this.sendResult(t, e, true), this.client.events.emit("session_extend", { id: t, topic: e });
      } catch (i2) {
        await this.sendError(t, e, i2), this.client.logger.error(i2);
      }
    }, this.onSessionExtendResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it("session_extend", t), {}) : isJsonRpcError(s) && this.events.emit(it("session_extend", t), { error: s.error });
    }, this.onSessionPingRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidPing({ topic: e }), await this.sendResult(t, e, true), this.client.events.emit("session_ping", { id: t, topic: e });
      } catch (i2) {
        await this.sendError(t, e, i2), this.client.logger.error(i2);
      }
    }, this.onSessionPingResponse = (e, s) => {
      const { id: t } = s;
      setTimeout(() => {
        isJsonRpcResult(s) ? this.events.emit(it("session_ping", t), {}) : isJsonRpcError(s) && this.events.emit(it("session_ping", t), { error: s.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidDisconnect({ topic: e, reason: s.params }), await Promise.all([new Promise((i2) => {
          this.client.core.relayer.once(g2.publish, async () => {
            i2(await this.deleteSession(e));
          });
        }), this.sendResult(t, e, true)]), this.client.events.emit("session_delete", { id: t, topic: e });
      } catch (i2) {
        await this.sendError(t, e, i2), this.client.logger.error(i2);
      }
    }, this.onSessionRequest = async (e, s) => {
      const { id: t, params: i2 } = s;
      try {
        this.isValidRequest(w2({ topic: e }, i2)), await this.setPendingSessionRequest({ id: t, topic: e, params: i2 });
        const n2 = jn(JSON.stringify(s)), a2 = this.client.session.get(e), o = await this.getVerifyContext(n2, a2.peer.metadata);
        this.client.events.emit("session_request", { id: t, topic: e, params: i2, verifyContext: o });
      } catch (n2) {
        await this.sendError(t, e, n2), this.client.logger.error(n2);
      }
    }, this.onSessionRequestResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it("session_request", t), { result: s.result }) : isJsonRpcError(s) && this.events.emit(it("session_request", t), { error: s.error });
    }, this.onSessionEventRequest = async (e, s) => {
      const { id: t, params: i2 } = s;
      try {
        this.isValidEmit(w2({ topic: e }, i2)), this.client.events.emit("session_event", { id: t, topic: e, params: i2 });
      } catch (n2) {
        await this.sendError(t, e, n2), this.client.logger.error(n2);
      }
    }, this.isValidConnect = async (e) => {
      if (!$t(e)) {
        const { message: o } = N("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e)}`);
        throw new Error(o);
      }
      const { pairingTopic: s, requiredNamespaces: t, optionalNamespaces: i2, sessionProperties: n2, relays: a2 } = e;
      if (S(s) || await this.isValidPairingTopic(s), !jt(a2, true)) {
        const { message: o } = N("MISSING_OR_INVALID", `connect() relays: ${a2}`);
        throw new Error(o);
      }
      !S(t) && x(t) !== 0 && this.validateNamespaces(t, "requiredNamespaces"), !S(i2) && x(i2) !== 0 && this.validateNamespaces(i2, "optionalNamespaces"), S(n2) || this.validateSessionProps(n2, "sessionProperties");
    }, this.validateNamespaces = (e, s) => {
      const t = wt(e, "connect()", s);
      if (t)
        throw new Error(t.message);
    }, this.isValidApprove = async (e) => {
      if (!$t(e))
        throw new Error(N("MISSING_OR_INVALID", `approve() params: ${e}`).message);
      const { id: s, namespaces: t, relayProtocol: i2, sessionProperties: n2 } = e;
      await this.isValidProposalId(s);
      const a2 = this.client.proposal.get(s), o = sn(t, "approve()");
      if (o)
        throw new Error(o.message);
      const l = an(a2.requiredNamespaces, t, "approve()");
      if (l)
        throw new Error(l.message);
      if (!m(i2, true)) {
        const { message: h2 } = N("MISSING_OR_INVALID", `approve() relayProtocol: ${i2}`);
        throw new Error(h2);
      }
      S(n2) || this.validateSessionProps(n2, "sessionProperties");
    }, this.isValidReject = async (e) => {
      if (!$t(e)) {
        const { message: i2 } = N("MISSING_OR_INVALID", `reject() params: ${e}`);
        throw new Error(i2);
      }
      const { id: s, reason: t } = e;
      if (await this.isValidProposalId(s), !Dt(t)) {
        const { message: i2 } = N("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(t)}`);
        throw new Error(i2);
      }
    }, this.isValidSessionSettleRequest = (e) => {
      if (!$t(e)) {
        const { message: l } = N("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e}`);
        throw new Error(l);
      }
      const { relay: s, controller: t, namespaces: i2, expiry: n2 } = e;
      if (!cn(s)) {
        const { message: l } = N("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(l);
      }
      const a2 = _t(t, "onSessionSettleRequest()");
      if (a2)
        throw new Error(a2.message);
      const o = sn(i2, "onSessionSettleRequest()");
      if (o)
        throw new Error(o.message);
      if (st(n2)) {
        const { message: l } = N("EXPIRED", "onSessionSettleRequest()");
        throw new Error(l);
      }
    }, this.isValidUpdate = async (e) => {
      if (!$t(e)) {
        const { message: o } = N("MISSING_OR_INVALID", `update() params: ${e}`);
        throw new Error(o);
      }
      const { topic: s, namespaces: t } = e;
      await this.isValidSessionTopic(s);
      const i2 = this.client.session.get(s), n2 = sn(t, "update()");
      if (n2)
        throw new Error(n2.message);
      const a2 = an(i2.requiredNamespaces, t, "update()");
      if (a2)
        throw new Error(a2.message);
    }, this.isValidExtend = async (e) => {
      if (!$t(e)) {
        const { message: t } = N("MISSING_OR_INVALID", `extend() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionTopic(s);
    }, this.isValidRequest = async (e) => {
      if (!$t(e)) {
        const { message: o } = N("MISSING_OR_INVALID", `request() params: ${e}`);
        throw new Error(o);
      }
      const { topic: s, request: t, chainId: i2, expiry: n2 } = e;
      await this.isValidSessionTopic(s);
      const { namespaces: a2 } = this.client.session.get(s);
      if (!kt(a2, i2)) {
        const { message: o } = N("MISSING_OR_INVALID", `request() chainId: ${i2}`);
        throw new Error(o);
      }
      if (!Vt(t)) {
        const { message: o } = N("MISSING_OR_INVALID", `request() ${JSON.stringify(t)}`);
        throw new Error(o);
      }
      if (!Lt(a2, i2, t.method)) {
        const { message: o } = N("MISSING_OR_INVALID", `request() method: ${t.method}`);
        throw new Error(o);
      }
      if (n2 && !qt(n2, G3)) {
        const { message: o } = N("MISSING_OR_INVALID", `request() expiry: ${n2}. Expiry must be a number (in seconds) between ${G3.min} and ${G3.max}`);
        throw new Error(o);
      }
    }, this.isValidRespond = async (e) => {
      if (!$t(e)) {
        const { message: i2 } = N("MISSING_OR_INVALID", `respond() params: ${e}`);
        throw new Error(i2);
      }
      const { topic: s, response: t } = e;
      if (await this.isValidSessionTopic(s), !Mt(t)) {
        const { message: i2 } = N("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(t)}`);
        throw new Error(i2);
      }
    }, this.isValidPing = async (e) => {
      if (!$t(e)) {
        const { message: t } = N("MISSING_OR_INVALID", `ping() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionOrPairingTopic(s);
    }, this.isValidEmit = async (e) => {
      if (!$t(e)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `emit() params: ${e}`);
        throw new Error(a2);
      }
      const { topic: s, event: t, chainId: i2 } = e;
      await this.isValidSessionTopic(s);
      const { namespaces: n2 } = this.client.session.get(s);
      if (!kt(n2, i2)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `emit() chainId: ${i2}`);
        throw new Error(a2);
      }
      if (!Kt(t)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(a2);
      }
      if (!xt(n2, i2, t.name)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(a2);
      }
    }, this.isValidDisconnect = async (e) => {
      if (!$t(e)) {
        const { message: t } = N("MISSING_OR_INVALID", `disconnect() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionOrPairingTopic(s);
    }, this.getVerifyContext = async (e, s) => {
      const t = { verified: { verifyUrl: s.verifyUrl || "", validation: "UNKNOWN", origin: s.url || "" } };
      try {
        const i2 = await this.client.core.verify.resolve({ attestationId: e, verifyUrl: s.verifyUrl });
        i2 && (t.verified.origin = i2, t.verified.validation = i2 === s.url ? "VALID" : "INVALID");
      } catch (i2) {
        this.client.logger.error(i2);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;
    }, this.validateSessionProps = (e, s) => {
      Object.values(e).forEach((t) => {
        if (!m(t, false)) {
          const { message: i2 } = N("MISSING_OR_INVALID", `${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
          throw new Error(i2);
        }
      });
    };
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: r } = N("NOT_INITIALIZED", this.name);
      throw new Error(r);
    }
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(g2.message, async (r) => {
      const { topic: e, message: s } = r;
      if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s)))
        return;
      const t = await this.client.core.crypto.decode(e, s);
      isJsonRpcRequest(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({ topic: e, payload: t })) : isJsonRpcResponse(t) && (await this.client.core.history.resolve(t), this.onRelayEventResponse({ topic: e, payload: t }));
    });
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(w.expired, async (r) => {
      const { topic: e, id: s } = rt(r.target);
      if (s && this.client.pendingRequest.keys.includes(s))
        return await this.deletePendingSessionRequest(s, N("EXPIRED"), true);
      e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, true), this.client.events.emit("session_expire", { topic: e })) : s && (await this.deleteProposal(s, true), this.client.events.emit("proposal_expire", { id: s }));
    });
  }
  isValidPairingTopic(r) {
    if (!m(r, false)) {
      const { message: e } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${r}`);
      throw new Error(e);
    }
    if (!this.client.core.pairing.pairings.keys.includes(r)) {
      const { message: e } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${r}`);
      throw new Error(e);
    }
    if (st(this.client.core.pairing.pairings.get(r).expiry)) {
      const { message: e } = N("EXPIRED", `pairing topic: ${r}`);
      throw new Error(e);
    }
  }
  async isValidSessionTopic(r) {
    if (!m(r, false)) {
      const { message: e } = N("MISSING_OR_INVALID", `session topic should be a string: ${r}`);
      throw new Error(e);
    }
    if (!this.client.session.keys.includes(r)) {
      const { message: e } = N("NO_MATCHING_KEY", `session topic doesn't exist: ${r}`);
      throw new Error(e);
    }
    if (st(this.client.session.get(r).expiry)) {
      await this.deleteSession(r);
      const { message: e } = N("EXPIRED", `session topic: ${r}`);
      throw new Error(e);
    }
  }
  async isValidSessionOrPairingTopic(r) {
    if (this.client.session.keys.includes(r))
      await this.isValidSessionTopic(r);
    else if (this.client.core.pairing.pairings.keys.includes(r))
      this.isValidPairingTopic(r);
    else if (m(r, false)) {
      const { message: e } = N("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${r}`);
      throw new Error(e);
    } else {
      const { message: e } = N("MISSING_OR_INVALID", `session or pairing topic should be a string: ${r}`);
      throw new Error(e);
    }
  }
  async isValidProposalId(r) {
    if (!Ct(r)) {
      const { message: e } = N("MISSING_OR_INVALID", `proposal id should be a number: ${r}`);
      throw new Error(e);
    }
    if (!this.client.proposal.keys.includes(r)) {
      const { message: e } = N("NO_MATCHING_KEY", `proposal id doesn't exist: ${r}`);
      throw new Error(e);
    }
    if (st(this.client.proposal.get(r).expiry)) {
      await this.deleteProposal(r);
      const { message: e } = N("EXPIRED", `proposal id: ${r}`);
      throw new Error(e);
    }
  }
};
var ts2 = class extends At2 {
  constructor(r, e) {
    super(r, e, ee2, L2), this.core = r, this.logger = e;
  }
};
var is2 = class extends At2 {
  constructor(r, e) {
    super(r, e, te2, L2), this.core = r, this.logger = e;
  }
};
var rs2 = class extends At2 {
  constructor(r, e) {
    super(r, e, re2, L2, (s) => s.id), this.core = r, this.logger = e;
  }
};
var $3 = class extends b2 {
  constructor(r) {
    super(r), this.protocol = j2, this.version = k2, this.name = b3.name, this.events = new import_events5.EventEmitter(), this.on = (s, t) => this.events.on(s, t), this.once = (s, t) => this.events.once(s, t), this.off = (s, t) => this.events.off(s, t), this.removeListener = (s, t) => this.events.removeListener(s, t), this.removeAllListeners = (s) => this.events.removeAllListeners(s), this.connect = async (s) => {
      try {
        return await this.engine.connect(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.pair = async (s) => {
      try {
        return await this.engine.pair(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.approve = async (s) => {
      try {
        return await this.engine.approve(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.reject = async (s) => {
      try {
        return await this.engine.reject(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.update = async (s) => {
      try {
        return await this.engine.update(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.extend = async (s) => {
      try {
        return await this.engine.extend(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.request = async (s) => {
      try {
        return await this.engine.request(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.respond = async (s) => {
      try {
        return await this.engine.respond(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.ping = async (s) => {
      try {
        return await this.engine.ping(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.emit = async (s) => {
      try {
        return await this.engine.emit(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.disconnect = async (s) => {
      try {
        return await this.engine.disconnect(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.find = (s) => {
      try {
        return this.engine.find(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (s) {
        throw this.logger.error(s.message), s;
      }
    }, this.name = (r == null ? void 0 : r.name) || b3.name, this.metadata = (r == null ? void 0 : r.metadata) || Fn();
    const e = typeof (r == null ? void 0 : r.logger) < "u" && typeof (r == null ? void 0 : r.logger) != "string" ? r.logger : (0, import_logger2.pino)((0, import_logger2.getDefaultLoggerOptions)({ level: (r == null ? void 0 : r.logger) || b3.logger }));
    this.core = (r == null ? void 0 : r.core) || new _r(r), this.logger = (0, import_logger2.generateChildLogger)(e, this.name), this.session = new is2(this.core, this.logger), this.proposal = new ts2(this.core, this.logger), this.pendingRequest = new rs2(this.core, this.logger), this.engine = new ss2(this);
  }
  static async init(r) {
    const e = new $3(r);
    return await e.initialize(), e;
  }
  get context() {
    return (0, import_logger2.getLoggerContext)(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success");
    } catch (r) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(r.message), r;
    }
  }
};

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_logger3 = __toESM(require_cjs6());
var import_events6 = __toESM(require_events());
var Ca = "error";
var Ug = "wss://relay.walletconnect.com";
var Wg = "wc";
var Fg = "universal_provider";
var Ia = `${Wg}@${2}:${Fg}:`;
var Mg = "https://rpc.walletconnect.com/v1";
var at3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var de3 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var Ui2 = { exports: {} };
(function(C4, u4) {
  (function() {
    var i2, p4 = "4.17.21", y3 = 200, H3 = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", W3 = "Expected a function", ft3 = "Invalid `variable` option passed into `_.template`", zt2 = "__lodash_hash_undefined__", pr2 = 500, Ct3 = "__lodash_placeholder__", Tn = 1, Fn2 = 2, It3 = 4, xt3 = 1, ge3 = 2, vn2 = 1, ot3 = 2, qi2 = 4, Dn2 = 8, Et2 = 16, Nn = 32, yt2 = 64, Mn2 = 128, Kt3 = 256, dr2 = 512, ba = 30, La = "...", Ta = 800, Da = 16, Bi2 = 1, Na = 2, Ha = 3, ct3 = 1 / 0, Vn2 = 9007199254740991, $a = 17976931348623157e292, ve2 = 0 / 0, Hn = 4294967295, Ua = Hn - 1, Wa = Hn >>> 1, Fa = [["ary", Mn2], ["bind", vn2], ["bindKey", ot3], ["curry", Dn2], ["curryRight", Et2], ["flip", dr2], ["partial", Nn], ["partialRight", yt2], ["rearg", Kt3]], St2 = "[object Arguments]", _e = "[object Array]", Ma = "[object AsyncFunction]", Yt = "[object Boolean]", Zt = "[object Date]", qa = "[object DOMException]", me2 = "[object Error]", we3 = "[object Function]", Gi2 = "[object GeneratorFunction]", yn = "[object Map]", Jt = "[object Number]", Ba = "[object Null]", qn2 = "[object Object]", zi2 = "[object Promise]", Ga = "[object Proxy]", Xt = "[object RegExp]", Sn = "[object Set]", Qt = "[object String]", Pe3 = "[object Symbol]", za = "[object Undefined]", Vt2 = "[object WeakMap]", Ka = "[object WeakSet]", kt3 = "[object ArrayBuffer]", Ot3 = "[object DataView]", gr2 = "[object Float32Array]", vr2 = "[object Float64Array]", _r2 = "[object Int8Array]", mr2 = "[object Int16Array]", wr2 = "[object Int32Array]", Pr = "[object Uint8Array]", Ar = "[object Uint8ClampedArray]", Cr2 = "[object Uint16Array]", Ir2 = "[object Uint32Array]", Ya = /\b__p \+= '';/g, Za = /\b(__p \+=) '' \+/g, Ja = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Ki2 = /&(?:amp|lt|gt|quot|#39);/g, Yi2 = /[&<>"']/g, Xa = RegExp(Ki2.source), Qa = RegExp(Yi2.source), Va = /<%-([\s\S]+?)%>/g, ka = /<%([\s\S]+?)%>/g, Zi2 = /<%=([\s\S]+?)%>/g, ja = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, nf = /^\w*$/, tf = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, xr = /[\\^$.*+?()[\]{}|]/g, ef = RegExp(xr.source), Er2 = /^\s+/, rf = /\s/, sf = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, uf = /\{\n\/\* \[wrapped with (.+)\] \*/, af = /,? & /, ff = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, of = /[()=,{}\[\]\/\s]/, cf = /\\(\\)?/g, hf = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ji2 = /\w*$/, lf = /^[-+]0x[0-9a-f]+$/i, pf = /^0b[01]+$/i, df = /^\[object .+?Constructor\]$/, gf = /^0o[0-7]+$/i, vf = /^(?:0|[1-9]\d*)$/, _f = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Ae3 = /($^)/, mf = /['\n\r\u2028\u2029\\]/g, Ce2 = "\\ud800-\\udfff", wf = "\\u0300-\\u036f", Pf = "\\ufe20-\\ufe2f", Af = "\\u20d0-\\u20ff", Xi2 = wf + Pf + Af, Qi2 = "\\u2700-\\u27bf", Vi2 = "a-z\\xdf-\\xf6\\xf8-\\xff", Cf = "\\xac\\xb1\\xd7\\xf7", If = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", xf = "\\u2000-\\u206f", Ef = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", ki2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", ji2 = "\\ufe0e\\ufe0f", ns2 = Cf + If + xf + Ef, yr2 = "['’]", yf = "[" + Ce2 + "]", ts3 = "[" + ns2 + "]", Ie3 = "[" + Xi2 + "]", es3 = "\\d+", Sf = "[" + Qi2 + "]", rs3 = "[" + Vi2 + "]", is3 = "[^" + Ce2 + ns2 + es3 + Qi2 + Vi2 + ki2 + "]", Sr = "\\ud83c[\\udffb-\\udfff]", Of = "(?:" + Ie3 + "|" + Sr + ")", ss3 = "[^" + Ce2 + "]", Or = "(?:\\ud83c[\\udde6-\\uddff]){2}", Rr = "[\\ud800-\\udbff][\\udc00-\\udfff]", Rt3 = "[" + ki2 + "]", us2 = "\\u200d", as2 = "(?:" + rs3 + "|" + is3 + ")", Rf = "(?:" + Rt3 + "|" + is3 + ")", fs2 = "(?:" + yr2 + "(?:d|ll|m|re|s|t|ve))?", os2 = "(?:" + yr2 + "(?:D|LL|M|RE|S|T|VE))?", cs2 = Of + "?", hs2 = "[" + ji2 + "]?", bf = "(?:" + us2 + "(?:" + [ss3, Or, Rr].join("|") + ")" + hs2 + cs2 + ")*", Lf = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Tf = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", ls2 = hs2 + cs2 + bf, Df = "(?:" + [Sf, Or, Rr].join("|") + ")" + ls2, Nf = "(?:" + [ss3 + Ie3 + "?", Ie3, Or, Rr, yf].join("|") + ")", Hf = RegExp(yr2, "g"), $f = RegExp(Ie3, "g"), br2 = RegExp(Sr + "(?=" + Sr + ")|" + Nf + ls2, "g"), Uf = RegExp([Rt3 + "?" + rs3 + "+" + fs2 + "(?=" + [ts3, Rt3, "$"].join("|") + ")", Rf + "+" + os2 + "(?=" + [ts3, Rt3 + as2, "$"].join("|") + ")", Rt3 + "?" + as2 + "+" + fs2, Rt3 + "+" + os2, Tf, Lf, es3, Df].join("|"), "g"), Wf = RegExp("[" + us2 + Ce2 + Xi2 + ji2 + "]"), Ff = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Mf = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], qf = -1, B = {};
    B[gr2] = B[vr2] = B[_r2] = B[mr2] = B[wr2] = B[Pr] = B[Ar] = B[Cr2] = B[Ir2] = true, B[St2] = B[_e] = B[kt3] = B[Yt] = B[Ot3] = B[Zt] = B[me2] = B[we3] = B[yn] = B[Jt] = B[qn2] = B[Xt] = B[Sn] = B[Qt] = B[Vt2] = false;
    var q5 = {};
    q5[St2] = q5[_e] = q5[kt3] = q5[Ot3] = q5[Yt] = q5[Zt] = q5[gr2] = q5[vr2] = q5[_r2] = q5[mr2] = q5[wr2] = q5[yn] = q5[Jt] = q5[qn2] = q5[Xt] = q5[Sn] = q5[Qt] = q5[Pe3] = q5[Pr] = q5[Ar] = q5[Cr2] = q5[Ir2] = true, q5[me2] = q5[we3] = q5[Vt2] = false;
    var Bf = { À: "A", Á: "A", Â: "A", Ã: "A", Ä: "A", Å: "A", à: "a", á: "a", â: "a", ã: "a", ä: "a", å: "a", Ç: "C", ç: "c", Ð: "D", ð: "d", È: "E", É: "E", Ê: "E", Ë: "E", è: "e", é: "e", ê: "e", ë: "e", Ì: "I", Í: "I", Î: "I", Ï: "I", ì: "i", í: "i", î: "i", ï: "i", Ñ: "N", ñ: "n", Ò: "O", Ó: "O", Ô: "O", Õ: "O", Ö: "O", Ø: "O", ò: "o", ó: "o", ô: "o", õ: "o", ö: "o", ø: "o", Ù: "U", Ú: "U", Û: "U", Ü: "U", ù: "u", ú: "u", û: "u", ü: "u", Ý: "Y", ý: "y", ÿ: "y", Æ: "Ae", æ: "ae", Þ: "Th", þ: "th", ß: "ss", Ā: "A", Ă: "A", Ą: "A", ā: "a", ă: "a", ą: "a", Ć: "C", Ĉ: "C", Ċ: "C", Č: "C", ć: "c", ĉ: "c", ċ: "c", č: "c", Ď: "D", Đ: "D", ď: "d", đ: "d", Ē: "E", Ĕ: "E", Ė: "E", Ę: "E", Ě: "E", ē: "e", ĕ: "e", ė: "e", ę: "e", ě: "e", Ĝ: "G", Ğ: "G", Ġ: "G", Ģ: "G", ĝ: "g", ğ: "g", ġ: "g", ģ: "g", Ĥ: "H", Ħ: "H", ĥ: "h", ħ: "h", Ĩ: "I", Ī: "I", Ĭ: "I", Į: "I", İ: "I", ĩ: "i", ī: "i", ĭ: "i", į: "i", ı: "i", Ĵ: "J", ĵ: "j", Ķ: "K", ķ: "k", ĸ: "k", Ĺ: "L", Ļ: "L", Ľ: "L", Ŀ: "L", Ł: "L", ĺ: "l", ļ: "l", ľ: "l", ŀ: "l", ł: "l", Ń: "N", Ņ: "N", Ň: "N", Ŋ: "N", ń: "n", ņ: "n", ň: "n", ŋ: "n", Ō: "O", Ŏ: "O", Ő: "O", ō: "o", ŏ: "o", ő: "o", Ŕ: "R", Ŗ: "R", Ř: "R", ŕ: "r", ŗ: "r", ř: "r", Ś: "S", Ŝ: "S", Ş: "S", Š: "S", ś: "s", ŝ: "s", ş: "s", š: "s", Ţ: "T", Ť: "T", Ŧ: "T", ţ: "t", ť: "t", ŧ: "t", Ũ: "U", Ū: "U", Ŭ: "U", Ů: "U", Ű: "U", Ų: "U", ũ: "u", ū: "u", ŭ: "u", ů: "u", ű: "u", ų: "u", Ŵ: "W", ŵ: "w", Ŷ: "Y", ŷ: "y", Ÿ: "Y", Ź: "Z", Ż: "Z", Ž: "Z", ź: "z", ż: "z", ž: "z", Ĳ: "IJ", ĳ: "ij", Œ: "Oe", œ: "oe", ŉ: "'n", ſ: "s" }, Gf = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, zf = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Kf = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, Yf = parseFloat, Zf = parseInt, ps2 = typeof de3 == "object" && de3 && de3.Object === Object && de3, Jf = typeof self == "object" && self && self.Object === Object && self, k3 = ps2 || Jf || Function("return this")(), Lr = u4 && !u4.nodeType && u4, ht2 = Lr && true && C4 && !C4.nodeType && C4, ds2 = ht2 && ht2.exports === Lr, Tr = ds2 && ps2.process, _n2 = function() {
      try {
        var h2 = ht2 && ht2.require && ht2.require("util").types;
        return h2 || Tr && Tr.binding && Tr.binding("util");
      } catch {
      }
    }(), gs2 = _n2 && _n2.isArrayBuffer, vs2 = _n2 && _n2.isDate, _s2 = _n2 && _n2.isMap, ms2 = _n2 && _n2.isRegExp, ws2 = _n2 && _n2.isSet, Ps2 = _n2 && _n2.isTypedArray;
    function cn2(h2, g3, d2) {
      switch (d2.length) {
        case 0:
          return h2.call(g3);
        case 1:
          return h2.call(g3, d2[0]);
        case 2:
          return h2.call(g3, d2[0], d2[1]);
        case 3:
          return h2.call(g3, d2[0], d2[1], d2[2]);
      }
      return h2.apply(g3, d2);
    }
    function Xf(h2, g3, d2, P2) {
      for (var S3 = -1, $5 = h2 == null ? 0 : h2.length; ++S3 < $5; ) {
        var X4 = h2[S3];
        g3(P2, X4, d2(X4), h2);
      }
      return P2;
    }
    function mn2(h2, g3) {
      for (var d2 = -1, P2 = h2 == null ? 0 : h2.length; ++d2 < P2 && g3(h2[d2], d2, h2) !== false; )
        ;
      return h2;
    }
    function Qf(h2, g3) {
      for (var d2 = h2 == null ? 0 : h2.length; d2-- && g3(h2[d2], d2, h2) !== false; )
        ;
      return h2;
    }
    function As2(h2, g3) {
      for (var d2 = -1, P2 = h2 == null ? 0 : h2.length; ++d2 < P2; )
        if (!g3(h2[d2], d2, h2))
          return false;
      return true;
    }
    function kn2(h2, g3) {
      for (var d2 = -1, P2 = h2 == null ? 0 : h2.length, S3 = 0, $5 = []; ++d2 < P2; ) {
        var X4 = h2[d2];
        g3(X4, d2, h2) && ($5[S3++] = X4);
      }
      return $5;
    }
    function xe3(h2, g3) {
      var d2 = h2 == null ? 0 : h2.length;
      return !!d2 && bt2(h2, g3, 0) > -1;
    }
    function Dr2(h2, g3, d2) {
      for (var P2 = -1, S3 = h2 == null ? 0 : h2.length; ++P2 < S3; )
        if (d2(g3, h2[P2]))
          return true;
      return false;
    }
    function G5(h2, g3) {
      for (var d2 = -1, P2 = h2 == null ? 0 : h2.length, S3 = Array(P2); ++d2 < P2; )
        S3[d2] = g3(h2[d2], d2, h2);
      return S3;
    }
    function jn2(h2, g3) {
      for (var d2 = -1, P2 = g3.length, S3 = h2.length; ++d2 < P2; )
        h2[S3 + d2] = g3[d2];
      return h2;
    }
    function Nr(h2, g3, d2, P2) {
      var S3 = -1, $5 = h2 == null ? 0 : h2.length;
      for (P2 && $5 && (d2 = h2[++S3]); ++S3 < $5; )
        d2 = g3(d2, h2[S3], S3, h2);
      return d2;
    }
    function Vf(h2, g3, d2, P2) {
      var S3 = h2 == null ? 0 : h2.length;
      for (P2 && S3 && (d2 = h2[--S3]); S3--; )
        d2 = g3(d2, h2[S3], S3, h2);
      return d2;
    }
    function Hr(h2, g3) {
      for (var d2 = -1, P2 = h2 == null ? 0 : h2.length; ++d2 < P2; )
        if (g3(h2[d2], d2, h2))
          return true;
      return false;
    }
    var kf = $r("length");
    function jf(h2) {
      return h2.split("");
    }
    function no(h2) {
      return h2.match(ff) || [];
    }
    function Cs2(h2, g3, d2) {
      var P2;
      return d2(h2, function(S3, $5, X4) {
        if (g3(S3, $5, X4))
          return P2 = $5, false;
      }), P2;
    }
    function Ee2(h2, g3, d2, P2) {
      for (var S3 = h2.length, $5 = d2 + (P2 ? 1 : -1); P2 ? $5-- : ++$5 < S3; )
        if (g3(h2[$5], $5, h2))
          return $5;
      return -1;
    }
    function bt2(h2, g3, d2) {
      return g3 === g3 ? lo(h2, g3, d2) : Ee2(h2, Is2, d2);
    }
    function to(h2, g3, d2, P2) {
      for (var S3 = d2 - 1, $5 = h2.length; ++S3 < $5; )
        if (P2(h2[S3], g3))
          return S3;
      return -1;
    }
    function Is2(h2) {
      return h2 !== h2;
    }
    function xs2(h2, g3) {
      var d2 = h2 == null ? 0 : h2.length;
      return d2 ? Wr(h2, g3) / d2 : ve2;
    }
    function $r(h2) {
      return function(g3) {
        return g3 == null ? i2 : g3[h2];
      };
    }
    function Ur(h2) {
      return function(g3) {
        return h2 == null ? i2 : h2[g3];
      };
    }
    function Es2(h2, g3, d2, P2, S3) {
      return S3(h2, function($5, X4, M2) {
        d2 = P2 ? (P2 = false, $5) : g3(d2, $5, X4, M2);
      }), d2;
    }
    function eo(h2, g3) {
      var d2 = h2.length;
      for (h2.sort(g3); d2--; )
        h2[d2] = h2[d2].value;
      return h2;
    }
    function Wr(h2, g3) {
      for (var d2, P2 = -1, S3 = h2.length; ++P2 < S3; ) {
        var $5 = g3(h2[P2]);
        $5 !== i2 && (d2 = d2 === i2 ? $5 : d2 + $5);
      }
      return d2;
    }
    function Fr(h2, g3) {
      for (var d2 = -1, P2 = Array(h2); ++d2 < h2; )
        P2[d2] = g3(d2);
      return P2;
    }
    function ro(h2, g3) {
      return G5(g3, function(d2) {
        return [d2, h2[d2]];
      });
    }
    function ys2(h2) {
      return h2 && h2.slice(0, bs2(h2) + 1).replace(Er2, "");
    }
    function hn2(h2) {
      return function(g3) {
        return h2(g3);
      };
    }
    function Mr(h2, g3) {
      return G5(g3, function(d2) {
        return h2[d2];
      });
    }
    function jt2(h2, g3) {
      return h2.has(g3);
    }
    function Ss2(h2, g3) {
      for (var d2 = -1, P2 = h2.length; ++d2 < P2 && bt2(g3, h2[d2], 0) > -1; )
        ;
      return d2;
    }
    function Os2(h2, g3) {
      for (var d2 = h2.length; d2-- && bt2(g3, h2[d2], 0) > -1; )
        ;
      return d2;
    }
    function io(h2, g3) {
      for (var d2 = h2.length, P2 = 0; d2--; )
        h2[d2] === g3 && ++P2;
      return P2;
    }
    var so = Ur(Bf), uo = Ur(Gf);
    function ao(h2) {
      return "\\" + Kf[h2];
    }
    function fo(h2, g3) {
      return h2 == null ? i2 : h2[g3];
    }
    function Lt3(h2) {
      return Wf.test(h2);
    }
    function oo(h2) {
      return Ff.test(h2);
    }
    function co(h2) {
      for (var g3, d2 = []; !(g3 = h2.next()).done; )
        d2.push(g3.value);
      return d2;
    }
    function qr(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P2, S3) {
        d2[++g3] = [S3, P2];
      }), d2;
    }
    function Rs2(h2, g3) {
      return function(d2) {
        return h2(g3(d2));
      };
    }
    function nt3(h2, g3) {
      for (var d2 = -1, P2 = h2.length, S3 = 0, $5 = []; ++d2 < P2; ) {
        var X4 = h2[d2];
        (X4 === g3 || X4 === Ct3) && (h2[d2] = Ct3, $5[S3++] = d2);
      }
      return $5;
    }
    function ye(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P2) {
        d2[++g3] = P2;
      }), d2;
    }
    function ho(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P2) {
        d2[++g3] = [P2, P2];
      }), d2;
    }
    function lo(h2, g3, d2) {
      for (var P2 = d2 - 1, S3 = h2.length; ++P2 < S3; )
        if (h2[P2] === g3)
          return P2;
      return -1;
    }
    function po(h2, g3, d2) {
      for (var P2 = d2 + 1; P2--; )
        if (h2[P2] === g3)
          return P2;
      return P2;
    }
    function Tt3(h2) {
      return Lt3(h2) ? vo(h2) : kf(h2);
    }
    function On2(h2) {
      return Lt3(h2) ? _o(h2) : jf(h2);
    }
    function bs2(h2) {
      for (var g3 = h2.length; g3-- && rf.test(h2.charAt(g3)); )
        ;
      return g3;
    }
    var go = Ur(zf);
    function vo(h2) {
      for (var g3 = br2.lastIndex = 0; br2.test(h2); )
        ++g3;
      return g3;
    }
    function _o(h2) {
      return h2.match(br2) || [];
    }
    function mo(h2) {
      return h2.match(Uf) || [];
    }
    var wo = function h2(g3) {
      g3 = g3 == null ? k3 : Dt3.defaults(k3.Object(), g3, Dt3.pick(k3, Mf));
      var d2 = g3.Array, P2 = g3.Date, S3 = g3.Error, $5 = g3.Function, X4 = g3.Math, M2 = g3.Object, Br = g3.RegExp, Po = g3.String, wn2 = g3.TypeError, Se2 = d2.prototype, Ao = $5.prototype, Nt2 = M2.prototype, Oe3 = g3["__core-js_shared__"], Re2 = Ao.toString, F2 = Nt2.hasOwnProperty, Co = 0, Ls2 = function() {
        var n2 = /[^.]+$/.exec(Oe3 && Oe3.keys && Oe3.keys.IE_PROTO || "");
        return n2 ? "Symbol(src)_1." + n2 : "";
      }(), be2 = Nt2.toString, Io = Re2.call(M2), xo = k3._, Eo = Br("^" + Re2.call(F2).replace(xr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Le2 = ds2 ? g3.Buffer : i2, tt3 = g3.Symbol, Te2 = g3.Uint8Array, Ts2 = Le2 ? Le2.allocUnsafe : i2, De2 = Rs2(M2.getPrototypeOf, M2), Ds2 = M2.create, Ns2 = Nt2.propertyIsEnumerable, Ne2 = Se2.splice, Hs2 = tt3 ? tt3.isConcatSpreadable : i2, ne4 = tt3 ? tt3.iterator : i2, lt3 = tt3 ? tt3.toStringTag : i2, He3 = function() {
        try {
          var n2 = _t3(M2, "defineProperty");
          return n2({}, "", {}), n2;
        } catch {
        }
      }(), yo = g3.clearTimeout !== k3.clearTimeout && g3.clearTimeout, So = P2 && P2.now !== k3.Date.now && P2.now, Oo = g3.setTimeout !== k3.setTimeout && g3.setTimeout, $e4 = X4.ceil, Ue3 = X4.floor, Gr = M2.getOwnPropertySymbols, Ro = Le2 ? Le2.isBuffer : i2, $s2 = g3.isFinite, bo = Se2.join, Lo = Rs2(M2.keys, M2), Q3 = X4.max, nn2 = X4.min, To = P2.now, Do = g3.parseInt, Us2 = X4.random, No = Se2.reverse, zr = _t3(g3, "DataView"), te3 = _t3(g3, "Map"), Kr = _t3(g3, "Promise"), Ht2 = _t3(g3, "Set"), ee3 = _t3(g3, "WeakMap"), re3 = _t3(M2, "create"), We3 = ee3 && new ee3(), $t3 = {}, Ho = mt3(zr), $o = mt3(te3), Uo = mt3(Kr), Wo = mt3(Ht2), Fo = mt3(ee3), Fe3 = tt3 ? tt3.prototype : i2, ie3 = Fe3 ? Fe3.valueOf : i2, Ws2 = Fe3 ? Fe3.toString : i2;
      function a2(n2) {
        if (K3(n2) && !O4(n2) && !(n2 instanceof D2)) {
          if (n2 instanceof Pn)
            return n2;
          if (F2.call(n2, "__wrapped__"))
            return Fu(n2);
        }
        return new Pn(n2);
      }
      var Ut3 = function() {
        function n2() {
        }
        return function(t) {
          if (!z2(t))
            return {};
          if (Ds2)
            return Ds2(t);
          n2.prototype = t;
          var e = new n2();
          return n2.prototype = i2, e;
        };
      }();
      function Me3() {
      }
      function Pn(n2, t) {
        this.__wrapped__ = n2, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i2;
      }
      a2.templateSettings = { escape: Va, evaluate: ka, interpolate: Zi2, variable: "", imports: { _: a2 } }, a2.prototype = Me3.prototype, a2.prototype.constructor = a2, Pn.prototype = Ut3(Me3.prototype), Pn.prototype.constructor = Pn;
      function D2(n2) {
        this.__wrapped__ = n2, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Hn, this.__views__ = [];
      }
      function Mo() {
        var n2 = new D2(this.__wrapped__);
        return n2.__actions__ = un2(this.__actions__), n2.__dir__ = this.__dir__, n2.__filtered__ = this.__filtered__, n2.__iteratees__ = un2(this.__iteratees__), n2.__takeCount__ = this.__takeCount__, n2.__views__ = un2(this.__views__), n2;
      }
      function qo() {
        if (this.__filtered__) {
          var n2 = new D2(this);
          n2.__dir__ = -1, n2.__filtered__ = true;
        } else
          n2 = this.clone(), n2.__dir__ *= -1;
        return n2;
      }
      function Bo() {
        var n2 = this.__wrapped__.value(), t = this.__dir__, e = O4(n2), r = t < 0, s = e ? n2.length : 0, f3 = nh(0, s, this.__views__), o = f3.start, c2 = f3.end, l = c2 - o, v = r ? c2 : o - 1, _4 = this.__iteratees__, m3 = _4.length, w4 = 0, A2 = nn2(l, this.__takeCount__);
        if (!e || !r && s == l && A2 == l)
          return fu(n2, this.__actions__);
        var x3 = [];
        n:
          for (; l-- && w4 < A2; ) {
            v += t;
            for (var b4 = -1, E3 = n2[v]; ++b4 < m3; ) {
              var T2 = _4[b4], N12 = T2.iteratee, dn = T2.type, sn2 = N12(E3);
              if (dn == Na)
                E3 = sn2;
              else if (!sn2) {
                if (dn == Bi2)
                  continue n;
                break n;
              }
            }
            x3[w4++] = E3;
          }
        return x3;
      }
      D2.prototype = Ut3(Me3.prototype), D2.prototype.constructor = D2;
      function pt3(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function Go() {
        this.__data__ = re3 ? re3(null) : {}, this.size = 0;
      }
      function zo(n2) {
        var t = this.has(n2) && delete this.__data__[n2];
        return this.size -= t ? 1 : 0, t;
      }
      function Ko(n2) {
        var t = this.__data__;
        if (re3) {
          var e = t[n2];
          return e === zt2 ? i2 : e;
        }
        return F2.call(t, n2) ? t[n2] : i2;
      }
      function Yo(n2) {
        var t = this.__data__;
        return re3 ? t[n2] !== i2 : F2.call(t, n2);
      }
      function Zo(n2, t) {
        var e = this.__data__;
        return this.size += this.has(n2) ? 0 : 1, e[n2] = re3 && t === i2 ? zt2 : t, this;
      }
      pt3.prototype.clear = Go, pt3.prototype.delete = zo, pt3.prototype.get = Ko, pt3.prototype.has = Yo, pt3.prototype.set = Zo;
      function Bn(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function Jo() {
        this.__data__ = [], this.size = 0;
      }
      function Xo(n2) {
        var t = this.__data__, e = qe3(t, n2);
        if (e < 0)
          return false;
        var r = t.length - 1;
        return e == r ? t.pop() : Ne2.call(t, e, 1), --this.size, true;
      }
      function Qo(n2) {
        var t = this.__data__, e = qe3(t, n2);
        return e < 0 ? i2 : t[e][1];
      }
      function Vo(n2) {
        return qe3(this.__data__, n2) > -1;
      }
      function ko(n2, t) {
        var e = this.__data__, r = qe3(e, n2);
        return r < 0 ? (++this.size, e.push([n2, t])) : e[r][1] = t, this;
      }
      Bn.prototype.clear = Jo, Bn.prototype.delete = Xo, Bn.prototype.get = Qo, Bn.prototype.has = Vo, Bn.prototype.set = ko;
      function Gn(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function jo() {
        this.size = 0, this.__data__ = { hash: new pt3(), map: new (te3 || Bn)(), string: new pt3() };
      }
      function nc(n2) {
        var t = je3(this, n2).delete(n2);
        return this.size -= t ? 1 : 0, t;
      }
      function tc(n2) {
        return je3(this, n2).get(n2);
      }
      function ec(n2) {
        return je3(this, n2).has(n2);
      }
      function rc(n2, t) {
        var e = je3(this, n2), r = e.size;
        return e.set(n2, t), this.size += e.size == r ? 0 : 1, this;
      }
      Gn.prototype.clear = jo, Gn.prototype.delete = nc, Gn.prototype.get = tc, Gn.prototype.has = ec, Gn.prototype.set = rc;
      function dt3(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.__data__ = new Gn(); ++t < e; )
          this.add(n2[t]);
      }
      function ic(n2) {
        return this.__data__.set(n2, zt2), this;
      }
      function sc(n2) {
        return this.__data__.has(n2);
      }
      dt3.prototype.add = dt3.prototype.push = ic, dt3.prototype.has = sc;
      function Rn2(n2) {
        var t = this.__data__ = new Bn(n2);
        this.size = t.size;
      }
      function uc() {
        this.__data__ = new Bn(), this.size = 0;
      }
      function ac(n2) {
        var t = this.__data__, e = t.delete(n2);
        return this.size = t.size, e;
      }
      function fc(n2) {
        return this.__data__.get(n2);
      }
      function oc(n2) {
        return this.__data__.has(n2);
      }
      function cc(n2, t) {
        var e = this.__data__;
        if (e instanceof Bn) {
          var r = e.__data__;
          if (!te3 || r.length < y3 - 1)
            return r.push([n2, t]), this.size = ++e.size, this;
          e = this.__data__ = new Gn(r);
        }
        return e.set(n2, t), this.size = e.size, this;
      }
      Rn2.prototype.clear = uc, Rn2.prototype.delete = ac, Rn2.prototype.get = fc, Rn2.prototype.has = oc, Rn2.prototype.set = cc;
      function Fs2(n2, t) {
        var e = O4(n2), r = !e && wt3(n2), s = !e && !r && ut3(n2), f3 = !e && !r && !s && qt2(n2), o = e || r || s || f3, c2 = o ? Fr(n2.length, Po) : [], l = c2.length;
        for (var v in n2)
          (t || F2.call(n2, v)) && !(o && (v == "length" || s && (v == "offset" || v == "parent") || f3 && (v == "buffer" || v == "byteLength" || v == "byteOffset") || Zn(v, l))) && c2.push(v);
        return c2;
      }
      function Ms2(n2) {
        var t = n2.length;
        return t ? n2[ei(0, t - 1)] : i2;
      }
      function hc(n2, t) {
        return nr(un2(n2), gt2(t, 0, n2.length));
      }
      function lc(n2) {
        return nr(un2(n2));
      }
      function Yr(n2, t, e) {
        (e !== i2 && !bn(n2[t], e) || e === i2 && !(t in n2)) && zn(n2, t, e);
      }
      function se3(n2, t, e) {
        var r = n2[t];
        (!(F2.call(n2, t) && bn(r, e)) || e === i2 && !(t in n2)) && zn(n2, t, e);
      }
      function qe3(n2, t) {
        for (var e = n2.length; e--; )
          if (bn(n2[e][0], t))
            return e;
        return -1;
      }
      function pc(n2, t, e, r) {
        return et3(n2, function(s, f3, o) {
          t(r, s, e(s), o);
        }), r;
      }
      function qs2(n2, t) {
        return n2 && Un2(t, V4(t), n2);
      }
      function dc(n2, t) {
        return n2 && Un2(t, fn(t), n2);
      }
      function zn(n2, t, e) {
        t == "__proto__" && He3 ? He3(n2, t, { configurable: true, enumerable: true, value: e, writable: true }) : n2[t] = e;
      }
      function Zr(n2, t) {
        for (var e = -1, r = t.length, s = d2(r), f3 = n2 == null; ++e < r; )
          s[e] = f3 ? i2 : Si2(n2, t[e]);
        return s;
      }
      function gt2(n2, t, e) {
        return n2 === n2 && (e !== i2 && (n2 = n2 <= e ? n2 : e), t !== i2 && (n2 = n2 >= t ? n2 : t)), n2;
      }
      function An2(n2, t, e, r, s, f3) {
        var o, c2 = t & Tn, l = t & Fn2, v = t & It3;
        if (e && (o = s ? e(n2, r, s, f3) : e(n2)), o !== i2)
          return o;
        if (!z2(n2))
          return n2;
        var _4 = O4(n2);
        if (_4) {
          if (o = eh(n2), !c2)
            return un2(n2, o);
        } else {
          var m3 = tn2(n2), w4 = m3 == we3 || m3 == Gi2;
          if (ut3(n2))
            return hu(n2, c2);
          if (m3 == qn2 || m3 == St2 || w4 && !s) {
            if (o = l || w4 ? {} : bu(n2), !c2)
              return l ? Kc(n2, dc(o, n2)) : zc(n2, qs2(o, n2));
          } else {
            if (!q5[m3])
              return s ? n2 : {};
            o = rh(n2, m3, c2);
          }
        }
        f3 || (f3 = new Rn2());
        var A2 = f3.get(n2);
        if (A2)
          return A2;
        f3.set(n2, o), sa(n2) ? n2.forEach(function(E3) {
          o.add(An2(E3, t, e, E3, n2, f3));
        }) : ra(n2) && n2.forEach(function(E3, T2) {
          o.set(T2, An2(E3, t, e, T2, n2, f3));
        });
        var x3 = v ? l ? pi : li : l ? fn : V4, b4 = _4 ? i2 : x3(n2);
        return mn2(b4 || n2, function(E3, T2) {
          b4 && (T2 = E3, E3 = n2[T2]), se3(o, T2, An2(E3, t, e, T2, n2, f3));
        }), o;
      }
      function gc(n2) {
        var t = V4(n2);
        return function(e) {
          return Bs2(e, n2, t);
        };
      }
      function Bs2(n2, t, e) {
        var r = e.length;
        if (n2 == null)
          return !r;
        for (n2 = M2(n2); r--; ) {
          var s = e[r], f3 = t[s], o = n2[s];
          if (o === i2 && !(s in n2) || !f3(o))
            return false;
        }
        return true;
      }
      function Gs2(n2, t, e) {
        if (typeof n2 != "function")
          throw new wn2(W3);
        return le3(function() {
          n2.apply(i2, e);
        }, t);
      }
      function ue4(n2, t, e, r) {
        var s = -1, f3 = xe3, o = true, c2 = n2.length, l = [], v = t.length;
        if (!c2)
          return l;
        e && (t = G5(t, hn2(e))), r ? (f3 = Dr2, o = false) : t.length >= y3 && (f3 = jt2, o = false, t = new dt3(t));
        n:
          for (; ++s < c2; ) {
            var _4 = n2[s], m3 = e == null ? _4 : e(_4);
            if (_4 = r || _4 !== 0 ? _4 : 0, o && m3 === m3) {
              for (var w4 = v; w4--; )
                if (t[w4] === m3)
                  continue n;
              l.push(_4);
            } else
              f3(t, m3, r) || l.push(_4);
          }
        return l;
      }
      var et3 = vu($n2), zs2 = vu(Xr, true);
      function vc(n2, t) {
        var e = true;
        return et3(n2, function(r, s, f3) {
          return e = !!t(r, s, f3), e;
        }), e;
      }
      function Be4(n2, t, e) {
        for (var r = -1, s = n2.length; ++r < s; ) {
          var f3 = n2[r], o = t(f3);
          if (o != null && (c2 === i2 ? o === o && !pn2(o) : e(o, c2)))
            var c2 = o, l = f3;
        }
        return l;
      }
      function _c(n2, t, e, r) {
        var s = n2.length;
        for (e = R2(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i2 || r > s ? s : R2(r), r < 0 && (r += s), r = e > r ? 0 : aa(r); e < r; )
          n2[e++] = t;
        return n2;
      }
      function Ks2(n2, t) {
        var e = [];
        return et3(n2, function(r, s, f3) {
          t(r, s, f3) && e.push(r);
        }), e;
      }
      function j4(n2, t, e, r, s) {
        var f3 = -1, o = n2.length;
        for (e || (e = sh), s || (s = []); ++f3 < o; ) {
          var c2 = n2[f3];
          t > 0 && e(c2) ? t > 1 ? j4(c2, t - 1, e, r, s) : jn2(s, c2) : r || (s[s.length] = c2);
        }
        return s;
      }
      var Jr = _u(), Ys2 = _u(true);
      function $n2(n2, t) {
        return n2 && Jr(n2, t, V4);
      }
      function Xr(n2, t) {
        return n2 && Ys2(n2, t, V4);
      }
      function Ge3(n2, t) {
        return kn2(t, function(e) {
          return Jn(n2[e]);
        });
      }
      function vt2(n2, t) {
        t = it3(t, n2);
        for (var e = 0, r = t.length; n2 != null && e < r; )
          n2 = n2[Wn2(t[e++])];
        return e && e == r ? n2 : i2;
      }
      function Zs2(n2, t, e) {
        var r = t(n2);
        return O4(n2) ? r : jn2(r, e(n2));
      }
      function en2(n2) {
        return n2 == null ? n2 === i2 ? za : Ba : lt3 && lt3 in M2(n2) ? jc(n2) : lh(n2);
      }
      function Qr(n2, t) {
        return n2 > t;
      }
      function mc(n2, t) {
        return n2 != null && F2.call(n2, t);
      }
      function wc(n2, t) {
        return n2 != null && t in M2(n2);
      }
      function Pc(n2, t, e) {
        return n2 >= nn2(t, e) && n2 < Q3(t, e);
      }
      function Vr(n2, t, e) {
        for (var r = e ? Dr2 : xe3, s = n2[0].length, f3 = n2.length, o = f3, c2 = d2(f3), l = 1 / 0, v = []; o--; ) {
          var _4 = n2[o];
          o && t && (_4 = G5(_4, hn2(t))), l = nn2(_4.length, l), c2[o] = !e && (t || s >= 120 && _4.length >= 120) ? new dt3(o && _4) : i2;
        }
        _4 = n2[0];
        var m3 = -1, w4 = c2[0];
        n:
          for (; ++m3 < s && v.length < l; ) {
            var A2 = _4[m3], x3 = t ? t(A2) : A2;
            if (A2 = e || A2 !== 0 ? A2 : 0, !(w4 ? jt2(w4, x3) : r(v, x3, e))) {
              for (o = f3; --o; ) {
                var b4 = c2[o];
                if (!(b4 ? jt2(b4, x3) : r(n2[o], x3, e)))
                  continue n;
              }
              w4 && w4.push(x3), v.push(A2);
            }
          }
        return v;
      }
      function Ac(n2, t, e, r) {
        return $n2(n2, function(s, f3, o) {
          t(r, e(s), f3, o);
        }), r;
      }
      function ae4(n2, t, e) {
        t = it3(t, n2), n2 = Nu(n2, t);
        var r = n2 == null ? n2 : n2[Wn2(In(t))];
        return r == null ? i2 : cn2(r, n2, e);
      }
      function Js2(n2) {
        return K3(n2) && en2(n2) == St2;
      }
      function Cc(n2) {
        return K3(n2) && en2(n2) == kt3;
      }
      function Ic(n2) {
        return K3(n2) && en2(n2) == Zt;
      }
      function fe2(n2, t, e, r, s) {
        return n2 === t ? true : n2 == null || t == null || !K3(n2) && !K3(t) ? n2 !== n2 && t !== t : xc(n2, t, e, r, fe2, s);
      }
      function xc(n2, t, e, r, s, f3) {
        var o = O4(n2), c2 = O4(t), l = o ? _e : tn2(n2), v = c2 ? _e : tn2(t);
        l = l == St2 ? qn2 : l, v = v == St2 ? qn2 : v;
        var _4 = l == qn2, m3 = v == qn2, w4 = l == v;
        if (w4 && ut3(n2)) {
          if (!ut3(t))
            return false;
          o = true, _4 = false;
        }
        if (w4 && !_4)
          return f3 || (f3 = new Rn2()), o || qt2(n2) ? Su(n2, t, e, r, s, f3) : Vc(n2, t, l, e, r, s, f3);
        if (!(e & xt3)) {
          var A2 = _4 && F2.call(n2, "__wrapped__"), x3 = m3 && F2.call(t, "__wrapped__");
          if (A2 || x3) {
            var b4 = A2 ? n2.value() : n2, E3 = x3 ? t.value() : t;
            return f3 || (f3 = new Rn2()), s(b4, E3, e, r, f3);
          }
        }
        return w4 ? (f3 || (f3 = new Rn2()), kc(n2, t, e, r, s, f3)) : false;
      }
      function Ec(n2) {
        return K3(n2) && tn2(n2) == yn;
      }
      function kr(n2, t, e, r) {
        var s = e.length, f3 = s, o = !r;
        if (n2 == null)
          return !f3;
        for (n2 = M2(n2); s--; ) {
          var c2 = e[s];
          if (o && c2[2] ? c2[1] !== n2[c2[0]] : !(c2[0] in n2))
            return false;
        }
        for (; ++s < f3; ) {
          c2 = e[s];
          var l = c2[0], v = n2[l], _4 = c2[1];
          if (o && c2[2]) {
            if (v === i2 && !(l in n2))
              return false;
          } else {
            var m3 = new Rn2();
            if (r)
              var w4 = r(v, _4, l, n2, t, m3);
            if (!(w4 === i2 ? fe2(_4, v, xt3 | ge3, r, m3) : w4))
              return false;
          }
        }
        return true;
      }
      function Xs2(n2) {
        if (!z2(n2) || ah(n2))
          return false;
        var t = Jn(n2) ? Eo : df;
        return t.test(mt3(n2));
      }
      function yc(n2) {
        return K3(n2) && en2(n2) == Xt;
      }
      function Sc(n2) {
        return K3(n2) && tn2(n2) == Sn;
      }
      function Oc(n2) {
        return K3(n2) && ur2(n2.length) && !!B[en2(n2)];
      }
      function Qs2(n2) {
        return typeof n2 == "function" ? n2 : n2 == null ? on2 : typeof n2 == "object" ? O4(n2) ? js2(n2[0], n2[1]) : ks2(n2) : ma(n2);
      }
      function jr(n2) {
        if (!he2(n2))
          return Lo(n2);
        var t = [];
        for (var e in M2(n2))
          F2.call(n2, e) && e != "constructor" && t.push(e);
        return t;
      }
      function Rc(n2) {
        if (!z2(n2))
          return hh(n2);
        var t = he2(n2), e = [];
        for (var r in n2)
          r == "constructor" && (t || !F2.call(n2, r)) || e.push(r);
        return e;
      }
      function ni(n2, t) {
        return n2 < t;
      }
      function Vs2(n2, t) {
        var e = -1, r = an2(n2) ? d2(n2.length) : [];
        return et3(n2, function(s, f3, o) {
          r[++e] = t(s, f3, o);
        }), r;
      }
      function ks2(n2) {
        var t = gi(n2);
        return t.length == 1 && t[0][2] ? Tu(t[0][0], t[0][1]) : function(e) {
          return e === n2 || kr(e, n2, t);
        };
      }
      function js2(n2, t) {
        return _i(n2) && Lu(t) ? Tu(Wn2(n2), t) : function(e) {
          var r = Si2(e, n2);
          return r === i2 && r === t ? Oi(e, n2) : fe2(t, r, xt3 | ge3);
        };
      }
      function ze3(n2, t, e, r, s) {
        n2 !== t && Jr(t, function(f3, o) {
          if (s || (s = new Rn2()), z2(f3))
            bc(n2, t, o, e, ze3, r, s);
          else {
            var c2 = r ? r(wi(n2, o), f3, o + "", n2, t, s) : i2;
            c2 === i2 && (c2 = f3), Yr(n2, o, c2);
          }
        }, fn);
      }
      function bc(n2, t, e, r, s, f3, o) {
        var c2 = wi(n2, e), l = wi(t, e), v = o.get(l);
        if (v) {
          Yr(n2, e, v);
          return;
        }
        var _4 = f3 ? f3(c2, l, e + "", n2, t, o) : i2, m3 = _4 === i2;
        if (m3) {
          var w4 = O4(l), A2 = !w4 && ut3(l), x3 = !w4 && !A2 && qt2(l);
          _4 = l, w4 || A2 || x3 ? O4(c2) ? _4 = c2 : Y4(c2) ? _4 = un2(c2) : A2 ? (m3 = false, _4 = hu(l, true)) : x3 ? (m3 = false, _4 = lu(l, true)) : _4 = [] : pe3(l) || wt3(l) ? (_4 = c2, wt3(c2) ? _4 = fa(c2) : (!z2(c2) || Jn(c2)) && (_4 = bu(l))) : m3 = false;
        }
        m3 && (o.set(l, _4), s(_4, l, r, f3, o), o.delete(l)), Yr(n2, e, _4);
      }
      function nu(n2, t) {
        var e = n2.length;
        if (e)
          return t += t < 0 ? e : 0, Zn(t, e) ? n2[t] : i2;
      }
      function tu(n2, t, e) {
        t.length ? t = G5(t, function(f3) {
          return O4(f3) ? function(o) {
            return vt2(o, f3.length === 1 ? f3[0] : f3);
          } : f3;
        }) : t = [on2];
        var r = -1;
        t = G5(t, hn2(I2()));
        var s = Vs2(n2, function(f3, o, c2) {
          var l = G5(t, function(v) {
            return v(f3);
          });
          return { criteria: l, index: ++r, value: f3 };
        });
        return eo(s, function(f3, o) {
          return Gc(f3, o, e);
        });
      }
      function Lc(n2, t) {
        return eu(n2, t, function(e, r) {
          return Oi(n2, r);
        });
      }
      function eu(n2, t, e) {
        for (var r = -1, s = t.length, f3 = {}; ++r < s; ) {
          var o = t[r], c2 = vt2(n2, o);
          e(c2, o) && oe4(f3, it3(o, n2), c2);
        }
        return f3;
      }
      function Tc(n2) {
        return function(t) {
          return vt2(t, n2);
        };
      }
      function ti(n2, t, e, r) {
        var s = r ? to : bt2, f3 = -1, o = t.length, c2 = n2;
        for (n2 === t && (t = un2(t)), e && (c2 = G5(n2, hn2(e))); ++f3 < o; )
          for (var l = 0, v = t[f3], _4 = e ? e(v) : v; (l = s(c2, _4, l, r)) > -1; )
            c2 !== n2 && Ne2.call(c2, l, 1), Ne2.call(n2, l, 1);
        return n2;
      }
      function ru(n2, t) {
        for (var e = n2 ? t.length : 0, r = e - 1; e--; ) {
          var s = t[e];
          if (e == r || s !== f3) {
            var f3 = s;
            Zn(s) ? Ne2.call(n2, s, 1) : si(n2, s);
          }
        }
        return n2;
      }
      function ei(n2, t) {
        return n2 + Ue3(Us2() * (t - n2 + 1));
      }
      function Dc(n2, t, e, r) {
        for (var s = -1, f3 = Q3($e4((t - n2) / (e || 1)), 0), o = d2(f3); f3--; )
          o[r ? f3 : ++s] = n2, n2 += e;
        return o;
      }
      function ri(n2, t) {
        var e = "";
        if (!n2 || t < 1 || t > Vn2)
          return e;
        do
          t % 2 && (e += n2), t = Ue3(t / 2), t && (n2 += n2);
        while (t);
        return e;
      }
      function L4(n2, t) {
        return Pi(Du(n2, t, on2), n2 + "");
      }
      function Nc(n2) {
        return Ms2(Bt2(n2));
      }
      function Hc(n2, t) {
        var e = Bt2(n2);
        return nr(e, gt2(t, 0, e.length));
      }
      function oe4(n2, t, e, r) {
        if (!z2(n2))
          return n2;
        t = it3(t, n2);
        for (var s = -1, f3 = t.length, o = f3 - 1, c2 = n2; c2 != null && ++s < f3; ) {
          var l = Wn2(t[s]), v = e;
          if (l === "__proto__" || l === "constructor" || l === "prototype")
            return n2;
          if (s != o) {
            var _4 = c2[l];
            v = r ? r(_4, l, c2) : i2, v === i2 && (v = z2(_4) ? _4 : Zn(t[s + 1]) ? [] : {});
          }
          se3(c2, l, v), c2 = c2[l];
        }
        return n2;
      }
      var iu = We3 ? function(n2, t) {
        return We3.set(n2, t), n2;
      } : on2, $c = He3 ? function(n2, t) {
        return He3(n2, "toString", { configurable: true, enumerable: false, value: bi(t), writable: true });
      } : on2;
      function Uc(n2) {
        return nr(Bt2(n2));
      }
      function Cn2(n2, t, e) {
        var r = -1, s = n2.length;
        t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;
        for (var f3 = d2(s); ++r < s; )
          f3[r] = n2[r + t];
        return f3;
      }
      function Wc(n2, t) {
        var e;
        return et3(n2, function(r, s, f3) {
          return e = t(r, s, f3), !e;
        }), !!e;
      }
      function Ke2(n2, t, e) {
        var r = 0, s = n2 == null ? r : n2.length;
        if (typeof t == "number" && t === t && s <= Wa) {
          for (; r < s; ) {
            var f3 = r + s >>> 1, o = n2[f3];
            o !== null && !pn2(o) && (e ? o <= t : o < t) ? r = f3 + 1 : s = f3;
          }
          return s;
        }
        return ii(n2, t, on2, e);
      }
      function ii(n2, t, e, r) {
        var s = 0, f3 = n2 == null ? 0 : n2.length;
        if (f3 === 0)
          return 0;
        t = e(t);
        for (var o = t !== t, c2 = t === null, l = pn2(t), v = t === i2; s < f3; ) {
          var _4 = Ue3((s + f3) / 2), m3 = e(n2[_4]), w4 = m3 !== i2, A2 = m3 === null, x3 = m3 === m3, b4 = pn2(m3);
          if (o)
            var E3 = r || x3;
          else
            v ? E3 = x3 && (r || w4) : c2 ? E3 = x3 && w4 && (r || !A2) : l ? E3 = x3 && w4 && !A2 && (r || !b4) : A2 || b4 ? E3 = false : E3 = r ? m3 <= t : m3 < t;
          E3 ? s = _4 + 1 : f3 = _4;
        }
        return nn2(f3, Ua);
      }
      function su(n2, t) {
        for (var e = -1, r = n2.length, s = 0, f3 = []; ++e < r; ) {
          var o = n2[e], c2 = t ? t(o) : o;
          if (!e || !bn(c2, l)) {
            var l = c2;
            f3[s++] = o === 0 ? 0 : o;
          }
        }
        return f3;
      }
      function uu(n2) {
        return typeof n2 == "number" ? n2 : pn2(n2) ? ve2 : +n2;
      }
      function ln(n2) {
        if (typeof n2 == "string")
          return n2;
        if (O4(n2))
          return G5(n2, ln) + "";
        if (pn2(n2))
          return Ws2 ? Ws2.call(n2) : "";
        var t = n2 + "";
        return t == "0" && 1 / n2 == -ct3 ? "-0" : t;
      }
      function rt3(n2, t, e) {
        var r = -1, s = xe3, f3 = n2.length, o = true, c2 = [], l = c2;
        if (e)
          o = false, s = Dr2;
        else if (f3 >= y3) {
          var v = t ? null : Xc(n2);
          if (v)
            return ye(v);
          o = false, s = jt2, l = new dt3();
        } else
          l = t ? [] : c2;
        n:
          for (; ++r < f3; ) {
            var _4 = n2[r], m3 = t ? t(_4) : _4;
            if (_4 = e || _4 !== 0 ? _4 : 0, o && m3 === m3) {
              for (var w4 = l.length; w4--; )
                if (l[w4] === m3)
                  continue n;
              t && l.push(m3), c2.push(_4);
            } else
              s(l, m3, e) || (l !== c2 && l.push(m3), c2.push(_4));
          }
        return c2;
      }
      function si(n2, t) {
        return t = it3(t, n2), n2 = Nu(n2, t), n2 == null || delete n2[Wn2(In(t))];
      }
      function au(n2, t, e, r) {
        return oe4(n2, t, e(vt2(n2, t)), r);
      }
      function Ye3(n2, t, e, r) {
        for (var s = n2.length, f3 = r ? s : -1; (r ? f3-- : ++f3 < s) && t(n2[f3], f3, n2); )
          ;
        return e ? Cn2(n2, r ? 0 : f3, r ? f3 + 1 : s) : Cn2(n2, r ? f3 + 1 : 0, r ? s : f3);
      }
      function fu(n2, t) {
        var e = n2;
        return e instanceof D2 && (e = e.value()), Nr(t, function(r, s) {
          return s.func.apply(s.thisArg, jn2([r], s.args));
        }, e);
      }
      function ui(n2, t, e) {
        var r = n2.length;
        if (r < 2)
          return r ? rt3(n2[0]) : [];
        for (var s = -1, f3 = d2(r); ++s < r; )
          for (var o = n2[s], c2 = -1; ++c2 < r; )
            c2 != s && (f3[s] = ue4(f3[s] || o, n2[c2], t, e));
        return rt3(j4(f3, 1), t, e);
      }
      function ou(n2, t, e) {
        for (var r = -1, s = n2.length, f3 = t.length, o = {}; ++r < s; ) {
          var c2 = r < f3 ? t[r] : i2;
          e(o, n2[r], c2);
        }
        return o;
      }
      function ai(n2) {
        return Y4(n2) ? n2 : [];
      }
      function fi(n2) {
        return typeof n2 == "function" ? n2 : on2;
      }
      function it3(n2, t) {
        return O4(n2) ? n2 : _i(n2, t) ? [n2] : Wu(U4(n2));
      }
      var Fc = L4;
      function st3(n2, t, e) {
        var r = n2.length;
        return e = e === i2 ? r : e, !t && e >= r ? n2 : Cn2(n2, t, e);
      }
      var cu = yo || function(n2) {
        return k3.clearTimeout(n2);
      };
      function hu(n2, t) {
        if (t)
          return n2.slice();
        var e = n2.length, r = Ts2 ? Ts2(e) : new n2.constructor(e);
        return n2.copy(r), r;
      }
      function oi(n2) {
        var t = new n2.constructor(n2.byteLength);
        return new Te2(t).set(new Te2(n2)), t;
      }
      function Mc(n2, t) {
        var e = t ? oi(n2.buffer) : n2.buffer;
        return new n2.constructor(e, n2.byteOffset, n2.byteLength);
      }
      function qc(n2) {
        var t = new n2.constructor(n2.source, Ji2.exec(n2));
        return t.lastIndex = n2.lastIndex, t;
      }
      function Bc(n2) {
        return ie3 ? M2(ie3.call(n2)) : {};
      }
      function lu(n2, t) {
        var e = t ? oi(n2.buffer) : n2.buffer;
        return new n2.constructor(e, n2.byteOffset, n2.length);
      }
      function pu(n2, t) {
        if (n2 !== t) {
          var e = n2 !== i2, r = n2 === null, s = n2 === n2, f3 = pn2(n2), o = t !== i2, c2 = t === null, l = t === t, v = pn2(t);
          if (!c2 && !v && !f3 && n2 > t || f3 && o && l && !c2 && !v || r && o && l || !e && l || !s)
            return 1;
          if (!r && !f3 && !v && n2 < t || v && e && s && !r && !f3 || c2 && e && s || !o && s || !l)
            return -1;
        }
        return 0;
      }
      function Gc(n2, t, e) {
        for (var r = -1, s = n2.criteria, f3 = t.criteria, o = s.length, c2 = e.length; ++r < o; ) {
          var l = pu(s[r], f3[r]);
          if (l) {
            if (r >= c2)
              return l;
            var v = e[r];
            return l * (v == "desc" ? -1 : 1);
          }
        }
        return n2.index - t.index;
      }
      function du(n2, t, e, r) {
        for (var s = -1, f3 = n2.length, o = e.length, c2 = -1, l = t.length, v = Q3(f3 - o, 0), _4 = d2(l + v), m3 = !r; ++c2 < l; )
          _4[c2] = t[c2];
        for (; ++s < o; )
          (m3 || s < f3) && (_4[e[s]] = n2[s]);
        for (; v--; )
          _4[c2++] = n2[s++];
        return _4;
      }
      function gu(n2, t, e, r) {
        for (var s = -1, f3 = n2.length, o = -1, c2 = e.length, l = -1, v = t.length, _4 = Q3(f3 - c2, 0), m3 = d2(_4 + v), w4 = !r; ++s < _4; )
          m3[s] = n2[s];
        for (var A2 = s; ++l < v; )
          m3[A2 + l] = t[l];
        for (; ++o < c2; )
          (w4 || s < f3) && (m3[A2 + e[o]] = n2[s++]);
        return m3;
      }
      function un2(n2, t) {
        var e = -1, r = n2.length;
        for (t || (t = d2(r)); ++e < r; )
          t[e] = n2[e];
        return t;
      }
      function Un2(n2, t, e, r) {
        var s = !e;
        e || (e = {});
        for (var f3 = -1, o = t.length; ++f3 < o; ) {
          var c2 = t[f3], l = r ? r(e[c2], n2[c2], c2, e, n2) : i2;
          l === i2 && (l = n2[c2]), s ? zn(e, c2, l) : se3(e, c2, l);
        }
        return e;
      }
      function zc(n2, t) {
        return Un2(n2, vi(n2), t);
      }
      function Kc(n2, t) {
        return Un2(n2, Ou(n2), t);
      }
      function Ze4(n2, t) {
        return function(e, r) {
          var s = O4(e) ? Xf : pc, f3 = t ? t() : {};
          return s(e, n2, I2(r, 2), f3);
        };
      }
      function Wt(n2) {
        return L4(function(t, e) {
          var r = -1, s = e.length, f3 = s > 1 ? e[s - 1] : i2, o = s > 2 ? e[2] : i2;
          for (f3 = n2.length > 3 && typeof f3 == "function" ? (s--, f3) : i2, o && rn2(e[0], e[1], o) && (f3 = s < 3 ? i2 : f3, s = 1), t = M2(t); ++r < s; ) {
            var c2 = e[r];
            c2 && n2(t, c2, r, f3);
          }
          return t;
        });
      }
      function vu(n2, t) {
        return function(e, r) {
          if (e == null)
            return e;
          if (!an2(e))
            return n2(e, r);
          for (var s = e.length, f3 = t ? s : -1, o = M2(e); (t ? f3-- : ++f3 < s) && r(o[f3], f3, o) !== false; )
            ;
          return e;
        };
      }
      function _u(n2) {
        return function(t, e, r) {
          for (var s = -1, f3 = M2(t), o = r(t), c2 = o.length; c2--; ) {
            var l = o[n2 ? c2 : ++s];
            if (e(f3[l], l, f3) === false)
              break;
          }
          return t;
        };
      }
      function Yc(n2, t, e) {
        var r = t & vn2, s = ce3(n2);
        function f3() {
          var o = this && this !== k3 && this instanceof f3 ? s : n2;
          return o.apply(r ? e : this, arguments);
        }
        return f3;
      }
      function mu(n2) {
        return function(t) {
          t = U4(t);
          var e = Lt3(t) ? On2(t) : i2, r = e ? e[0] : t.charAt(0), s = e ? st3(e, 1).join("") : t.slice(1);
          return r[n2]() + s;
        };
      }
      function Ft3(n2) {
        return function(t) {
          return Nr(va(ga(t).replace(Hf, "")), n2, "");
        };
      }
      function ce3(n2) {
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n2();
            case 1:
              return new n2(t[0]);
            case 2:
              return new n2(t[0], t[1]);
            case 3:
              return new n2(t[0], t[1], t[2]);
            case 4:
              return new n2(t[0], t[1], t[2], t[3]);
            case 5:
              return new n2(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n2(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n2(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var e = Ut3(n2.prototype), r = n2.apply(e, t);
          return z2(r) ? r : e;
        };
      }
      function Zc(n2, t, e) {
        var r = ce3(n2);
        function s() {
          for (var f3 = arguments.length, o = d2(f3), c2 = f3, l = Mt3(s); c2--; )
            o[c2] = arguments[c2];
          var v = f3 < 3 && o[0] !== l && o[f3 - 1] !== l ? [] : nt3(o, l);
          if (f3 -= v.length, f3 < e)
            return Iu(n2, t, Je3, s.placeholder, i2, o, v, i2, i2, e - f3);
          var _4 = this && this !== k3 && this instanceof s ? r : n2;
          return cn2(_4, this, o);
        }
        return s;
      }
      function wu(n2) {
        return function(t, e, r) {
          var s = M2(t);
          if (!an2(t)) {
            var f3 = I2(e, 3);
            t = V4(t), e = function(c2) {
              return f3(s[c2], c2, s);
            };
          }
          var o = n2(t, e, r);
          return o > -1 ? s[f3 ? t[o] : o] : i2;
        };
      }
      function Pu(n2) {
        return Yn2(function(t) {
          var e = t.length, r = e, s = Pn.prototype.thru;
          for (n2 && t.reverse(); r--; ) {
            var f3 = t[r];
            if (typeof f3 != "function")
              throw new wn2(W3);
            if (s && !o && ke2(f3) == "wrapper")
              var o = new Pn([], true);
          }
          for (r = o ? r : e; ++r < e; ) {
            f3 = t[r];
            var c2 = ke2(f3), l = c2 == "wrapper" ? di(f3) : i2;
            l && mi(l[0]) && l[1] == (Mn2 | Dn2 | Nn | Kt3) && !l[4].length && l[9] == 1 ? o = o[ke2(l[0])].apply(o, l[3]) : o = f3.length == 1 && mi(f3) ? o[c2]() : o.thru(f3);
          }
          return function() {
            var v = arguments, _4 = v[0];
            if (o && v.length == 1 && O4(_4))
              return o.plant(_4).value();
            for (var m3 = 0, w4 = e ? t[m3].apply(this, v) : _4; ++m3 < e; )
              w4 = t[m3].call(this, w4);
            return w4;
          };
        });
      }
      function Je3(n2, t, e, r, s, f3, o, c2, l, v) {
        var _4 = t & Mn2, m3 = t & vn2, w4 = t & ot3, A2 = t & (Dn2 | Et2), x3 = t & dr2, b4 = w4 ? i2 : ce3(n2);
        function E3() {
          for (var T2 = arguments.length, N12 = d2(T2), dn = T2; dn--; )
            N12[dn] = arguments[dn];
          if (A2)
            var sn2 = Mt3(E3), gn = io(N12, sn2);
          if (r && (N12 = du(N12, r, s, A2)), f3 && (N12 = gu(N12, f3, o, A2)), T2 -= gn, A2 && T2 < v) {
            var Z2 = nt3(N12, sn2);
            return Iu(n2, t, Je3, E3.placeholder, e, N12, Z2, c2, l, v - T2);
          }
          var Ln = m3 ? e : this, Qn = w4 ? Ln[n2] : n2;
          return T2 = N12.length, c2 ? N12 = ph(N12, c2) : x3 && T2 > 1 && N12.reverse(), _4 && l < T2 && (N12.length = l), this && this !== k3 && this instanceof E3 && (Qn = b4 || ce3(Qn)), Qn.apply(Ln, N12);
        }
        return E3;
      }
      function Au(n2, t) {
        return function(e, r) {
          return Ac(e, n2, t(r), {});
        };
      }
      function Xe3(n2, t) {
        return function(e, r) {
          var s;
          if (e === i2 && r === i2)
            return t;
          if (e !== i2 && (s = e), r !== i2) {
            if (s === i2)
              return r;
            typeof e == "string" || typeof r == "string" ? (e = ln(e), r = ln(r)) : (e = uu(e), r = uu(r)), s = n2(e, r);
          }
          return s;
        };
      }
      function ci(n2) {
        return Yn2(function(t) {
          return t = G5(t, hn2(I2())), L4(function(e) {
            var r = this;
            return n2(t, function(s) {
              return cn2(s, r, e);
            });
          });
        });
      }
      function Qe4(n2, t) {
        t = t === i2 ? " " : ln(t);
        var e = t.length;
        if (e < 2)
          return e ? ri(t, n2) : t;
        var r = ri(t, $e4(n2 / Tt3(t)));
        return Lt3(t) ? st3(On2(r), 0, n2).join("") : r.slice(0, n2);
      }
      function Jc(n2, t, e, r) {
        var s = t & vn2, f3 = ce3(n2);
        function o() {
          for (var c2 = -1, l = arguments.length, v = -1, _4 = r.length, m3 = d2(_4 + l), w4 = this && this !== k3 && this instanceof o ? f3 : n2; ++v < _4; )
            m3[v] = r[v];
          for (; l--; )
            m3[v++] = arguments[++c2];
          return cn2(w4, s ? e : this, m3);
        }
        return o;
      }
      function Cu(n2) {
        return function(t, e, r) {
          return r && typeof r != "number" && rn2(t, e, r) && (e = r = i2), t = Xn2(t), e === i2 ? (e = t, t = 0) : e = Xn2(e), r = r === i2 ? t < e ? 1 : -1 : Xn2(r), Dc(t, e, r, n2);
        };
      }
      function Ve3(n2) {
        return function(t, e) {
          return typeof t == "string" && typeof e == "string" || (t = xn(t), e = xn(e)), n2(t, e);
        };
      }
      function Iu(n2, t, e, r, s, f3, o, c2, l, v) {
        var _4 = t & Dn2, m3 = _4 ? o : i2, w4 = _4 ? i2 : o, A2 = _4 ? f3 : i2, x3 = _4 ? i2 : f3;
        t |= _4 ? Nn : yt2, t &= ~(_4 ? yt2 : Nn), t & qi2 || (t &= ~(vn2 | ot3));
        var b4 = [n2, t, s, A2, m3, x3, w4, c2, l, v], E3 = e.apply(i2, b4);
        return mi(n2) && Hu(E3, b4), E3.placeholder = r, $u(E3, n2, t);
      }
      function hi(n2) {
        var t = X4[n2];
        return function(e, r) {
          if (e = xn(e), r = r == null ? 0 : nn2(R2(r), 292), r && $s2(e)) {
            var s = (U4(e) + "e").split("e"), f3 = t(s[0] + "e" + (+s[1] + r));
            return s = (U4(f3) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
          }
          return t(e);
        };
      }
      var Xc = Ht2 && 1 / ye(new Ht2([, -0]))[1] == ct3 ? function(n2) {
        return new Ht2(n2);
      } : Di;
      function xu(n2) {
        return function(t) {
          var e = tn2(t);
          return e == yn ? qr(t) : e == Sn ? ho(t) : ro(t, n2(t));
        };
      }
      function Kn2(n2, t, e, r, s, f3, o, c2) {
        var l = t & ot3;
        if (!l && typeof n2 != "function")
          throw new wn2(W3);
        var v = r ? r.length : 0;
        if (v || (t &= ~(Nn | yt2), r = s = i2), o = o === i2 ? o : Q3(R2(o), 0), c2 = c2 === i2 ? c2 : R2(c2), v -= s ? s.length : 0, t & yt2) {
          var _4 = r, m3 = s;
          r = s = i2;
        }
        var w4 = l ? i2 : di(n2), A2 = [n2, t, e, r, s, _4, m3, f3, o, c2];
        if (w4 && ch(A2, w4), n2 = A2[0], t = A2[1], e = A2[2], r = A2[3], s = A2[4], c2 = A2[9] = A2[9] === i2 ? l ? 0 : n2.length : Q3(A2[9] - v, 0), !c2 && t & (Dn2 | Et2) && (t &= ~(Dn2 | Et2)), !t || t == vn2)
          var x3 = Yc(n2, t, e);
        else
          t == Dn2 || t == Et2 ? x3 = Zc(n2, t, c2) : (t == Nn || t == (vn2 | Nn)) && !s.length ? x3 = Jc(n2, t, e, r) : x3 = Je3.apply(i2, A2);
        var b4 = w4 ? iu : Hu;
        return $u(b4(x3, A2), n2, t);
      }
      function Eu(n2, t, e, r) {
        return n2 === i2 || bn(n2, Nt2[e]) && !F2.call(r, e) ? t : n2;
      }
      function yu(n2, t, e, r, s, f3) {
        return z2(n2) && z2(t) && (f3.set(t, n2), ze3(n2, t, i2, yu, f3), f3.delete(t)), n2;
      }
      function Qc(n2) {
        return pe3(n2) ? i2 : n2;
      }
      function Su(n2, t, e, r, s, f3) {
        var o = e & xt3, c2 = n2.length, l = t.length;
        if (c2 != l && !(o && l > c2))
          return false;
        var v = f3.get(n2), _4 = f3.get(t);
        if (v && _4)
          return v == t && _4 == n2;
        var m3 = -1, w4 = true, A2 = e & ge3 ? new dt3() : i2;
        for (f3.set(n2, t), f3.set(t, n2); ++m3 < c2; ) {
          var x3 = n2[m3], b4 = t[m3];
          if (r)
            var E3 = o ? r(b4, x3, m3, t, n2, f3) : r(x3, b4, m3, n2, t, f3);
          if (E3 !== i2) {
            if (E3)
              continue;
            w4 = false;
            break;
          }
          if (A2) {
            if (!Hr(t, function(T2, N12) {
              if (!jt2(A2, N12) && (x3 === T2 || s(x3, T2, e, r, f3)))
                return A2.push(N12);
            })) {
              w4 = false;
              break;
            }
          } else if (!(x3 === b4 || s(x3, b4, e, r, f3))) {
            w4 = false;
            break;
          }
        }
        return f3.delete(n2), f3.delete(t), w4;
      }
      function Vc(n2, t, e, r, s, f3, o) {
        switch (e) {
          case Ot3:
            if (n2.byteLength != t.byteLength || n2.byteOffset != t.byteOffset)
              return false;
            n2 = n2.buffer, t = t.buffer;
          case kt3:
            return !(n2.byteLength != t.byteLength || !f3(new Te2(n2), new Te2(t)));
          case Yt:
          case Zt:
          case Jt:
            return bn(+n2, +t);
          case me2:
            return n2.name == t.name && n2.message == t.message;
          case Xt:
          case Qt:
            return n2 == t + "";
          case yn:
            var c2 = qr;
          case Sn:
            var l = r & xt3;
            if (c2 || (c2 = ye), n2.size != t.size && !l)
              return false;
            var v = o.get(n2);
            if (v)
              return v == t;
            r |= ge3, o.set(n2, t);
            var _4 = Su(c2(n2), c2(t), r, s, f3, o);
            return o.delete(n2), _4;
          case Pe3:
            if (ie3)
              return ie3.call(n2) == ie3.call(t);
        }
        return false;
      }
      function kc(n2, t, e, r, s, f3) {
        var o = e & xt3, c2 = li(n2), l = c2.length, v = li(t), _4 = v.length;
        if (l != _4 && !o)
          return false;
        for (var m3 = l; m3--; ) {
          var w4 = c2[m3];
          if (!(o ? w4 in t : F2.call(t, w4)))
            return false;
        }
        var A2 = f3.get(n2), x3 = f3.get(t);
        if (A2 && x3)
          return A2 == t && x3 == n2;
        var b4 = true;
        f3.set(n2, t), f3.set(t, n2);
        for (var E3 = o; ++m3 < l; ) {
          w4 = c2[m3];
          var T2 = n2[w4], N12 = t[w4];
          if (r)
            var dn = o ? r(N12, T2, w4, t, n2, f3) : r(T2, N12, w4, n2, t, f3);
          if (!(dn === i2 ? T2 === N12 || s(T2, N12, e, r, f3) : dn)) {
            b4 = false;
            break;
          }
          E3 || (E3 = w4 == "constructor");
        }
        if (b4 && !E3) {
          var sn2 = n2.constructor, gn = t.constructor;
          sn2 != gn && "constructor" in n2 && "constructor" in t && !(typeof sn2 == "function" && sn2 instanceof sn2 && typeof gn == "function" && gn instanceof gn) && (b4 = false);
        }
        return f3.delete(n2), f3.delete(t), b4;
      }
      function Yn2(n2) {
        return Pi(Du(n2, i2, Bu), n2 + "");
      }
      function li(n2) {
        return Zs2(n2, V4, vi);
      }
      function pi(n2) {
        return Zs2(n2, fn, Ou);
      }
      var di = We3 ? function(n2) {
        return We3.get(n2);
      } : Di;
      function ke2(n2) {
        for (var t = n2.name + "", e = $t3[t], r = F2.call($t3, t) ? e.length : 0; r--; ) {
          var s = e[r], f3 = s.func;
          if (f3 == null || f3 == n2)
            return s.name;
        }
        return t;
      }
      function Mt3(n2) {
        var t = F2.call(a2, "placeholder") ? a2 : n2;
        return t.placeholder;
      }
      function I2() {
        var n2 = a2.iteratee || Li2;
        return n2 = n2 === Li2 ? Qs2 : n2, arguments.length ? n2(arguments[0], arguments[1]) : n2;
      }
      function je3(n2, t) {
        var e = n2.__data__;
        return uh(t) ? e[typeof t == "string" ? "string" : "hash"] : e.map;
      }
      function gi(n2) {
        for (var t = V4(n2), e = t.length; e--; ) {
          var r = t[e], s = n2[r];
          t[e] = [r, s, Lu(s)];
        }
        return t;
      }
      function _t3(n2, t) {
        var e = fo(n2, t);
        return Xs2(e) ? e : i2;
      }
      function jc(n2) {
        var t = F2.call(n2, lt3), e = n2[lt3];
        try {
          n2[lt3] = i2;
          var r = true;
        } catch {
        }
        var s = be2.call(n2);
        return r && (t ? n2[lt3] = e : delete n2[lt3]), s;
      }
      var vi = Gr ? function(n2) {
        return n2 == null ? [] : (n2 = M2(n2), kn2(Gr(n2), function(t) {
          return Ns2.call(n2, t);
        }));
      } : Ni2, Ou = Gr ? function(n2) {
        for (var t = []; n2; )
          jn2(t, vi(n2)), n2 = De2(n2);
        return t;
      } : Ni2, tn2 = en2;
      (zr && tn2(new zr(new ArrayBuffer(1))) != Ot3 || te3 && tn2(new te3()) != yn || Kr && tn2(Kr.resolve()) != zi2 || Ht2 && tn2(new Ht2()) != Sn || ee3 && tn2(new ee3()) != Vt2) && (tn2 = function(n2) {
        var t = en2(n2), e = t == qn2 ? n2.constructor : i2, r = e ? mt3(e) : "";
        if (r)
          switch (r) {
            case Ho:
              return Ot3;
            case $o:
              return yn;
            case Uo:
              return zi2;
            case Wo:
              return Sn;
            case Fo:
              return Vt2;
          }
        return t;
      });
      function nh(n2, t, e) {
        for (var r = -1, s = e.length; ++r < s; ) {
          var f3 = e[r], o = f3.size;
          switch (f3.type) {
            case "drop":
              n2 += o;
              break;
            case "dropRight":
              t -= o;
              break;
            case "take":
              t = nn2(t, n2 + o);
              break;
            case "takeRight":
              n2 = Q3(n2, t - o);
              break;
          }
        }
        return { start: n2, end: t };
      }
      function th(n2) {
        var t = n2.match(uf);
        return t ? t[1].split(af) : [];
      }
      function Ru(n2, t, e) {
        t = it3(t, n2);
        for (var r = -1, s = t.length, f3 = false; ++r < s; ) {
          var o = Wn2(t[r]);
          if (!(f3 = n2 != null && e(n2, o)))
            break;
          n2 = n2[o];
        }
        return f3 || ++r != s ? f3 : (s = n2 == null ? 0 : n2.length, !!s && ur2(s) && Zn(o, s) && (O4(n2) || wt3(n2)));
      }
      function eh(n2) {
        var t = n2.length, e = new n2.constructor(t);
        return t && typeof n2[0] == "string" && F2.call(n2, "index") && (e.index = n2.index, e.input = n2.input), e;
      }
      function bu(n2) {
        return typeof n2.constructor == "function" && !he2(n2) ? Ut3(De2(n2)) : {};
      }
      function rh(n2, t, e) {
        var r = n2.constructor;
        switch (t) {
          case kt3:
            return oi(n2);
          case Yt:
          case Zt:
            return new r(+n2);
          case Ot3:
            return Mc(n2, e);
          case gr2:
          case vr2:
          case _r2:
          case mr2:
          case wr2:
          case Pr:
          case Ar:
          case Cr2:
          case Ir2:
            return lu(n2, e);
          case yn:
            return new r();
          case Jt:
          case Qt:
            return new r(n2);
          case Xt:
            return qc(n2);
          case Sn:
            return new r();
          case Pe3:
            return Bc(n2);
        }
      }
      function ih(n2, t) {
        var e = t.length;
        if (!e)
          return n2;
        var r = e - 1;
        return t[r] = (e > 1 ? "& " : "") + t[r], t = t.join(e > 2 ? ", " : " "), n2.replace(sf, `{
/* [wrapped with ` + t + `] */
`);
      }
      function sh(n2) {
        return O4(n2) || wt3(n2) || !!(Hs2 && n2 && n2[Hs2]);
      }
      function Zn(n2, t) {
        var e = typeof n2;
        return t = t ?? Vn2, !!t && (e == "number" || e != "symbol" && vf.test(n2)) && n2 > -1 && n2 % 1 == 0 && n2 < t;
      }
      function rn2(n2, t, e) {
        if (!z2(e))
          return false;
        var r = typeof t;
        return (r == "number" ? an2(e) && Zn(t, e.length) : r == "string" && t in e) ? bn(e[t], n2) : false;
      }
      function _i(n2, t) {
        if (O4(n2))
          return false;
        var e = typeof n2;
        return e == "number" || e == "symbol" || e == "boolean" || n2 == null || pn2(n2) ? true : nf.test(n2) || !ja.test(n2) || t != null && n2 in M2(t);
      }
      function uh(n2) {
        var t = typeof n2;
        return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? n2 !== "__proto__" : n2 === null;
      }
      function mi(n2) {
        var t = ke2(n2), e = a2[t];
        if (typeof e != "function" || !(t in D2.prototype))
          return false;
        if (n2 === e)
          return true;
        var r = di(e);
        return !!r && n2 === r[0];
      }
      function ah(n2) {
        return !!Ls2 && Ls2 in n2;
      }
      var fh = Oe3 ? Jn : Hi2;
      function he2(n2) {
        var t = n2 && n2.constructor, e = typeof t == "function" && t.prototype || Nt2;
        return n2 === e;
      }
      function Lu(n2) {
        return n2 === n2 && !z2(n2);
      }
      function Tu(n2, t) {
        return function(e) {
          return e == null ? false : e[n2] === t && (t !== i2 || n2 in M2(e));
        };
      }
      function oh(n2) {
        var t = ir2(n2, function(r) {
          return e.size === pr2 && e.clear(), r;
        }), e = t.cache;
        return t;
      }
      function ch(n2, t) {
        var e = n2[1], r = t[1], s = e | r, f3 = s < (vn2 | ot3 | Mn2), o = r == Mn2 && e == Dn2 || r == Mn2 && e == Kt3 && n2[7].length <= t[8] || r == (Mn2 | Kt3) && t[7].length <= t[8] && e == Dn2;
        if (!(f3 || o))
          return n2;
        r & vn2 && (n2[2] = t[2], s |= e & vn2 ? 0 : qi2);
        var c2 = t[3];
        if (c2) {
          var l = n2[3];
          n2[3] = l ? du(l, c2, t[4]) : c2, n2[4] = l ? nt3(n2[3], Ct3) : t[4];
        }
        return c2 = t[5], c2 && (l = n2[5], n2[5] = l ? gu(l, c2, t[6]) : c2, n2[6] = l ? nt3(n2[5], Ct3) : t[6]), c2 = t[7], c2 && (n2[7] = c2), r & Mn2 && (n2[8] = n2[8] == null ? t[8] : nn2(n2[8], t[8])), n2[9] == null && (n2[9] = t[9]), n2[0] = t[0], n2[1] = s, n2;
      }
      function hh(n2) {
        var t = [];
        if (n2 != null)
          for (var e in M2(n2))
            t.push(e);
        return t;
      }
      function lh(n2) {
        return be2.call(n2);
      }
      function Du(n2, t, e) {
        return t = Q3(t === i2 ? n2.length - 1 : t, 0), function() {
          for (var r = arguments, s = -1, f3 = Q3(r.length - t, 0), o = d2(f3); ++s < f3; )
            o[s] = r[t + s];
          s = -1;
          for (var c2 = d2(t + 1); ++s < t; )
            c2[s] = r[s];
          return c2[t] = e(o), cn2(n2, this, c2);
        };
      }
      function Nu(n2, t) {
        return t.length < 2 ? n2 : vt2(n2, Cn2(t, 0, -1));
      }
      function ph(n2, t) {
        for (var e = n2.length, r = nn2(t.length, e), s = un2(n2); r--; ) {
          var f3 = t[r];
          n2[r] = Zn(f3, e) ? s[f3] : i2;
        }
        return n2;
      }
      function wi(n2, t) {
        if (!(t === "constructor" && typeof n2[t] == "function") && t != "__proto__")
          return n2[t];
      }
      var Hu = Uu(iu), le3 = Oo || function(n2, t) {
        return k3.setTimeout(n2, t);
      }, Pi = Uu($c);
      function $u(n2, t, e) {
        var r = t + "";
        return Pi(n2, ih(r, dh(th(r), e)));
      }
      function Uu(n2) {
        var t = 0, e = 0;
        return function() {
          var r = To(), s = Da - (r - e);
          if (e = r, s > 0) {
            if (++t >= Ta)
              return arguments[0];
          } else
            t = 0;
          return n2.apply(i2, arguments);
        };
      }
      function nr(n2, t) {
        var e = -1, r = n2.length, s = r - 1;
        for (t = t === i2 ? r : t; ++e < t; ) {
          var f3 = ei(e, s), o = n2[f3];
          n2[f3] = n2[e], n2[e] = o;
        }
        return n2.length = t, n2;
      }
      var Wu = oh(function(n2) {
        var t = [];
        return n2.charCodeAt(0) === 46 && t.push(""), n2.replace(tf, function(e, r, s, f3) {
          t.push(s ? f3.replace(cf, "$1") : r || e);
        }), t;
      });
      function Wn2(n2) {
        if (typeof n2 == "string" || pn2(n2))
          return n2;
        var t = n2 + "";
        return t == "0" && 1 / n2 == -ct3 ? "-0" : t;
      }
      function mt3(n2) {
        if (n2 != null) {
          try {
            return Re2.call(n2);
          } catch {
          }
          try {
            return n2 + "";
          } catch {
          }
        }
        return "";
      }
      function dh(n2, t) {
        return mn2(Fa, function(e) {
          var r = "_." + e[0];
          t & e[1] && !xe3(n2, r) && n2.push(r);
        }), n2.sort();
      }
      function Fu(n2) {
        if (n2 instanceof D2)
          return n2.clone();
        var t = new Pn(n2.__wrapped__, n2.__chain__);
        return t.__actions__ = un2(n2.__actions__), t.__index__ = n2.__index__, t.__values__ = n2.__values__, t;
      }
      function gh(n2, t, e) {
        (e ? rn2(n2, t, e) : t === i2) ? t = 1 : t = Q3(R2(t), 0);
        var r = n2 == null ? 0 : n2.length;
        if (!r || t < 1)
          return [];
        for (var s = 0, f3 = 0, o = d2($e4(r / t)); s < r; )
          o[f3++] = Cn2(n2, s, s += t);
        return o;
      }
      function vh(n2) {
        for (var t = -1, e = n2 == null ? 0 : n2.length, r = 0, s = []; ++t < e; ) {
          var f3 = n2[t];
          f3 && (s[r++] = f3);
        }
        return s;
      }
      function _h() {
        var n2 = arguments.length;
        if (!n2)
          return [];
        for (var t = d2(n2 - 1), e = arguments[0], r = n2; r--; )
          t[r - 1] = arguments[r];
        return jn2(O4(e) ? un2(e) : [e], j4(t, 1));
      }
      var mh = L4(function(n2, t) {
        return Y4(n2) ? ue4(n2, j4(t, 1, Y4, true)) : [];
      }), wh = L4(function(n2, t) {
        var e = In(t);
        return Y4(e) && (e = i2), Y4(n2) ? ue4(n2, j4(t, 1, Y4, true), I2(e, 2)) : [];
      }), Ph = L4(function(n2, t) {
        var e = In(t);
        return Y4(e) && (e = i2), Y4(n2) ? ue4(n2, j4(t, 1, Y4, true), i2, e) : [];
      });
      function Ah(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i2 ? 1 : R2(t), Cn2(n2, t < 0 ? 0 : t, r)) : [];
      }
      function Ch(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i2 ? 1 : R2(t), t = r - t, Cn2(n2, 0, t < 0 ? 0 : t)) : [];
      }
      function Ih(n2, t) {
        return n2 && n2.length ? Ye3(n2, I2(t, 3), true, true) : [];
      }
      function xh(n2, t) {
        return n2 && n2.length ? Ye3(n2, I2(t, 3), true) : [];
      }
      function Eh(n2, t, e, r) {
        var s = n2 == null ? 0 : n2.length;
        return s ? (e && typeof e != "number" && rn2(n2, t, e) && (e = 0, r = s), _c(n2, t, e, r)) : [];
      }
      function Mu(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = e == null ? 0 : R2(e);
        return s < 0 && (s = Q3(r + s, 0)), Ee2(n2, I2(t, 3), s);
      }
      function qu(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = r - 1;
        return e !== i2 && (s = R2(e), s = e < 0 ? Q3(r + s, 0) : nn2(s, r - 1)), Ee2(n2, I2(t, 3), s, true);
      }
      function Bu(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? j4(n2, 1) : [];
      }
      function yh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? j4(n2, ct3) : [];
      }
      function Sh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        return e ? (t = t === i2 ? 1 : R2(t), j4(n2, t)) : [];
      }
      function Oh(n2) {
        for (var t = -1, e = n2 == null ? 0 : n2.length, r = {}; ++t < e; ) {
          var s = n2[t];
          r[s[0]] = s[1];
        }
        return r;
      }
      function Gu(n2) {
        return n2 && n2.length ? n2[0] : i2;
      }
      function Rh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = e == null ? 0 : R2(e);
        return s < 0 && (s = Q3(r + s, 0)), bt2(n2, t, s);
      }
      function bh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? Cn2(n2, 0, -1) : [];
      }
      var Lh = L4(function(n2) {
        var t = G5(n2, ai);
        return t.length && t[0] === n2[0] ? Vr(t) : [];
      }), Th = L4(function(n2) {
        var t = In(n2), e = G5(n2, ai);
        return t === In(e) ? t = i2 : e.pop(), e.length && e[0] === n2[0] ? Vr(e, I2(t, 2)) : [];
      }), Dh = L4(function(n2) {
        var t = In(n2), e = G5(n2, ai);
        return t = typeof t == "function" ? t : i2, t && e.pop(), e.length && e[0] === n2[0] ? Vr(e, i2, t) : [];
      });
      function Nh(n2, t) {
        return n2 == null ? "" : bo.call(n2, t);
      }
      function In(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? n2[t - 1] : i2;
      }
      function Hh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = r;
        return e !== i2 && (s = R2(e), s = s < 0 ? Q3(r + s, 0) : nn2(s, r - 1)), t === t ? po(n2, t, s) : Ee2(n2, Is2, s, true);
      }
      function $h(n2, t) {
        return n2 && n2.length ? nu(n2, R2(t)) : i2;
      }
      var Uh = L4(zu);
      function zu(n2, t) {
        return n2 && n2.length && t && t.length ? ti(n2, t) : n2;
      }
      function Wh(n2, t, e) {
        return n2 && n2.length && t && t.length ? ti(n2, t, I2(e, 2)) : n2;
      }
      function Fh(n2, t, e) {
        return n2 && n2.length && t && t.length ? ti(n2, t, i2, e) : n2;
      }
      var Mh = Yn2(function(n2, t) {
        var e = n2 == null ? 0 : n2.length, r = Zr(n2, t);
        return ru(n2, G5(t, function(s) {
          return Zn(s, e) ? +s : s;
        }).sort(pu)), r;
      });
      function qh(n2, t) {
        var e = [];
        if (!(n2 && n2.length))
          return e;
        var r = -1, s = [], f3 = n2.length;
        for (t = I2(t, 3); ++r < f3; ) {
          var o = n2[r];
          t(o, r, n2) && (e.push(o), s.push(r));
        }
        return ru(n2, s), e;
      }
      function Ai(n2) {
        return n2 == null ? n2 : No.call(n2);
      }
      function Bh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (e && typeof e != "number" && rn2(n2, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : R2(t), e = e === i2 ? r : R2(e)), Cn2(n2, t, e)) : [];
      }
      function Gh(n2, t) {
        return Ke2(n2, t);
      }
      function zh(n2, t, e) {
        return ii(n2, t, I2(e, 2));
      }
      function Kh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        if (e) {
          var r = Ke2(n2, t);
          if (r < e && bn(n2[r], t))
            return r;
        }
        return -1;
      }
      function Yh(n2, t) {
        return Ke2(n2, t, true);
      }
      function Zh(n2, t, e) {
        return ii(n2, t, I2(e, 2), true);
      }
      function Jh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        if (e) {
          var r = Ke2(n2, t, true) - 1;
          if (bn(n2[r], t))
            return r;
        }
        return -1;
      }
      function Xh(n2) {
        return n2 && n2.length ? su(n2) : [];
      }
      function Qh(n2, t) {
        return n2 && n2.length ? su(n2, I2(t, 2)) : [];
      }
      function Vh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? Cn2(n2, 1, t) : [];
      }
      function kh(n2, t, e) {
        return n2 && n2.length ? (t = e || t === i2 ? 1 : R2(t), Cn2(n2, 0, t < 0 ? 0 : t)) : [];
      }
      function jh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i2 ? 1 : R2(t), t = r - t, Cn2(n2, t < 0 ? 0 : t, r)) : [];
      }
      function nl(n2, t) {
        return n2 && n2.length ? Ye3(n2, I2(t, 3), false, true) : [];
      }
      function tl(n2, t) {
        return n2 && n2.length ? Ye3(n2, I2(t, 3)) : [];
      }
      var el = L4(function(n2) {
        return rt3(j4(n2, 1, Y4, true));
      }), rl = L4(function(n2) {
        var t = In(n2);
        return Y4(t) && (t = i2), rt3(j4(n2, 1, Y4, true), I2(t, 2));
      }), il = L4(function(n2) {
        var t = In(n2);
        return t = typeof t == "function" ? t : i2, rt3(j4(n2, 1, Y4, true), i2, t);
      });
      function sl(n2) {
        return n2 && n2.length ? rt3(n2) : [];
      }
      function ul(n2, t) {
        return n2 && n2.length ? rt3(n2, I2(t, 2)) : [];
      }
      function al(n2, t) {
        return t = typeof t == "function" ? t : i2, n2 && n2.length ? rt3(n2, i2, t) : [];
      }
      function Ci(n2) {
        if (!(n2 && n2.length))
          return [];
        var t = 0;
        return n2 = kn2(n2, function(e) {
          if (Y4(e))
            return t = Q3(e.length, t), true;
        }), Fr(t, function(e) {
          return G5(n2, $r(e));
        });
      }
      function Ku(n2, t) {
        if (!(n2 && n2.length))
          return [];
        var e = Ci(n2);
        return t == null ? e : G5(e, function(r) {
          return cn2(t, i2, r);
        });
      }
      var fl = L4(function(n2, t) {
        return Y4(n2) ? ue4(n2, t) : [];
      }), ol = L4(function(n2) {
        return ui(kn2(n2, Y4));
      }), cl = L4(function(n2) {
        var t = In(n2);
        return Y4(t) && (t = i2), ui(kn2(n2, Y4), I2(t, 2));
      }), hl = L4(function(n2) {
        var t = In(n2);
        return t = typeof t == "function" ? t : i2, ui(kn2(n2, Y4), i2, t);
      }), ll = L4(Ci);
      function pl(n2, t) {
        return ou(n2 || [], t || [], se3);
      }
      function dl(n2, t) {
        return ou(n2 || [], t || [], oe4);
      }
      var gl = L4(function(n2) {
        var t = n2.length, e = t > 1 ? n2[t - 1] : i2;
        return e = typeof e == "function" ? (n2.pop(), e) : i2, Ku(n2, e);
      });
      function Yu(n2) {
        var t = a2(n2);
        return t.__chain__ = true, t;
      }
      function vl(n2, t) {
        return t(n2), n2;
      }
      function tr2(n2, t) {
        return t(n2);
      }
      var _l = Yn2(function(n2) {
        var t = n2.length, e = t ? n2[0] : 0, r = this.__wrapped__, s = function(f3) {
          return Zr(f3, n2);
        };
        return t > 1 || this.__actions__.length || !(r instanceof D2) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({ func: tr2, args: [s], thisArg: i2 }), new Pn(r, this.__chain__).thru(function(f3) {
          return t && !f3.length && f3.push(i2), f3;
        }));
      });
      function ml() {
        return Yu(this);
      }
      function wl() {
        return new Pn(this.value(), this.__chain__);
      }
      function Pl() {
        this.__values__ === i2 && (this.__values__ = ua(this.value()));
        var n2 = this.__index__ >= this.__values__.length, t = n2 ? i2 : this.__values__[this.__index__++];
        return { done: n2, value: t };
      }
      function Al() {
        return this;
      }
      function Cl(n2) {
        for (var t, e = this; e instanceof Me3; ) {
          var r = Fu(e);
          r.__index__ = 0, r.__values__ = i2, t ? s.__wrapped__ = r : t = r;
          var s = r;
          e = e.__wrapped__;
        }
        return s.__wrapped__ = n2, t;
      }
      function Il() {
        var n2 = this.__wrapped__;
        if (n2 instanceof D2) {
          var t = n2;
          return this.__actions__.length && (t = new D2(this)), t = t.reverse(), t.__actions__.push({ func: tr2, args: [Ai], thisArg: i2 }), new Pn(t, this.__chain__);
        }
        return this.thru(Ai);
      }
      function xl() {
        return fu(this.__wrapped__, this.__actions__);
      }
      var El = Ze4(function(n2, t, e) {
        F2.call(n2, e) ? ++n2[e] : zn(n2, e, 1);
      });
      function yl(n2, t, e) {
        var r = O4(n2) ? As2 : vc;
        return e && rn2(n2, t, e) && (t = i2), r(n2, I2(t, 3));
      }
      function Sl(n2, t) {
        var e = O4(n2) ? kn2 : Ks2;
        return e(n2, I2(t, 3));
      }
      var Ol = wu(Mu), Rl = wu(qu);
      function bl(n2, t) {
        return j4(er2(n2, t), 1);
      }
      function Ll(n2, t) {
        return j4(er2(n2, t), ct3);
      }
      function Tl(n2, t, e) {
        return e = e === i2 ? 1 : R2(e), j4(er2(n2, t), e);
      }
      function Zu(n2, t) {
        var e = O4(n2) ? mn2 : et3;
        return e(n2, I2(t, 3));
      }
      function Ju(n2, t) {
        var e = O4(n2) ? Qf : zs2;
        return e(n2, I2(t, 3));
      }
      var Dl = Ze4(function(n2, t, e) {
        F2.call(n2, e) ? n2[e].push(t) : zn(n2, e, [t]);
      });
      function Nl(n2, t, e, r) {
        n2 = an2(n2) ? n2 : Bt2(n2), e = e && !r ? R2(e) : 0;
        var s = n2.length;
        return e < 0 && (e = Q3(s + e, 0)), ar(n2) ? e <= s && n2.indexOf(t, e) > -1 : !!s && bt2(n2, t, e) > -1;
      }
      var Hl = L4(function(n2, t, e) {
        var r = -1, s = typeof t == "function", f3 = an2(n2) ? d2(n2.length) : [];
        return et3(n2, function(o) {
          f3[++r] = s ? cn2(t, o, e) : ae4(o, t, e);
        }), f3;
      }), $l = Ze4(function(n2, t, e) {
        zn(n2, e, t);
      });
      function er2(n2, t) {
        var e = O4(n2) ? G5 : Vs2;
        return e(n2, I2(t, 3));
      }
      function Ul(n2, t, e, r) {
        return n2 == null ? [] : (O4(t) || (t = t == null ? [] : [t]), e = r ? i2 : e, O4(e) || (e = e == null ? [] : [e]), tu(n2, t, e));
      }
      var Wl = Ze4(function(n2, t, e) {
        n2[e ? 0 : 1].push(t);
      }, function() {
        return [[], []];
      });
      function Fl(n2, t, e) {
        var r = O4(n2) ? Nr : Es2, s = arguments.length < 3;
        return r(n2, I2(t, 4), e, s, et3);
      }
      function Ml(n2, t, e) {
        var r = O4(n2) ? Vf : Es2, s = arguments.length < 3;
        return r(n2, I2(t, 4), e, s, zs2);
      }
      function ql(n2, t) {
        var e = O4(n2) ? kn2 : Ks2;
        return e(n2, sr2(I2(t, 3)));
      }
      function Bl(n2) {
        var t = O4(n2) ? Ms2 : Nc;
        return t(n2);
      }
      function Gl(n2, t, e) {
        (e ? rn2(n2, t, e) : t === i2) ? t = 1 : t = R2(t);
        var r = O4(n2) ? hc : Hc;
        return r(n2, t);
      }
      function zl(n2) {
        var t = O4(n2) ? lc : Uc;
        return t(n2);
      }
      function Kl(n2) {
        if (n2 == null)
          return 0;
        if (an2(n2))
          return ar(n2) ? Tt3(n2) : n2.length;
        var t = tn2(n2);
        return t == yn || t == Sn ? n2.size : jr(n2).length;
      }
      function Yl(n2, t, e) {
        var r = O4(n2) ? Hr : Wc;
        return e && rn2(n2, t, e) && (t = i2), r(n2, I2(t, 3));
      }
      var Zl = L4(function(n2, t) {
        if (n2 == null)
          return [];
        var e = t.length;
        return e > 1 && rn2(n2, t[0], t[1]) ? t = [] : e > 2 && rn2(t[0], t[1], t[2]) && (t = [t[0]]), tu(n2, j4(t, 1), []);
      }), rr = So || function() {
        return k3.Date.now();
      };
      function Jl(n2, t) {
        if (typeof t != "function")
          throw new wn2(W3);
        return n2 = R2(n2), function() {
          if (--n2 < 1)
            return t.apply(this, arguments);
        };
      }
      function Xu(n2, t, e) {
        return t = e ? i2 : t, t = n2 && t == null ? n2.length : t, Kn2(n2, Mn2, i2, i2, i2, i2, t);
      }
      function Qu(n2, t) {
        var e;
        if (typeof t != "function")
          throw new wn2(W3);
        return n2 = R2(n2), function() {
          return --n2 > 0 && (e = t.apply(this, arguments)), n2 <= 1 && (t = i2), e;
        };
      }
      var Ii = L4(function(n2, t, e) {
        var r = vn2;
        if (e.length) {
          var s = nt3(e, Mt3(Ii));
          r |= Nn;
        }
        return Kn2(n2, r, t, e, s);
      }), Vu = L4(function(n2, t, e) {
        var r = vn2 | ot3;
        if (e.length) {
          var s = nt3(e, Mt3(Vu));
          r |= Nn;
        }
        return Kn2(t, r, n2, e, s);
      });
      function ku(n2, t, e) {
        t = e ? i2 : t;
        var r = Kn2(n2, Dn2, i2, i2, i2, i2, i2, t);
        return r.placeholder = ku.placeholder, r;
      }
      function ju(n2, t, e) {
        t = e ? i2 : t;
        var r = Kn2(n2, Et2, i2, i2, i2, i2, i2, t);
        return r.placeholder = ju.placeholder, r;
      }
      function na(n2, t, e) {
        var r, s, f3, o, c2, l, v = 0, _4 = false, m3 = false, w4 = true;
        if (typeof n2 != "function")
          throw new wn2(W3);
        t = xn(t) || 0, z2(e) && (_4 = !!e.leading, m3 = "maxWait" in e, f3 = m3 ? Q3(xn(e.maxWait) || 0, t) : f3, w4 = "trailing" in e ? !!e.trailing : w4);
        function A2(Z2) {
          var Ln = r, Qn = s;
          return r = s = i2, v = Z2, o = n2.apply(Qn, Ln), o;
        }
        function x3(Z2) {
          return v = Z2, c2 = le3(T2, t), _4 ? A2(Z2) : o;
        }
        function b4(Z2) {
          var Ln = Z2 - l, Qn = Z2 - v, wa = t - Ln;
          return m3 ? nn2(wa, f3 - Qn) : wa;
        }
        function E3(Z2) {
          var Ln = Z2 - l, Qn = Z2 - v;
          return l === i2 || Ln >= t || Ln < 0 || m3 && Qn >= f3;
        }
        function T2() {
          var Z2 = rr();
          if (E3(Z2))
            return N12(Z2);
          c2 = le3(T2, b4(Z2));
        }
        function N12(Z2) {
          return c2 = i2, w4 && r ? A2(Z2) : (r = s = i2, o);
        }
        function dn() {
          c2 !== i2 && cu(c2), v = 0, r = l = s = c2 = i2;
        }
        function sn2() {
          return c2 === i2 ? o : N12(rr());
        }
        function gn() {
          var Z2 = rr(), Ln = E3(Z2);
          if (r = arguments, s = this, l = Z2, Ln) {
            if (c2 === i2)
              return x3(l);
            if (m3)
              return cu(c2), c2 = le3(T2, t), A2(l);
          }
          return c2 === i2 && (c2 = le3(T2, t)), o;
        }
        return gn.cancel = dn, gn.flush = sn2, gn;
      }
      var Xl = L4(function(n2, t) {
        return Gs2(n2, 1, t);
      }), Ql = L4(function(n2, t, e) {
        return Gs2(n2, xn(t) || 0, e);
      });
      function Vl(n2) {
        return Kn2(n2, dr2);
      }
      function ir2(n2, t) {
        if (typeof n2 != "function" || t != null && typeof t != "function")
          throw new wn2(W3);
        var e = function() {
          var r = arguments, s = t ? t.apply(this, r) : r[0], f3 = e.cache;
          if (f3.has(s))
            return f3.get(s);
          var o = n2.apply(this, r);
          return e.cache = f3.set(s, o) || f3, o;
        };
        return e.cache = new (ir2.Cache || Gn)(), e;
      }
      ir2.Cache = Gn;
      function sr2(n2) {
        if (typeof n2 != "function")
          throw new wn2(W3);
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n2.call(this);
            case 1:
              return !n2.call(this, t[0]);
            case 2:
              return !n2.call(this, t[0], t[1]);
            case 3:
              return !n2.call(this, t[0], t[1], t[2]);
          }
          return !n2.apply(this, t);
        };
      }
      function kl(n2) {
        return Qu(2, n2);
      }
      var jl = Fc(function(n2, t) {
        t = t.length == 1 && O4(t[0]) ? G5(t[0], hn2(I2())) : G5(j4(t, 1), hn2(I2()));
        var e = t.length;
        return L4(function(r) {
          for (var s = -1, f3 = nn2(r.length, e); ++s < f3; )
            r[s] = t[s].call(this, r[s]);
          return cn2(n2, this, r);
        });
      }), xi = L4(function(n2, t) {
        var e = nt3(t, Mt3(xi));
        return Kn2(n2, Nn, i2, t, e);
      }), ta = L4(function(n2, t) {
        var e = nt3(t, Mt3(ta));
        return Kn2(n2, yt2, i2, t, e);
      }), np = Yn2(function(n2, t) {
        return Kn2(n2, Kt3, i2, i2, i2, t);
      });
      function tp(n2, t) {
        if (typeof n2 != "function")
          throw new wn2(W3);
        return t = t === i2 ? t : R2(t), L4(n2, t);
      }
      function ep(n2, t) {
        if (typeof n2 != "function")
          throw new wn2(W3);
        return t = t == null ? 0 : Q3(R2(t), 0), L4(function(e) {
          var r = e[t], s = st3(e, 0, t);
          return r && jn2(s, r), cn2(n2, this, s);
        });
      }
      function rp(n2, t, e) {
        var r = true, s = true;
        if (typeof n2 != "function")
          throw new wn2(W3);
        return z2(e) && (r = "leading" in e ? !!e.leading : r, s = "trailing" in e ? !!e.trailing : s), na(n2, t, { leading: r, maxWait: t, trailing: s });
      }
      function ip(n2) {
        return Xu(n2, 1);
      }
      function sp(n2, t) {
        return xi(fi(t), n2);
      }
      function up() {
        if (!arguments.length)
          return [];
        var n2 = arguments[0];
        return O4(n2) ? n2 : [n2];
      }
      function ap(n2) {
        return An2(n2, It3);
      }
      function fp(n2, t) {
        return t = typeof t == "function" ? t : i2, An2(n2, It3, t);
      }
      function op(n2) {
        return An2(n2, Tn | It3);
      }
      function cp(n2, t) {
        return t = typeof t == "function" ? t : i2, An2(n2, Tn | It3, t);
      }
      function hp(n2, t) {
        return t == null || Bs2(n2, t, V4(t));
      }
      function bn(n2, t) {
        return n2 === t || n2 !== n2 && t !== t;
      }
      var lp = Ve3(Qr), pp = Ve3(function(n2, t) {
        return n2 >= t;
      }), wt3 = Js2(function() {
        return arguments;
      }()) ? Js2 : function(n2) {
        return K3(n2) && F2.call(n2, "callee") && !Ns2.call(n2, "callee");
      }, O4 = d2.isArray, dp = gs2 ? hn2(gs2) : Cc;
      function an2(n2) {
        return n2 != null && ur2(n2.length) && !Jn(n2);
      }
      function Y4(n2) {
        return K3(n2) && an2(n2);
      }
      function gp(n2) {
        return n2 === true || n2 === false || K3(n2) && en2(n2) == Yt;
      }
      var ut3 = Ro || Hi2, vp = vs2 ? hn2(vs2) : Ic;
      function _p(n2) {
        return K3(n2) && n2.nodeType === 1 && !pe3(n2);
      }
      function mp(n2) {
        if (n2 == null)
          return true;
        if (an2(n2) && (O4(n2) || typeof n2 == "string" || typeof n2.splice == "function" || ut3(n2) || qt2(n2) || wt3(n2)))
          return !n2.length;
        var t = tn2(n2);
        if (t == yn || t == Sn)
          return !n2.size;
        if (he2(n2))
          return !jr(n2).length;
        for (var e in n2)
          if (F2.call(n2, e))
            return false;
        return true;
      }
      function wp(n2, t) {
        return fe2(n2, t);
      }
      function Pp(n2, t, e) {
        e = typeof e == "function" ? e : i2;
        var r = e ? e(n2, t) : i2;
        return r === i2 ? fe2(n2, t, i2, e) : !!r;
      }
      function Ei(n2) {
        if (!K3(n2))
          return false;
        var t = en2(n2);
        return t == me2 || t == qa || typeof n2.message == "string" && typeof n2.name == "string" && !pe3(n2);
      }
      function Ap(n2) {
        return typeof n2 == "number" && $s2(n2);
      }
      function Jn(n2) {
        if (!z2(n2))
          return false;
        var t = en2(n2);
        return t == we3 || t == Gi2 || t == Ma || t == Ga;
      }
      function ea(n2) {
        return typeof n2 == "number" && n2 == R2(n2);
      }
      function ur2(n2) {
        return typeof n2 == "number" && n2 > -1 && n2 % 1 == 0 && n2 <= Vn2;
      }
      function z2(n2) {
        var t = typeof n2;
        return n2 != null && (t == "object" || t == "function");
      }
      function K3(n2) {
        return n2 != null && typeof n2 == "object";
      }
      var ra = _s2 ? hn2(_s2) : Ec;
      function Cp(n2, t) {
        return n2 === t || kr(n2, t, gi(t));
      }
      function Ip(n2, t, e) {
        return e = typeof e == "function" ? e : i2, kr(n2, t, gi(t), e);
      }
      function xp(n2) {
        return ia(n2) && n2 != +n2;
      }
      function Ep(n2) {
        if (fh(n2))
          throw new S3(H3);
        return Xs2(n2);
      }
      function yp(n2) {
        return n2 === null;
      }
      function Sp(n2) {
        return n2 == null;
      }
      function ia(n2) {
        return typeof n2 == "number" || K3(n2) && en2(n2) == Jt;
      }
      function pe3(n2) {
        if (!K3(n2) || en2(n2) != qn2)
          return false;
        var t = De2(n2);
        if (t === null)
          return true;
        var e = F2.call(t, "constructor") && t.constructor;
        return typeof e == "function" && e instanceof e && Re2.call(e) == Io;
      }
      var yi = ms2 ? hn2(ms2) : yc;
      function Op(n2) {
        return ea(n2) && n2 >= -Vn2 && n2 <= Vn2;
      }
      var sa = ws2 ? hn2(ws2) : Sc;
      function ar(n2) {
        return typeof n2 == "string" || !O4(n2) && K3(n2) && en2(n2) == Qt;
      }
      function pn2(n2) {
        return typeof n2 == "symbol" || K3(n2) && en2(n2) == Pe3;
      }
      var qt2 = Ps2 ? hn2(Ps2) : Oc;
      function Rp(n2) {
        return n2 === i2;
      }
      function bp(n2) {
        return K3(n2) && tn2(n2) == Vt2;
      }
      function Lp(n2) {
        return K3(n2) && en2(n2) == Ka;
      }
      var Tp = Ve3(ni), Dp = Ve3(function(n2, t) {
        return n2 <= t;
      });
      function ua(n2) {
        if (!n2)
          return [];
        if (an2(n2))
          return ar(n2) ? On2(n2) : un2(n2);
        if (ne4 && n2[ne4])
          return co(n2[ne4]());
        var t = tn2(n2), e = t == yn ? qr : t == Sn ? ye : Bt2;
        return e(n2);
      }
      function Xn2(n2) {
        if (!n2)
          return n2 === 0 ? n2 : 0;
        if (n2 = xn(n2), n2 === ct3 || n2 === -ct3) {
          var t = n2 < 0 ? -1 : 1;
          return t * $a;
        }
        return n2 === n2 ? n2 : 0;
      }
      function R2(n2) {
        var t = Xn2(n2), e = t % 1;
        return t === t ? e ? t - e : t : 0;
      }
      function aa(n2) {
        return n2 ? gt2(R2(n2), 0, Hn) : 0;
      }
      function xn(n2) {
        if (typeof n2 == "number")
          return n2;
        if (pn2(n2))
          return ve2;
        if (z2(n2)) {
          var t = typeof n2.valueOf == "function" ? n2.valueOf() : n2;
          n2 = z2(t) ? t + "" : t;
        }
        if (typeof n2 != "string")
          return n2 === 0 ? n2 : +n2;
        n2 = ys2(n2);
        var e = pf.test(n2);
        return e || gf.test(n2) ? Zf(n2.slice(2), e ? 2 : 8) : lf.test(n2) ? ve2 : +n2;
      }
      function fa(n2) {
        return Un2(n2, fn(n2));
      }
      function Np(n2) {
        return n2 ? gt2(R2(n2), -Vn2, Vn2) : n2 === 0 ? n2 : 0;
      }
      function U4(n2) {
        return n2 == null ? "" : ln(n2);
      }
      var Hp = Wt(function(n2, t) {
        if (he2(t) || an2(t)) {
          Un2(t, V4(t), n2);
          return;
        }
        for (var e in t)
          F2.call(t, e) && se3(n2, e, t[e]);
      }), oa = Wt(function(n2, t) {
        Un2(t, fn(t), n2);
      }), fr2 = Wt(function(n2, t, e, r) {
        Un2(t, fn(t), n2, r);
      }), $p = Wt(function(n2, t, e, r) {
        Un2(t, V4(t), n2, r);
      }), Up = Yn2(Zr);
      function Wp(n2, t) {
        var e = Ut3(n2);
        return t == null ? e : qs2(e, t);
      }
      var Fp = L4(function(n2, t) {
        n2 = M2(n2);
        var e = -1, r = t.length, s = r > 2 ? t[2] : i2;
        for (s && rn2(t[0], t[1], s) && (r = 1); ++e < r; )
          for (var f3 = t[e], o = fn(f3), c2 = -1, l = o.length; ++c2 < l; ) {
            var v = o[c2], _4 = n2[v];
            (_4 === i2 || bn(_4, Nt2[v]) && !F2.call(n2, v)) && (n2[v] = f3[v]);
          }
        return n2;
      }), Mp = L4(function(n2) {
        return n2.push(i2, yu), cn2(ca, i2, n2);
      });
      function qp(n2, t) {
        return Cs2(n2, I2(t, 3), $n2);
      }
      function Bp(n2, t) {
        return Cs2(n2, I2(t, 3), Xr);
      }
      function Gp(n2, t) {
        return n2 == null ? n2 : Jr(n2, I2(t, 3), fn);
      }
      function zp(n2, t) {
        return n2 == null ? n2 : Ys2(n2, I2(t, 3), fn);
      }
      function Kp(n2, t) {
        return n2 && $n2(n2, I2(t, 3));
      }
      function Yp(n2, t) {
        return n2 && Xr(n2, I2(t, 3));
      }
      function Zp(n2) {
        return n2 == null ? [] : Ge3(n2, V4(n2));
      }
      function Jp(n2) {
        return n2 == null ? [] : Ge3(n2, fn(n2));
      }
      function Si2(n2, t, e) {
        var r = n2 == null ? i2 : vt2(n2, t);
        return r === i2 ? e : r;
      }
      function Xp(n2, t) {
        return n2 != null && Ru(n2, t, mc);
      }
      function Oi(n2, t) {
        return n2 != null && Ru(n2, t, wc);
      }
      var Qp = Au(function(n2, t, e) {
        t != null && typeof t.toString != "function" && (t = be2.call(t)), n2[t] = e;
      }, bi(on2)), Vp = Au(function(n2, t, e) {
        t != null && typeof t.toString != "function" && (t = be2.call(t)), F2.call(n2, t) ? n2[t].push(e) : n2[t] = [e];
      }, I2), kp = L4(ae4);
      function V4(n2) {
        return an2(n2) ? Fs2(n2) : jr(n2);
      }
      function fn(n2) {
        return an2(n2) ? Fs2(n2, true) : Rc(n2);
      }
      function jp(n2, t) {
        var e = {};
        return t = I2(t, 3), $n2(n2, function(r, s, f3) {
          zn(e, t(r, s, f3), r);
        }), e;
      }
      function nd(n2, t) {
        var e = {};
        return t = I2(t, 3), $n2(n2, function(r, s, f3) {
          zn(e, s, t(r, s, f3));
        }), e;
      }
      var td = Wt(function(n2, t, e) {
        ze3(n2, t, e);
      }), ca = Wt(function(n2, t, e, r) {
        ze3(n2, t, e, r);
      }), ed = Yn2(function(n2, t) {
        var e = {};
        if (n2 == null)
          return e;
        var r = false;
        t = G5(t, function(f3) {
          return f3 = it3(f3, n2), r || (r = f3.length > 1), f3;
        }), Un2(n2, pi(n2), e), r && (e = An2(e, Tn | Fn2 | It3, Qc));
        for (var s = t.length; s--; )
          si(e, t[s]);
        return e;
      });
      function rd(n2, t) {
        return ha(n2, sr2(I2(t)));
      }
      var id = Yn2(function(n2, t) {
        return n2 == null ? {} : Lc(n2, t);
      });
      function ha(n2, t) {
        if (n2 == null)
          return {};
        var e = G5(pi(n2), function(r) {
          return [r];
        });
        return t = I2(t), eu(n2, e, function(r, s) {
          return t(r, s[0]);
        });
      }
      function sd(n2, t, e) {
        t = it3(t, n2);
        var r = -1, s = t.length;
        for (s || (s = 1, n2 = i2); ++r < s; ) {
          var f3 = n2 == null ? i2 : n2[Wn2(t[r])];
          f3 === i2 && (r = s, f3 = e), n2 = Jn(f3) ? f3.call(n2) : f3;
        }
        return n2;
      }
      function ud(n2, t, e) {
        return n2 == null ? n2 : oe4(n2, t, e);
      }
      function ad(n2, t, e, r) {
        return r = typeof r == "function" ? r : i2, n2 == null ? n2 : oe4(n2, t, e, r);
      }
      var la = xu(V4), pa = xu(fn);
      function fd(n2, t, e) {
        var r = O4(n2), s = r || ut3(n2) || qt2(n2);
        if (t = I2(t, 4), e == null) {
          var f3 = n2 && n2.constructor;
          s ? e = r ? new f3() : [] : z2(n2) ? e = Jn(f3) ? Ut3(De2(n2)) : {} : e = {};
        }
        return (s ? mn2 : $n2)(n2, function(o, c2, l) {
          return t(e, o, c2, l);
        }), e;
      }
      function od(n2, t) {
        return n2 == null ? true : si(n2, t);
      }
      function cd(n2, t, e) {
        return n2 == null ? n2 : au(n2, t, fi(e));
      }
      function hd(n2, t, e, r) {
        return r = typeof r == "function" ? r : i2, n2 == null ? n2 : au(n2, t, fi(e), r);
      }
      function Bt2(n2) {
        return n2 == null ? [] : Mr(n2, V4(n2));
      }
      function ld(n2) {
        return n2 == null ? [] : Mr(n2, fn(n2));
      }
      function pd(n2, t, e) {
        return e === i2 && (e = t, t = i2), e !== i2 && (e = xn(e), e = e === e ? e : 0), t !== i2 && (t = xn(t), t = t === t ? t : 0), gt2(xn(n2), t, e);
      }
      function dd(n2, t, e) {
        return t = Xn2(t), e === i2 ? (e = t, t = 0) : e = Xn2(e), n2 = xn(n2), Pc(n2, t, e);
      }
      function gd(n2, t, e) {
        if (e && typeof e != "boolean" && rn2(n2, t, e) && (t = e = i2), e === i2 && (typeof t == "boolean" ? (e = t, t = i2) : typeof n2 == "boolean" && (e = n2, n2 = i2)), n2 === i2 && t === i2 ? (n2 = 0, t = 1) : (n2 = Xn2(n2), t === i2 ? (t = n2, n2 = 0) : t = Xn2(t)), n2 > t) {
          var r = n2;
          n2 = t, t = r;
        }
        if (e || n2 % 1 || t % 1) {
          var s = Us2();
          return nn2(n2 + s * (t - n2 + Yf("1e-" + ((s + "").length - 1))), t);
        }
        return ei(n2, t);
      }
      var vd = Ft3(function(n2, t, e) {
        return t = t.toLowerCase(), n2 + (e ? da(t) : t);
      });
      function da(n2) {
        return Ri2(U4(n2).toLowerCase());
      }
      function ga(n2) {
        return n2 = U4(n2), n2 && n2.replace(_f, so).replace($f, "");
      }
      function _d(n2, t, e) {
        n2 = U4(n2), t = ln(t);
        var r = n2.length;
        e = e === i2 ? r : gt2(R2(e), 0, r);
        var s = e;
        return e -= t.length, e >= 0 && n2.slice(e, s) == t;
      }
      function md(n2) {
        return n2 = U4(n2), n2 && Qa.test(n2) ? n2.replace(Yi2, uo) : n2;
      }
      function wd(n2) {
        return n2 = U4(n2), n2 && ef.test(n2) ? n2.replace(xr, "\\$&") : n2;
      }
      var Pd = Ft3(function(n2, t, e) {
        return n2 + (e ? "-" : "") + t.toLowerCase();
      }), Ad = Ft3(function(n2, t, e) {
        return n2 + (e ? " " : "") + t.toLowerCase();
      }), Cd = mu("toLowerCase");
      function Id(n2, t, e) {
        n2 = U4(n2), t = R2(t);
        var r = t ? Tt3(n2) : 0;
        if (!t || r >= t)
          return n2;
        var s = (t - r) / 2;
        return Qe4(Ue3(s), e) + n2 + Qe4($e4(s), e);
      }
      function xd(n2, t, e) {
        n2 = U4(n2), t = R2(t);
        var r = t ? Tt3(n2) : 0;
        return t && r < t ? n2 + Qe4(t - r, e) : n2;
      }
      function Ed(n2, t, e) {
        n2 = U4(n2), t = R2(t);
        var r = t ? Tt3(n2) : 0;
        return t && r < t ? Qe4(t - r, e) + n2 : n2;
      }
      function yd(n2, t, e) {
        return e || t == null ? t = 0 : t && (t = +t), Do(U4(n2).replace(Er2, ""), t || 0);
      }
      function Sd(n2, t, e) {
        return (e ? rn2(n2, t, e) : t === i2) ? t = 1 : t = R2(t), ri(U4(n2), t);
      }
      function Od() {
        var n2 = arguments, t = U4(n2[0]);
        return n2.length < 3 ? t : t.replace(n2[1], n2[2]);
      }
      var Rd = Ft3(function(n2, t, e) {
        return n2 + (e ? "_" : "") + t.toLowerCase();
      });
      function bd(n2, t, e) {
        return e && typeof e != "number" && rn2(n2, t, e) && (t = e = i2), e = e === i2 ? Hn : e >>> 0, e ? (n2 = U4(n2), n2 && (typeof t == "string" || t != null && !yi(t)) && (t = ln(t), !t && Lt3(n2)) ? st3(On2(n2), 0, e) : n2.split(t, e)) : [];
      }
      var Ld = Ft3(function(n2, t, e) {
        return n2 + (e ? " " : "") + Ri2(t);
      });
      function Td(n2, t, e) {
        return n2 = U4(n2), e = e == null ? 0 : gt2(R2(e), 0, n2.length), t = ln(t), n2.slice(e, e + t.length) == t;
      }
      function Dd(n2, t, e) {
        var r = a2.templateSettings;
        e && rn2(n2, t, e) && (t = i2), n2 = U4(n2), t = fr2({}, t, r, Eu);
        var s = fr2({}, t.imports, r.imports, Eu), f3 = V4(s), o = Mr(s, f3), c2, l, v = 0, _4 = t.interpolate || Ae3, m3 = "__p += '", w4 = Br((t.escape || Ae3).source + "|" + _4.source + "|" + (_4 === Zi2 ? hf : Ae3).source + "|" + (t.evaluate || Ae3).source + "|$", "g"), A2 = "//# sourceURL=" + (F2.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++qf + "]") + `
`;
        n2.replace(w4, function(E3, T2, N12, dn, sn2, gn) {
          return N12 || (N12 = dn), m3 += n2.slice(v, gn).replace(mf, ao), T2 && (c2 = true, m3 += `' +
__e(` + T2 + `) +
'`), sn2 && (l = true, m3 += `';
` + sn2 + `;
__p += '`), N12 && (m3 += `' +
((__t = (` + N12 + `)) == null ? '' : __t) +
'`), v = gn + E3.length, E3;
        }), m3 += `';
`;
        var x3 = F2.call(t, "variable") && t.variable;
        if (!x3)
          m3 = `with (obj) {
` + m3 + `
}
`;
        else if (of.test(x3))
          throw new S3(ft3);
        m3 = (l ? m3.replace(Ya, "") : m3).replace(Za, "$1").replace(Ja, "$1;"), m3 = "function(" + (x3 || "obj") + `) {
` + (x3 ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (c2 ? ", __e = _.escape" : "") + (l ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m3 + `return __p
}`;
        var b4 = _a(function() {
          return $5(f3, A2 + "return " + m3).apply(i2, o);
        });
        if (b4.source = m3, Ei(b4))
          throw b4;
        return b4;
      }
      function Nd(n2) {
        return U4(n2).toLowerCase();
      }
      function Hd(n2) {
        return U4(n2).toUpperCase();
      }
      function $d(n2, t, e) {
        if (n2 = U4(n2), n2 && (e || t === i2))
          return ys2(n2);
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = On2(t), f3 = Ss2(r, s), o = Os2(r, s) + 1;
        return st3(r, f3, o).join("");
      }
      function Ud(n2, t, e) {
        if (n2 = U4(n2), n2 && (e || t === i2))
          return n2.slice(0, bs2(n2) + 1);
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = Os2(r, On2(t)) + 1;
        return st3(r, 0, s).join("");
      }
      function Wd(n2, t, e) {
        if (n2 = U4(n2), n2 && (e || t === i2))
          return n2.replace(Er2, "");
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = Ss2(r, On2(t));
        return st3(r, s).join("");
      }
      function Fd(n2, t) {
        var e = ba, r = La;
        if (z2(t)) {
          var s = "separator" in t ? t.separator : s;
          e = "length" in t ? R2(t.length) : e, r = "omission" in t ? ln(t.omission) : r;
        }
        n2 = U4(n2);
        var f3 = n2.length;
        if (Lt3(n2)) {
          var o = On2(n2);
          f3 = o.length;
        }
        if (e >= f3)
          return n2;
        var c2 = e - Tt3(r);
        if (c2 < 1)
          return r;
        var l = o ? st3(o, 0, c2).join("") : n2.slice(0, c2);
        if (s === i2)
          return l + r;
        if (o && (c2 += l.length - c2), yi(s)) {
          if (n2.slice(c2).search(s)) {
            var v, _4 = l;
            for (s.global || (s = Br(s.source, U4(Ji2.exec(s)) + "g")), s.lastIndex = 0; v = s.exec(_4); )
              var m3 = v.index;
            l = l.slice(0, m3 === i2 ? c2 : m3);
          }
        } else if (n2.indexOf(ln(s), c2) != c2) {
          var w4 = l.lastIndexOf(s);
          w4 > -1 && (l = l.slice(0, w4));
        }
        return l + r;
      }
      function Md(n2) {
        return n2 = U4(n2), n2 && Xa.test(n2) ? n2.replace(Ki2, go) : n2;
      }
      var qd = Ft3(function(n2, t, e) {
        return n2 + (e ? " " : "") + t.toUpperCase();
      }), Ri2 = mu("toUpperCase");
      function va(n2, t, e) {
        return n2 = U4(n2), t = e ? i2 : t, t === i2 ? oo(n2) ? mo(n2) : no(n2) : n2.match(t) || [];
      }
      var _a = L4(function(n2, t) {
        try {
          return cn2(n2, i2, t);
        } catch (e) {
          return Ei(e) ? e : new S3(e);
        }
      }), Bd = Yn2(function(n2, t) {
        return mn2(t, function(e) {
          e = Wn2(e), zn(n2, e, Ii(n2[e], n2));
        }), n2;
      });
      function Gd(n2) {
        var t = n2 == null ? 0 : n2.length, e = I2();
        return n2 = t ? G5(n2, function(r) {
          if (typeof r[1] != "function")
            throw new wn2(W3);
          return [e(r[0]), r[1]];
        }) : [], L4(function(r) {
          for (var s = -1; ++s < t; ) {
            var f3 = n2[s];
            if (cn2(f3[0], this, r))
              return cn2(f3[1], this, r);
          }
        });
      }
      function zd(n2) {
        return gc(An2(n2, Tn));
      }
      function bi(n2) {
        return function() {
          return n2;
        };
      }
      function Kd(n2, t) {
        return n2 == null || n2 !== n2 ? t : n2;
      }
      var Yd = Pu(), Zd = Pu(true);
      function on2(n2) {
        return n2;
      }
      function Li2(n2) {
        return Qs2(typeof n2 == "function" ? n2 : An2(n2, Tn));
      }
      function Jd(n2) {
        return ks2(An2(n2, Tn));
      }
      function Xd(n2, t) {
        return js2(n2, An2(t, Tn));
      }
      var Qd = L4(function(n2, t) {
        return function(e) {
          return ae4(e, n2, t);
        };
      }), Vd = L4(function(n2, t) {
        return function(e) {
          return ae4(n2, e, t);
        };
      });
      function Ti(n2, t, e) {
        var r = V4(t), s = Ge3(t, r);
        e == null && !(z2(t) && (s.length || !r.length)) && (e = t, t = n2, n2 = this, s = Ge3(t, V4(t)));
        var f3 = !(z2(e) && "chain" in e) || !!e.chain, o = Jn(n2);
        return mn2(s, function(c2) {
          var l = t[c2];
          n2[c2] = l, o && (n2.prototype[c2] = function() {
            var v = this.__chain__;
            if (f3 || v) {
              var _4 = n2(this.__wrapped__), m3 = _4.__actions__ = un2(this.__actions__);
              return m3.push({ func: l, args: arguments, thisArg: n2 }), _4.__chain__ = v, _4;
            }
            return l.apply(n2, jn2([this.value()], arguments));
          });
        }), n2;
      }
      function kd() {
        return k3._ === this && (k3._ = xo), this;
      }
      function Di() {
      }
      function jd(n2) {
        return n2 = R2(n2), L4(function(t) {
          return nu(t, n2);
        });
      }
      var ng = ci(G5), tg = ci(As2), eg = ci(Hr);
      function ma(n2) {
        return _i(n2) ? $r(Wn2(n2)) : Tc(n2);
      }
      function rg(n2) {
        return function(t) {
          return n2 == null ? i2 : vt2(n2, t);
        };
      }
      var ig = Cu(), sg = Cu(true);
      function Ni2() {
        return [];
      }
      function Hi2() {
        return false;
      }
      function ug() {
        return {};
      }
      function ag() {
        return "";
      }
      function fg() {
        return true;
      }
      function og(n2, t) {
        if (n2 = R2(n2), n2 < 1 || n2 > Vn2)
          return [];
        var e = Hn, r = nn2(n2, Hn);
        t = I2(t), n2 -= Hn;
        for (var s = Fr(r, t); ++e < n2; )
          t(e);
        return s;
      }
      function cg(n2) {
        return O4(n2) ? G5(n2, Wn2) : pn2(n2) ? [n2] : un2(Wu(U4(n2)));
      }
      function hg(n2) {
        var t = ++Co;
        return U4(n2) + t;
      }
      var lg = Xe3(function(n2, t) {
        return n2 + t;
      }, 0), pg = hi("ceil"), dg = Xe3(function(n2, t) {
        return n2 / t;
      }, 1), gg = hi("floor");
      function vg(n2) {
        return n2 && n2.length ? Be4(n2, on2, Qr) : i2;
      }
      function _g(n2, t) {
        return n2 && n2.length ? Be4(n2, I2(t, 2), Qr) : i2;
      }
      function mg(n2) {
        return xs2(n2, on2);
      }
      function wg(n2, t) {
        return xs2(n2, I2(t, 2));
      }
      function Pg(n2) {
        return n2 && n2.length ? Be4(n2, on2, ni) : i2;
      }
      function Ag(n2, t) {
        return n2 && n2.length ? Be4(n2, I2(t, 2), ni) : i2;
      }
      var Cg = Xe3(function(n2, t) {
        return n2 * t;
      }, 1), Ig = hi("round"), xg = Xe3(function(n2, t) {
        return n2 - t;
      }, 0);
      function Eg(n2) {
        return n2 && n2.length ? Wr(n2, on2) : 0;
      }
      function yg(n2, t) {
        return n2 && n2.length ? Wr(n2, I2(t, 2)) : 0;
      }
      return a2.after = Jl, a2.ary = Xu, a2.assign = Hp, a2.assignIn = oa, a2.assignInWith = fr2, a2.assignWith = $p, a2.at = Up, a2.before = Qu, a2.bind = Ii, a2.bindAll = Bd, a2.bindKey = Vu, a2.castArray = up, a2.chain = Yu, a2.chunk = gh, a2.compact = vh, a2.concat = _h, a2.cond = Gd, a2.conforms = zd, a2.constant = bi, a2.countBy = El, a2.create = Wp, a2.curry = ku, a2.curryRight = ju, a2.debounce = na, a2.defaults = Fp, a2.defaultsDeep = Mp, a2.defer = Xl, a2.delay = Ql, a2.difference = mh, a2.differenceBy = wh, a2.differenceWith = Ph, a2.drop = Ah, a2.dropRight = Ch, a2.dropRightWhile = Ih, a2.dropWhile = xh, a2.fill = Eh, a2.filter = Sl, a2.flatMap = bl, a2.flatMapDeep = Ll, a2.flatMapDepth = Tl, a2.flatten = Bu, a2.flattenDeep = yh, a2.flattenDepth = Sh, a2.flip = Vl, a2.flow = Yd, a2.flowRight = Zd, a2.fromPairs = Oh, a2.functions = Zp, a2.functionsIn = Jp, a2.groupBy = Dl, a2.initial = bh, a2.intersection = Lh, a2.intersectionBy = Th, a2.intersectionWith = Dh, a2.invert = Qp, a2.invertBy = Vp, a2.invokeMap = Hl, a2.iteratee = Li2, a2.keyBy = $l, a2.keys = V4, a2.keysIn = fn, a2.map = er2, a2.mapKeys = jp, a2.mapValues = nd, a2.matches = Jd, a2.matchesProperty = Xd, a2.memoize = ir2, a2.merge = td, a2.mergeWith = ca, a2.method = Qd, a2.methodOf = Vd, a2.mixin = Ti, a2.negate = sr2, a2.nthArg = jd, a2.omit = ed, a2.omitBy = rd, a2.once = kl, a2.orderBy = Ul, a2.over = ng, a2.overArgs = jl, a2.overEvery = tg, a2.overSome = eg, a2.partial = xi, a2.partialRight = ta, a2.partition = Wl, a2.pick = id, a2.pickBy = ha, a2.property = ma, a2.propertyOf = rg, a2.pull = Uh, a2.pullAll = zu, a2.pullAllBy = Wh, a2.pullAllWith = Fh, a2.pullAt = Mh, a2.range = ig, a2.rangeRight = sg, a2.rearg = np, a2.reject = ql, a2.remove = qh, a2.rest = tp, a2.reverse = Ai, a2.sampleSize = Gl, a2.set = ud, a2.setWith = ad, a2.shuffle = zl, a2.slice = Bh, a2.sortBy = Zl, a2.sortedUniq = Xh, a2.sortedUniqBy = Qh, a2.split = bd, a2.spread = ep, a2.tail = Vh, a2.take = kh, a2.takeRight = jh, a2.takeRightWhile = nl, a2.takeWhile = tl, a2.tap = vl, a2.throttle = rp, a2.thru = tr2, a2.toArray = ua, a2.toPairs = la, a2.toPairsIn = pa, a2.toPath = cg, a2.toPlainObject = fa, a2.transform = fd, a2.unary = ip, a2.union = el, a2.unionBy = rl, a2.unionWith = il, a2.uniq = sl, a2.uniqBy = ul, a2.uniqWith = al, a2.unset = od, a2.unzip = Ci, a2.unzipWith = Ku, a2.update = cd, a2.updateWith = hd, a2.values = Bt2, a2.valuesIn = ld, a2.without = fl, a2.words = va, a2.wrap = sp, a2.xor = ol, a2.xorBy = cl, a2.xorWith = hl, a2.zip = ll, a2.zipObject = pl, a2.zipObjectDeep = dl, a2.zipWith = gl, a2.entries = la, a2.entriesIn = pa, a2.extend = oa, a2.extendWith = fr2, Ti(a2, a2), a2.add = lg, a2.attempt = _a, a2.camelCase = vd, a2.capitalize = da, a2.ceil = pg, a2.clamp = pd, a2.clone = ap, a2.cloneDeep = op, a2.cloneDeepWith = cp, a2.cloneWith = fp, a2.conformsTo = hp, a2.deburr = ga, a2.defaultTo = Kd, a2.divide = dg, a2.endsWith = _d, a2.eq = bn, a2.escape = md, a2.escapeRegExp = wd, a2.every = yl, a2.find = Ol, a2.findIndex = Mu, a2.findKey = qp, a2.findLast = Rl, a2.findLastIndex = qu, a2.findLastKey = Bp, a2.floor = gg, a2.forEach = Zu, a2.forEachRight = Ju, a2.forIn = Gp, a2.forInRight = zp, a2.forOwn = Kp, a2.forOwnRight = Yp, a2.get = Si2, a2.gt = lp, a2.gte = pp, a2.has = Xp, a2.hasIn = Oi, a2.head = Gu, a2.identity = on2, a2.includes = Nl, a2.indexOf = Rh, a2.inRange = dd, a2.invoke = kp, a2.isArguments = wt3, a2.isArray = O4, a2.isArrayBuffer = dp, a2.isArrayLike = an2, a2.isArrayLikeObject = Y4, a2.isBoolean = gp, a2.isBuffer = ut3, a2.isDate = vp, a2.isElement = _p, a2.isEmpty = mp, a2.isEqual = wp, a2.isEqualWith = Pp, a2.isError = Ei, a2.isFinite = Ap, a2.isFunction = Jn, a2.isInteger = ea, a2.isLength = ur2, a2.isMap = ra, a2.isMatch = Cp, a2.isMatchWith = Ip, a2.isNaN = xp, a2.isNative = Ep, a2.isNil = Sp, a2.isNull = yp, a2.isNumber = ia, a2.isObject = z2, a2.isObjectLike = K3, a2.isPlainObject = pe3, a2.isRegExp = yi, a2.isSafeInteger = Op, a2.isSet = sa, a2.isString = ar, a2.isSymbol = pn2, a2.isTypedArray = qt2, a2.isUndefined = Rp, a2.isWeakMap = bp, a2.isWeakSet = Lp, a2.join = Nh, a2.kebabCase = Pd, a2.last = In, a2.lastIndexOf = Hh, a2.lowerCase = Ad, a2.lowerFirst = Cd, a2.lt = Tp, a2.lte = Dp, a2.max = vg, a2.maxBy = _g, a2.mean = mg, a2.meanBy = wg, a2.min = Pg, a2.minBy = Ag, a2.stubArray = Ni2, a2.stubFalse = Hi2, a2.stubObject = ug, a2.stubString = ag, a2.stubTrue = fg, a2.multiply = Cg, a2.nth = $h, a2.noConflict = kd, a2.noop = Di, a2.now = rr, a2.pad = Id, a2.padEnd = xd, a2.padStart = Ed, a2.parseInt = yd, a2.random = gd, a2.reduce = Fl, a2.reduceRight = Ml, a2.repeat = Sd, a2.replace = Od, a2.result = sd, a2.round = Ig, a2.runInContext = h2, a2.sample = Bl, a2.size = Kl, a2.snakeCase = Rd, a2.some = Yl, a2.sortedIndex = Gh, a2.sortedIndexBy = zh, a2.sortedIndexOf = Kh, a2.sortedLastIndex = Yh, a2.sortedLastIndexBy = Zh, a2.sortedLastIndexOf = Jh, a2.startCase = Ld, a2.startsWith = Td, a2.subtract = xg, a2.sum = Eg, a2.sumBy = yg, a2.template = Dd, a2.times = og, a2.toFinite = Xn2, a2.toInteger = R2, a2.toLength = aa, a2.toLower = Nd, a2.toNumber = xn, a2.toSafeInteger = Np, a2.toString = U4, a2.toUpper = Hd, a2.trim = $d, a2.trimEnd = Ud, a2.trimStart = Wd, a2.truncate = Fd, a2.unescape = Md, a2.uniqueId = hg, a2.upperCase = qd, a2.upperFirst = Ri2, a2.each = Zu, a2.eachRight = Ju, a2.first = Gu, Ti(a2, function() {
        var n2 = {};
        return $n2(a2, function(t, e) {
          F2.call(a2.prototype, e) || (n2[e] = t);
        }), n2;
      }(), { chain: false }), a2.VERSION = p4, mn2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n2) {
        a2[n2].placeholder = a2;
      }), mn2(["drop", "take"], function(n2, t) {
        D2.prototype[n2] = function(e) {
          e = e === i2 ? 1 : Q3(R2(e), 0);
          var r = this.__filtered__ && !t ? new D2(this) : this.clone();
          return r.__filtered__ ? r.__takeCount__ = nn2(e, r.__takeCount__) : r.__views__.push({ size: nn2(e, Hn), type: n2 + (r.__dir__ < 0 ? "Right" : "") }), r;
        }, D2.prototype[n2 + "Right"] = function(e) {
          return this.reverse()[n2](e).reverse();
        };
      }), mn2(["filter", "map", "takeWhile"], function(n2, t) {
        var e = t + 1, r = e == Bi2 || e == Ha;
        D2.prototype[n2] = function(s) {
          var f3 = this.clone();
          return f3.__iteratees__.push({ iteratee: I2(s, 3), type: e }), f3.__filtered__ = f3.__filtered__ || r, f3;
        };
      }), mn2(["head", "last"], function(n2, t) {
        var e = "take" + (t ? "Right" : "");
        D2.prototype[n2] = function() {
          return this[e](1).value()[0];
        };
      }), mn2(["initial", "tail"], function(n2, t) {
        var e = "drop" + (t ? "" : "Right");
        D2.prototype[n2] = function() {
          return this.__filtered__ ? new D2(this) : this[e](1);
        };
      }), D2.prototype.compact = function() {
        return this.filter(on2);
      }, D2.prototype.find = function(n2) {
        return this.filter(n2).head();
      }, D2.prototype.findLast = function(n2) {
        return this.reverse().find(n2);
      }, D2.prototype.invokeMap = L4(function(n2, t) {
        return typeof n2 == "function" ? new D2(this) : this.map(function(e) {
          return ae4(e, n2, t);
        });
      }), D2.prototype.reject = function(n2) {
        return this.filter(sr2(I2(n2)));
      }, D2.prototype.slice = function(n2, t) {
        n2 = R2(n2);
        var e = this;
        return e.__filtered__ && (n2 > 0 || t < 0) ? new D2(e) : (n2 < 0 ? e = e.takeRight(-n2) : n2 && (e = e.drop(n2)), t !== i2 && (t = R2(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n2)), e);
      }, D2.prototype.takeRightWhile = function(n2) {
        return this.reverse().takeWhile(n2).reverse();
      }, D2.prototype.toArray = function() {
        return this.take(Hn);
      }, $n2(D2.prototype, function(n2, t) {
        var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a2[r ? "take" + (t == "last" ? "Right" : "") : t], f3 = r || /^find/.test(t);
        s && (a2.prototype[t] = function() {
          var o = this.__wrapped__, c2 = r ? [1] : arguments, l = o instanceof D2, v = c2[0], _4 = l || O4(o), m3 = function(T2) {
            var N12 = s.apply(a2, jn2([T2], c2));
            return r && w4 ? N12[0] : N12;
          };
          _4 && e && typeof v == "function" && v.length != 1 && (l = _4 = false);
          var w4 = this.__chain__, A2 = !!this.__actions__.length, x3 = f3 && !w4, b4 = l && !A2;
          if (!f3 && _4) {
            o = b4 ? o : new D2(this);
            var E3 = n2.apply(o, c2);
            return E3.__actions__.push({ func: tr2, args: [m3], thisArg: i2 }), new Pn(E3, w4);
          }
          return x3 && b4 ? n2.apply(this, c2) : (E3 = this.thru(m3), x3 ? r ? E3.value()[0] : E3.value() : E3);
        });
      }), mn2(["pop", "push", "shift", "sort", "splice", "unshift"], function(n2) {
        var t = Se2[n2], e = /^(?:push|sort|unshift)$/.test(n2) ? "tap" : "thru", r = /^(?:pop|shift)$/.test(n2);
        a2.prototype[n2] = function() {
          var s = arguments;
          if (r && !this.__chain__) {
            var f3 = this.value();
            return t.apply(O4(f3) ? f3 : [], s);
          }
          return this[e](function(o) {
            return t.apply(O4(o) ? o : [], s);
          });
        };
      }), $n2(D2.prototype, function(n2, t) {
        var e = a2[t];
        if (e) {
          var r = e.name + "";
          F2.call($t3, r) || ($t3[r] = []), $t3[r].push({ name: t, func: e });
        }
      }), $t3[Je3(i2, ot3).name] = [{ name: "wrapper", func: i2 }], D2.prototype.clone = Mo, D2.prototype.reverse = qo, D2.prototype.value = Bo, a2.prototype.at = _l, a2.prototype.chain = ml, a2.prototype.commit = wl, a2.prototype.next = Pl, a2.prototype.plant = Cl, a2.prototype.reverse = Il, a2.prototype.toJSON = a2.prototype.valueOf = a2.prototype.value = xl, a2.prototype.first = a2.prototype.head, ne4 && (a2.prototype[ne4] = Al), a2;
    }, Dt3 = wo();
    ht2 ? ((ht2.exports = Dt3)._ = Dt3, Lr._ = Dt3) : k3._ = Dt3;
  }).call(de3);
})(Ui2, Ui2.exports);
var qg = Object.defineProperty;
var Bg = Object.defineProperties;
var Gg = Object.getOwnPropertyDescriptors;
var xa = Object.getOwnPropertySymbols;
var zg = Object.prototype.hasOwnProperty;
var Kg = Object.prototype.propertyIsEnumerable;
var Ea = (C4, u4, i2) => u4 in C4 ? qg(C4, u4, { enumerable: true, configurable: true, writable: true, value: i2 }) : C4[u4] = i2;
var cr2 = (C4, u4) => {
  for (var i2 in u4 || (u4 = {}))
    zg.call(u4, i2) && Ea(C4, i2, u4[i2]);
  if (xa)
    for (var i2 of xa(u4))
      Kg.call(u4, i2) && Ea(C4, i2, u4[i2]);
  return C4;
};
var Yg = (C4, u4) => Bg(C4, Gg(u4));
function En2(C4, u4, i2) {
  let p4;
  const y3 = Wi2(C4);
  return u4.rpcMap && (p4 = u4.rpcMap[y3]), p4 || (p4 = `${Mg}?chainId=eip155:${y3}&projectId=${i2}`), p4;
}
function Wi2(C4) {
  return C4.includes("eip155") ? Number(C4.split(":")[1]) : Number(C4);
}
function Zg(C4, u4) {
  if (!u4.includes(C4))
    throw new Error(`Chain '${C4}' not approved. Please use one of the following: ${u4.toString()}`);
}
function Jg(C4) {
  return C4.map((u4) => `${u4.split(":")[0]}:${u4.split(":")[1]}`);
}
function Xg(C4, u4) {
  const i2 = Object.keys(u4.namespaces).filter((y3) => y3.includes(C4));
  if (!i2.length)
    return [];
  const p4 = [];
  return i2.forEach((y3) => {
    const H3 = u4.namespaces[y3].accounts;
    p4.push(...H3);
  }), p4;
}
function Qg(C4, u4 = {}) {
  const i2 = ya(C4), p4 = ya(u4);
  return Ui2.exports.merge(i2, p4);
}
function ya(C4) {
  var u4, i2, p4, y3;
  const H3 = {};
  if (!x(C4))
    return H3;
  for (const [W3, ft3] of Object.entries(C4)) {
    const zt2 = te(W3) ? [W3] : ft3.chains, pr2 = ft3.methods || [], Ct3 = ft3.events || [], Tn = ft3.rpcMap || {}, Fn2 = Ze(W3);
    H3[Fn2] = Yg(cr2(cr2({}, H3[Fn2]), ft3), { chains: O(zt2, (u4 = H3[Fn2]) == null ? void 0 : u4.chains), methods: O(pr2, (i2 = H3[Fn2]) == null ? void 0 : i2.methods), events: O(Ct3, (p4 = H3[Fn2]) == null ? void 0 : p4.events), rpcMap: cr2(cr2({}, Tn), (y3 = H3[Fn2]) == null ? void 0 : y3.rpcMap) });
  }
  return H3;
}
var At3 = (C4, u4) => {
  const i2 = (p4) => {
    p4.request !== u4.request || p4.topic !== u4.topic || (C4.events.removeListener("session_request_sent", i2), Vg(u4, C4.core.storage));
  };
  C4.on("session_request_sent", i2);
};
async function Vg(C4, u4) {
  try {
    const i2 = await u4.getItem("WALLETCONNECT_DEEPLINK_CHOICE");
    if (!i2)
      return;
    const p4 = typeof i2 == "string" ? JSON.parse(i2) : i2;
    let y3 = p4 == null ? void 0 : p4.href;
    if (typeof y3 != "string")
      return;
    y3.endsWith("/") && (y3 = y3.slice(0, -1));
    const H3 = `${y3}/wc?requestId=${C4.id}&sessionTopic=${C4.topic}`, W3 = ee();
    W3 === _.browser ? window.open(H3, "_self", "noreferrer noopener") : W3 === _.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(H3);
  } catch (i2) {
    console.error(i2);
  }
}
var Sa = {};
var J4 = (C4) => Sa[C4];
var Fi2 = (C4, u4) => {
  Sa[C4] = u4;
};
var kg = class {
  constructor(u4) {
    this.name = "polkadot", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      u4[i2] = this.createHttpProvider(i2, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(u4, this.namespace);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var jg = class {
  constructor(u4) {
    this.name = "eip155", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(u4) {
    var i2;
    switch (u4.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return this.handleSwitchChain(u4.request.params ? (i2 = u4.request.params[0]) == null ? void 0 : i2.chainId : "0x0"), null;
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
    }
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), await this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  setDefaultChain(u4, i2) {
    const p4 = Wi2(u4);
    if (!this.httpProviders[p4]) {
      const y3 = i2 || En2(`${this.name}:${p4}`, this.namespace, this.client.core.projectId);
      if (!y3)
        throw new Error(`No RPC url provided for chainId: ${p4}`);
      this.setHttpProvider(p4, y3);
    }
    this.chainId = p4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${p4}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId.toString();
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new HttpConnection(p4, J4("disableProviderPing")));
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      const y3 = Wi2(i2);
      u4[y3] = this.createHttpProvider(y3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const u4 = this.chainId, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  handleSwitchChain(u4) {
    const i2 = parseInt(u4, 16), p4 = `${this.name}:${i2}`;
    Zg(p4, this.namespace.chains), this.setDefaultChain(`${i2}`);
  }
};
var nv = class {
  constructor(u4) {
    this.name = "solana", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (!this.httpProviders[u4]) {
      const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      u4[i2] = this.createHttpProvider(i2, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var tv = class {
  constructor(u4) {
    this.name = "cosmos", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      u4[i2] = this.createHttpProvider(i2, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var ev = class {
  constructor(u4) {
    this.name = "cip34", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i2 || this.getCardanoRPCUrl(u4);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      const p4 = this.getCardanoRPCUrl(i2);
      u4[i2] = this.createHttpProvider(i2, p4);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  getCardanoRPCUrl(u4) {
    const i2 = this.namespace.rpcMap;
    if (i2)
      return i2[u4];
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || this.getCardanoRPCUrl(u4);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var rv = class {
  constructor(u4) {
    this.name = "elrond", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (!this.httpProviders[u4]) {
      const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      u4[i2] = this.createHttpProvider(i2, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var iv = class {
  constructor(u4) {
    this.name = "multiversx", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? (At3(this.client, u4), this.client.request(u4)) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i2) {
    if (!this.httpProviders[u4]) {
      const p4 = i2 || En2(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i2) => i2.split(":")[1] === this.chainId.toString()).map((i2) => i2.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i2) => {
      var p4;
      u4[i2] = this.createHttpProvider(i2, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i2]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i2 = this.httpProviders[u4];
    if (typeof i2 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i2;
  }
  setHttpProvider(u4, i2) {
    const p4 = this.createHttpProvider(u4, i2);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i2) {
    const p4 = i2 || En2(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default(p4, J4("disableProviderPing")));
  }
};
var sv = Object.defineProperty;
var uv = Object.defineProperties;
var av = Object.getOwnPropertyDescriptors;
var Oa = Object.getOwnPropertySymbols;
var fv = Object.prototype.hasOwnProperty;
var ov = Object.prototype.propertyIsEnumerable;
var Ra = (C4, u4, i2) => u4 in C4 ? sv(C4, u4, { enumerable: true, configurable: true, writable: true, value: i2 }) : C4[u4] = i2;
var hr2 = (C4, u4) => {
  for (var i2 in u4 || (u4 = {}))
    fv.call(u4, i2) && Ra(C4, i2, u4[i2]);
  if (Oa)
    for (var i2 of Oa(u4))
      ov.call(u4, i2) && Ra(C4, i2, u4[i2]);
  return C4;
};
var Mi2 = (C4, u4) => uv(C4, av(u4));
var lr2 = class {
  constructor(u4) {
    this.events = new import_events6.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = u4, this.logger = typeof (u4 == null ? void 0 : u4.logger) < "u" && typeof (u4 == null ? void 0 : u4.logger) != "string" ? u4.logger : (0, import_logger3.pino)((0, import_logger3.getDefaultLoggerOptions)({ level: (u4 == null ? void 0 : u4.logger) || Ca })), this.disableProviderPing = (u4 == null ? void 0 : u4.disableProviderPing) || false;
  }
  static async init(u4) {
    const i2 = new lr2(u4);
    return await i2.initialize(), i2;
  }
  async request(u4, i2) {
    const [p4, y3] = this.validateChain(i2);
    if (!this.session)
      throw new Error("Please call connect() before request()");
    return await this.getProvider(p4).request({ request: hr2({}, u4), chainId: `${p4}:${y3}`, topic: this.session.topic });
  }
  sendAsync(u4, i2, p4) {
    this.request(u4, p4).then((y3) => i2(null, y3)).catch((y3) => i2(y3, void 0));
  }
  async enable() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var u4;
    if (!this.session)
      throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (u4 = this.session) == null ? void 0 : u4.topic, reason: R("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(u4) {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (this.setNamespaces(u4), await this.cleanupPendingPairings(), !u4.skipPairing)
      return await this.pair(u4.pairingTopic);
  }
  on(u4, i2) {
    this.events.on(u4, i2);
  }
  once(u4, i2) {
    this.events.once(u4, i2);
  }
  removeListener(u4, i2) {
    this.events.removeListener(u4, i2);
  }
  off(u4, i2) {
    this.events.off(u4, i2);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(u4) {
    this.shouldAbortPairingAttempt = false;
    let i2 = 0;
    do {
      if (this.shouldAbortPairingAttempt)
        throw new Error("Pairing aborted");
      if (i2 >= this.maxPairingAttempts)
        throw new Error("Max auto pairing attempts reached");
      const { uri: p4, approval: y3 } = await this.client.connect({ pairingTopic: u4, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      p4 && (this.uri = p4, this.events.emit("display_uri", p4)), await y3().then((H3) => {
        this.session = H3;
      }).catch((H3) => {
        if (H3.message !== se2)
          throw H3;
        i2++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(u4, i2) {
    try {
      const [p4, y3] = this.validateChain(u4);
      this.getProvider(p4).setDefaultChain(y3, i2);
    } catch (p4) {
      if (!/Please call connect/.test(p4.message))
        throw p4;
    }
  }
  async cleanupPendingPairings(u4 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const i2 = this.client.pairing.getAll();
    if (C(i2)) {
      for (const p4 of i2)
        u4.deletePairings ? this.client.core.expirer.set(p4.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p4.topic);
      this.logger.info(`Inactive pairings cleared: ${i2.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces") || {}, this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const u4 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[u4]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await $3.init({ logger: this.providerOpts.logger || Ca, relayUrl: this.providerOpts.relayUrl || Ug, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, name: this.providerOpts.name }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (!this.session)
      throw new Error("Session not initialized. Please call connect() before enable()");
    const u4 = [...new Set(Object.keys(this.session.namespaces).map((i2) => Ze(i2)))];
    Fi2("client", this.client), Fi2("events", this.events), Fi2("disableProviderPing", this.disableProviderPing), u4.forEach((i2) => {
      if (!this.session)
        return;
      const p4 = Xg(i2, this.session), y3 = Jg(p4), H3 = Qg(this.namespaces, this.optionalNamespaces), W3 = Mi2(hr2({}, H3[i2]), { accounts: p4, chains: y3 });
      switch (i2) {
        case "eip155":
          this.rpcProviders[i2] = new jg({ namespace: W3 });
          break;
        case "solana":
          this.rpcProviders[i2] = new nv({ namespace: W3 });
          break;
        case "cosmos":
          this.rpcProviders[i2] = new tv({ namespace: W3 });
          break;
        case "polkadot":
          this.rpcProviders[i2] = new kg({ namespace: W3 });
          break;
        case "cip34":
          this.rpcProviders[i2] = new ev({ namespace: W3 });
          break;
        case "elrond":
          this.rpcProviders[i2] = new rv({ namespace: W3 });
          break;
        case "multiversx":
          this.rpcProviders[i2] = new iv({ namespace: W3 });
          break;
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u")
      throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (u4) => {
      this.events.emit("session_ping", u4);
    }), this.client.on("session_event", (u4) => {
      const { params: i2 } = u4, { event: p4 } = i2;
      p4.name === "accountsChanged" ? this.events.emit("accountsChanged", p4.data) : p4.name === "chainChanged" ? this.onChainChanged(i2.chainId) : this.events.emit(p4.name, p4.data), this.events.emit("session_event", u4);
    }), this.client.on("session_update", ({ topic: u4, params: i2 }) => {
      var p4;
      const { namespaces: y3 } = i2, H3 = (p4 = this.client) == null ? void 0 : p4.session.get(u4);
      this.session = Mi2(hr2({}, H3), { namespaces: y3 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: u4, params: i2 });
    }), this.client.on("session_delete", async (u4) => {
      await this.cleanup(), this.events.emit("session_delete", u4), this.events.emit("disconnect", Mi2(hr2({}, R("USER_DISCONNECTED")), { data: u4.topic }));
    }), this.on(at3.DEFAULT_CHAIN_CHANGED, (u4) => {
      this.onChainChanged(u4, true);
    });
  }
  getProvider(u4) {
    if (!this.rpcProviders[u4])
      throw new Error(`Provider not found: ${u4}`);
    return this.rpcProviders[u4];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((u4) => {
      var i2;
      this.getProvider(u4).updateNamespace((i2 = this.session) == null ? void 0 : i2.namespaces[u4]);
    });
  }
  setNamespaces(u4) {
    const { namespaces: i2, optionalNamespaces: p4, sessionProperties: y3 } = u4;
    if (!i2 || !Object.keys(i2).length)
      throw new Error("Namespaces must be not empty");
    this.namespaces = i2, this.optionalNamespaces = p4, this.sessionProperties = y3, this.persist("namespaces", i2), this.persist("optionalNamespaces", p4);
  }
  validateChain(u4) {
    const [i2, p4] = (u4 == null ? void 0 : u4.split(":")) || ["", ""];
    if (i2 && !Object.keys(this.namespaces).map((W3) => Ze(W3)).includes(i2))
      throw new Error(`Namespace '${i2}' is not configured. Please call connect() first with namespace config.`);
    if (i2 && p4)
      return [i2, p4];
    const y3 = Ze(Object.keys(this.namespaces)[0]), H3 = this.rpcProviders[y3].getDefaultChain();
    return [y3, H3];
  }
  async requestAccounts() {
    const [u4] = this.validateChain();
    return await this.getProvider(u4).requestAccounts();
  }
  onChainChanged(u4, i2 = false) {
    var p4;
    const [y3, H3] = this.validateChain(u4);
    i2 || this.getProvider(y3).setDefaultChain(H3), ((p4 = this.namespaces[y3]) != null ? p4 : this.namespaces[`${y3}:${H3}`]).defaultChain = H3, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", H3);
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(u4, i2) {
    this.client.core.storage.setItem(`${Ia}/${u4}`, i2);
  }
  async getFromStore(u4) {
    return await this.client.core.storage.getItem(`${Ia}/${u4}`);
  }
};
var cv = lr2;

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var j3 = "wc";
var $4 = "ethereum_provider";
var q4 = `${j3}@${2}:${$4}:`;
var N11 = "https://rpc.walletconnect.com/v1/";
var p3 = ["eth_sendTransaction", "personal_sign"];
var D = ["eth_accounts", "eth_requestAccounts", "eth_call", "eth_getBalance", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"];
var u3 = ["chainChanged", "accountsChanged"];
var U3 = ["message", "disconnect", "connect"];
var Q2 = Object.defineProperty;
var L3 = Object.defineProperties;
var H2 = Object.getOwnPropertyDescriptors;
var _3 = Object.getOwnPropertySymbols;
var G4 = Object.prototype.hasOwnProperty;
var K2 = Object.prototype.propertyIsEnumerable;
var y2 = (a2, t, s) => t in a2 ? Q2(a2, t, { enumerable: true, configurable: true, writable: true, value: s }) : a2[t] = s;
var I = (a2, t) => {
  for (var s in t || (t = {}))
    G4.call(t, s) && y2(a2, s, t[s]);
  if (_3)
    for (var s of _3(t))
      K2.call(t, s) && y2(a2, s, t[s]);
  return a2;
};
var O3 = (a2, t) => L3(a2, H2(t));
function C3(a2) {
  return Number(a2[0].split(":")[1]);
}
function w3(a2) {
  return `0x${a2.toString(16)}`;
}
function V3(a2) {
  const { chains: t, optionalChains: s, methods: i2, optionalMethods: e, events: n2, optionalEvents: c2, rpcMap: h2 } = a2;
  if (!C(t))
    throw new Error("Invalid chains");
  const o = t, r = i2 || p3, f3 = n2 || u3, b4 = { [C3(o)]: h2[C3(o)] }, E3 = { chains: o, methods: r, events: f3, rpcMap: b4 }, l = n2 == null ? void 0 : n2.filter((g3) => !u3.includes(g3)), d2 = i2 == null ? void 0 : i2.filter((g3) => !p3.includes(g3));
  if (!s && !c2 && !e && !(l != null && l.length) && !(d2 != null && d2.length))
    return { required: E3 };
  const M2 = (l == null ? void 0 : l.length) && (d2 == null ? void 0 : d2.length) || !s, A2 = { chains: [...new Set(M2 ? o.concat(s || []) : s)], methods: [...new Set(r.concat(e || []))], events: [...new Set(f3.concat(c2 || []))], rpcMap: h2 };
  return { required: E3, optional: A2 };
}
var m2 = class {
  constructor() {
    this.events = new import_events7.EventEmitter(), this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = q4, this.on = (t, s) => (this.events.on(t, s), this), this.once = (t, s) => (this.events.once(t, s), this), this.removeListener = (t, s) => (this.events.removeListener(t, s), this), this.off = (t, s) => (this.events.off(t, s), this), this.parseAccount = (t) => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};
  }
  static async init(t) {
    const s = new m2();
    return await s.initialize(t), s;
  }
  async request(t) {
    return await this.signer.request(t, this.formatChainId(this.chainId));
  }
  sendAsync(t, s) {
    this.signer.sendAsync(t, s, this.formatChainId(this.chainId));
  }
  get connected() {
    return this.signer.client ? this.signer.client.core.relayer.connected : false;
  }
  get connecting() {
    return this.signer.client ? this.signer.client.core.relayer.connecting : false;
  }
  async enable() {
    return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
  }
  async connect(t) {
    if (!this.signer.client)
      throw new Error("Provider not initialized. Call init() first");
    this.loadConnectOpts(t);
    const { required: s, optional: i2 } = V3(this.rpc);
    try {
      const e = await new Promise(async (c2, h2) => {
        var o;
        this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r) => {
          !r.open && !this.signer.session && (this.signer.abortPairingAttempt(), h2(new Error("Connection request reset. Please try again.")));
        })), await this.signer.connect(O3(I({ namespaces: { [this.namespace]: s } }, i2 && { optionalNamespaces: { [this.namespace]: i2 } }), { pairingTopic: t == null ? void 0 : t.pairingTopic })).then((r) => {
          c2(r);
        }).catch((r) => {
          h2(new Error(r.message));
        });
      });
      if (!e)
        return;
      this.setChainIds(this.rpc.chains);
      const n2 = On(e.namespaces, [this.namespace]);
      this.setAccounts(n2), this.events.emit("connect", { chainId: w3(this.chainId) });
    } catch (e) {
      throw this.signer.logger.error(e), e;
    } finally {
      this.modal && this.modal.closeModal();
    }
  }
  async disconnect() {
    this.session && await this.signer.disconnect(), this.reset();
  }
  get isWalletConnect() {
    return true;
  }
  get session() {
    return this.signer.session;
  }
  registerEventListeners() {
    this.signer.on("session_event", (t) => {
      const { params: s } = t, { event: i2 } = s;
      i2.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i2.data), this.events.emit("accountsChanged", this.accounts)) : i2.name === "chainChanged" ? this.setChainId(this.formatChainId(i2.data)) : this.events.emit(i2.name, i2.data), this.events.emit("session_event", t);
    }), this.signer.on("chainChanged", (t) => {
      const s = parseInt(t);
      this.chainId = s, this.events.emit("chainChanged", w3(this.chainId)), this.persist();
    }), this.signer.on("session_update", (t) => {
      this.events.emit("session_update", t);
    }), this.signer.on("session_delete", (t) => {
      this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", O3(I({}, R("USER_DISCONNECTED")), { data: t.topic, name: "USER_DISCONNECTED" }));
    }), this.signer.on("display_uri", (t) => {
      var s, i2;
      this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i2 = this.modal) == null || i2.openModal({ uri: t })), this.events.emit("display_uri", t);
    });
  }
  setHttpProvider(t) {
    this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: t.toString(16) }] });
  }
  isCompatibleChainId(t) {
    return typeof t == "string" ? t.startsWith(`${this.namespace}:`) : false;
  }
  formatChainId(t) {
    return `${this.namespace}:${t}`;
  }
  parseChainId(t) {
    return Number(t.split(":")[1]);
  }
  setChainIds(t) {
    const s = t.filter((i2) => this.isCompatibleChainId(i2)).map((i2) => this.parseChainId(i2));
    s.length && (this.chainId = s[0], this.events.emit("chainChanged", w3(this.chainId)), this.persist());
  }
  setChainId(t) {
    if (this.isCompatibleChainId(t)) {
      const s = this.parseChainId(t);
      this.chainId = s, this.setHttpProvider(s);
    }
  }
  parseAccountId(t) {
    const [s, i2, e] = t.split(":");
    return { chainId: `${s}:${i2}`, address: e };
  }
  setAccounts(t) {
    this.accounts = t.filter((s) => this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s) => this.parseAccountId(s).address), this.events.emit("accountsChanged", this.accounts);
  }
  getRpcConfig(t) {
    var s, i2;
    return { chains: ((s = t.chains) == null ? void 0 : s.map((e) => this.formatChainId(e))) || [`${this.namespace}:1`], optionalChains: t.optionalChains ? t.optionalChains.map((e) => this.formatChainId(e)) : void 0, methods: (t == null ? void 0 : t.methods) || p3, events: (t == null ? void 0 : t.events) || u3, optionalMethods: (t == null ? void 0 : t.optionalMethods) || [], optionalEvents: (t == null ? void 0 : t.optionalEvents) || [], rpcMap: (t == null ? void 0 : t.rpcMap) || this.buildRpcMap(t.chains.concat(t.optionalChains || []), t.projectId), showQrModal: Boolean(t == null ? void 0 : t.showQrModal), qrModalOptions: (i2 = t == null ? void 0 : t.qrModalOptions) != null ? i2 : void 0, projectId: t.projectId, metadata: t.metadata };
  }
  buildRpcMap(t, s) {
    const i2 = {};
    return t.forEach((e) => {
      i2[e] = this.getRpcUrl(e, s);
    }), i2;
  }
  async initialize(t) {
    if (this.rpc = this.getRpcConfig(t), this.chainId = C3(this.rpc.chains), this.signer = await cv.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: t.disableProviderPing }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal)
      try {
        const { Web3Modal: s } = await import("./index.es-XXO2CCJ6.js");
        this.modal = new s(I({ walletConnectVersion: 2, projectId: this.rpc.projectId, standaloneChains: this.rpc.chains }, this.rpc.qrModalOptions));
      } catch {
        throw new Error("To use QR modal, please install @web3modal/standalone package");
      }
  }
  loadConnectOpts(t) {
    if (!t)
      return;
    const { chains: s, optionalChains: i2, rpcMap: e } = t;
    s && C(s) && (this.rpc.chains = s.map((n2) => this.formatChainId(n2)), s.forEach((n2) => {
      this.rpc.rpcMap[n2] = (e == null ? void 0 : e[n2]) || this.getRpcUrl(n2);
    })), i2 && C(i2) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i2 == null ? void 0 : i2.map((n2) => this.formatChainId(n2)), i2.forEach((n2) => {
      this.rpc.rpcMap[n2] = (e == null ? void 0 : e[n2]) || this.getRpcUrl(n2);
    }));
  }
  getRpcUrl(t, s) {
    var i2;
    return ((i2 = this.rpc.rpcMap) == null ? void 0 : i2[t]) || `${N11}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;
  }
  async loadPersistedSession() {
    if (!this.session)
      return;
    const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`);
    this.setChainIds(t ? [this.formatChainId(t)] : this.session.namespaces[this.namespace].accounts), this.setAccounts(this.session.namespaces[this.namespace].accounts);
  }
  reset() {
    this.chainId = 1, this.accounts = [];
  }
  persist() {
    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
  }
  parseAccounts(t) {
    return typeof t == "string" || t instanceof String ? [this.parseAccount(t)] : t.map((s) => this.parseAccount(s));
  }
};
var Y3 = m2;
export {
  Y3 as EthereumProvider,
  U3 as OPTIONAL_EVENTS,
  D as OPTIONAL_METHODS,
  u3 as REQUIRED_EVENTS,
  p3 as REQUIRED_METHODS,
  m2 as default
};
/*! Bundled license information:

@walletconnect/universal-provider/dist/index.es.js:
  (**
  * @license
  * Lodash <https://lodash.com/>
  * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
  * Released under MIT license <https://lodash.com/license>
  * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
  * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  *)
*/
//# sourceMappingURL=index.es-SJLJXERY.js.map
